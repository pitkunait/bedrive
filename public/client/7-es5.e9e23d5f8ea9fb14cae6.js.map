{"version":3,"sources":["node_modules/lodash/_listCacheHas.js","node_modules/lodash/_cloneArrayBuffer.js","node_modules/copy-to-clipboard/index.js","node_modules/lodash/property.js","node_modules/lodash/_initCloneObject.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","node_modules/lodash/isSymbol.js","src/common/core/ui/confirm-modal/confirm-modal.component.ts","src/common/core/ui/confirm-modal/confirm-modal.component.html","node_modules/lodash/isArguments.js","node_modules/lodash/_stackSet.js","src/common/core/ui/chips/chips.module.ts","node_modules/lodash/stubArray.js","node_modules/lodash/isSet.js","src/common/datatable/datatable.module.ts","node_modules/lodash/_SetCache.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","node_modules/lodash/_baseIsNaN.js","node_modules/lodash/_coreJsData.js","src/common/shared/paginator.service.ts","src/common/datatable/utils/sort-datatable-data.ts","src/common/datatable/datatable.service.ts","src/common/datatable/utils/filter-datatable-data.ts","node_modules/lodash/_setCacheHas.js","node_modules/lodash/_toSource.js","node_modules/lodash/_basePropertyDeep.js","node_modules/lodash/memoize.js","node_modules/lodash/_Hash.js","node_modules/lodash/_hasPath.js","node_modules/lodash/_castPath.js","node_modules/lodash/_cloneBuffer.js","src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.ts","src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.html","src/common/uploads/validation/validations/allowed-extensions-validation.ts","src/common/uploads/formatted-file-size.pipe.ts","node_modules/lodash/_isPrototype.js","node_modules/lodash/_baseProperty.js","node_modules/lodash/_stackClear.js","node_modules/lodash/keys.js","node_modules/lodash/_nativeKeysIn.js","node_modules/lodash/_mapToArray.js","src/common/workspaces/workspace-config.ts","node_modules/lodash/_toKey.js","node_modules/lodash/_isKey.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","node_modules/lodash/_baseKeys.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/stubFalse.js","node_modules/lodash/cloneDeep.js","node_modules/lodash/_arrayPush.js","src/common/core/ui/svg-image/svg-cache.service.ts","src/common/core/ui/svg-image/svg-image.component.ts","src/common/core/ui/no-results-message/no-results-message.component.html","src/common/core/ui/no-results-message/no-results-message.component.ts","node_modules/lodash/_isStrictComparable.js","node_modules/lodash/_strictIndexOf.js","node_modules/lodash/_getNative.js","node_modules/lodash/isBuffer.js","node_modules/lodash/_baseAssignIn.js","src/common/uploads/directives/upload-button.directive.ts","node_modules/lodash/_isMasked.js","node_modules/toggle-selection/index.js","src/common/core/ui/overlay-panel/positions/left-position.ts","src/common/datatable/datatable-header/datatable-header.component.html","src/common/datatable/datatable-header/datatable-header.component.ts","node_modules/lodash/_copySymbolsIn.js","node_modules/lodash/_isKeyable.js","node_modules/lodash/isObjectLike.js","src/common/core/utils/remove-null-from-object.ts","node_modules/lodash/_getAllKeysIn.js","node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_stringToPath.js","src/common/uploads/uploads.module.ts","node_modules/lodash/_baseIsMap.js","node_modules/lodash/isObject.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_Promise.js","node_modules/lodash/_hashDelete.js","node_modules/lodash/_memoizeCapped.js","src/common/core/ui/chips/chip-input/chip-input.component.ts","src/common/core/ui/chips/chip-input/chip-input.component.html","node_modules/lodash/_matchesStrictComparable.js","src/common/datatable/selection/table-header-checkbox.component.ts","src/common/core/ui/svg-image/svg-image.module.ts","src/common/core/ui/no-results-message/no-results-message.module.ts","node_modules/lodash/_Uint8Array.js","node_modules/lodash/_mapCacheGet.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/_baseHasIn.js","src/common/core/ui/skeleton/skeleton.component.ts","node_modules/lodash/_listCacheClear.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_baseFindIndex.js","node_modules/lodash/_root.js","node_modules/lodash/_stackDelete.js","node_modules/lodash/_baseUniq.js","node_modules/lodash/_arrayFilter.js","node_modules/lodash/_getPrototype.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/_assignValue.js","node_modules/lodash/_getSymbols.js","node_modules/lodash/_baseIsNative.js","src/common/core/utils/has-key.ts","node_modules/lodash/_getValue.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/_defineProperty.js","node_modules/lodash/_getMatchData.js","node_modules/lodash/_baseClone.js","node_modules/lodash/_WeakMap.js","src/common/uploads/validation/validations/blocked-extensions-validation.ts","node_modules/lodash/_copyArray.js","node_modules/lodash/_baseKeysIn.js","node_modules/lodash/_getMapData.js","node_modules/lodash/_arraySome.js","node_modules/lodash/_getTag.js","node_modules/lodash/_baseIndexOf.js","node_modules/lodash/_hashClear.js","src/common/datatable/columns/user-column/user-column.component.html","src/common/datatable/columns/user-column/user-column.component.ts","node_modules/lodash/_baseTimes.js","src/common/datatable/table-sort-header/table-sort-header.component.ts","src/common/datatable/table-sort-header/table-sort-header.component.html","node_modules/lodash/_nativeKeys.js","node_modules/lodash/_copySymbols.js","node_modules/lodash/_stackHas.js","src/common/workspaces/workspaces.service.ts","src/common/workspaces/types/workspace-invite-notif.ts","node_modules/lodash/_freeGlobal.js","node_modules/lodash/_baseAssign.js","node_modules/lodash/_cloneDataView.js","node_modules/rxjs/_esm2015/internal/operators/mapTo.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","node_modules/lodash/_ListCache.js","node_modules/lodash/_arrayIncludesWith.js","node_modules/lodash/isEqual.js","node_modules/lodash/_nativeCreate.js","(webpack)/buildin/module.js","node_modules/lodash/isArray.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_baseMatches.js","node_modules/lodash/_baseGet.js","node_modules/lodash/_listCacheDelete.js","node_modules/lodash/_cloneRegExp.js","node_modules/lodash/_arrayLikeKeys.js","src/common/datatable/datatable-header/datatable-header-search-input/datatable-header-search-input.component.ts","src/common/datatable/datatable-header/datatable-header-search-input/datatable-header-search-input.component.html","node_modules/lodash/isTypedArray.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_createSet.js","node_modules/lodash/_baseCreate.js","node_modules/lodash/toString.js","node_modules/lodash/_MapCache.js","node_modules/lodash/_baseIsEqualDeep.js","src/common/datatable/selection/table-body-checkbox.component.ts","node_modules/lodash/_arrayMap.js","node_modules/lodash/_Map.js","node_modules/lodash/_hashHas.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_Stack.js","node_modules/lodash/_setCacheAdd.js","node_modules/lodash/_stackGet.js","node_modules/lodash/_arrayEach.js","node_modules/rxjs/_esm2015/internal/operators/throttle.js","node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","src/common/uploads/validation/default-upload-validator.ts","src/common/uploads/upload-queue/upload-queue.service.ts","src/common/uploads/upload-queue/upload-queue-item.ts","node_modules/lodash/hasIn.js","node_modules/lodash/_baseAssignValue.js","src/common/core/ui/format-pipes/formatted-date.pipe.ts","src/common/datatable/delete-resource-message.ts","node_modules/lodash/_arrayIncludes.js","node_modules/lodash/_copyObject.js","node_modules/lodash/_mapCacheDelete.js","src/common/core/ui/format-pipes/format-pipes.module.ts","node_modules/lodash/_overArg.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","node_modules/lodash/isFunction.js","node_modules/lodash/eq.js","node_modules/lodash/_baseIsMatch.js","src/common/core/ui/skeleton/skeleton.module.ts","node_modules/lodash/keysIn.js","node_modules/lodash/_nodeUtil.js","node_modules/lodash/get.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_getSymbolsIn.js","node_modules/lodash/_equalArrays.js","node_modules/lodash/_cloneSymbol.js","node_modules/lodash/_mapCacheHas.js","node_modules/lodash/uniqBy.js","node_modules/lodash/_getAllKeys.js","node_modules/lodash/_setToArray.js","src/common/uploads/upload-progress-bar/upload-progress-bar.component.ts","src/common/uploads/upload-progress-bar/upload-progress-bar.component.html","src/common/datatable/datatable-footer/datatable-footer.component.ts","src/common/datatable/datatable-footer/datatable-footer.component.html","node_modules/lodash/_baseUnary.js","src/common/core/ui/format-pipes/favicon.pipe.ts","src/common/core/utils/get-favicon-from-url.ts","node_modules/lodash/_equalObjects.js","node_modules/lodash/isLength.js","node_modules/lodash/_listCacheGet.js","node_modules/lodash/_DataView.js","node_modules/lodash/_hashGet.js","node_modules/lodash/_baseIteratee.js","node_modules/lodash/noop.js","src/app/drive/state/actions/events.ts","src/app/drive/drive-urls.service.ts","src/app/drive/drive-entry-api.service.ts","src/app/drive/folders/api/folders-api.service.ts","src/app/drive/uploads/drive-upload-validator.ts","src/app/drive/state/drive-state.ts","src/app/drive/files/components/file-icon/file-icon.component.ts","src/app/drive/state/actions/commands.ts","src/app/drive/state/models/drive-page.ts","src/app/drive/state/models/drive-state-model-defaults.ts","src/app/drive/state/models/drive-state-model.ts","src/app/drive/messages/loading-toast/loading-toast-messages.ts","src/app/drive/upload-input-config.ts","src/app/drive/folders/api/folders-api-routes.enum.ts","src/app/drive/sidebar/folders-tree/build-folder-tree.ts","src/app/drive/entries/supported-entry-types.ts","src/common/core/utils/kebab-case.ts","src/app/drive/files/components/file-icon/file-icon.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.ts","src/app/drive/sharing/state/share-dialog.state.ts","src/app/drive/sharing/shares-api.service.ts","src/app/drive/permissions/drive-entry-permissions.ts","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.html","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.ts","src/app/drive/sharing/entries-access-table/entries-access-table.component.html","src/app/drive/sharing/entries-access-table/entries-access-table.component.ts","src/app/drive/sharing/share-dialog/share-dialog.component.html","src/app/drive/sharing/share-dialog/share-dialog.component.ts","src/app/drive/sharing/links/shareable-links-api.service.ts","src/app/drive/sharing/links/share-link.state.ts","src/app/drive/sharing/links/link-options/link-options.component.html","src/app/drive/sharing/links/link-options/link-options.component.ts","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.html","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.ts","src/common/core/utils/share-link-socially.ts","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.html","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.ts","node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/tree.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tree.js","src/app/drive/sidebar/folders-tree/folders-tree.service.ts","src/common/core/ui/context-menu/context-menu.directive.ts","src/common/core/ui/context-menu/context-menu.service.ts","src/app/drive/interactions/drop-targets/folder-drop-target.directive.ts","src/app/drive/interactions/drop-targets/base-drop-target.ts","src/common/core/ui/context-menu/available-context-menus.ts","src/common/core/ui/context-menu/context-menu-ref.ts","src/common/core/ui/context-menu/context-menu-data.ts","src/app/drive/sidebar/folders-tree/folders-tree.component.html","src/app/drive/sidebar/folders-tree/folders-tree.component.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.html","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.html","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.ts","src/app/drive/context-actions/actions/entry-actions.ts","src/app/drive/context-actions/drive-context-actions.ts","src/app/drive/context-actions/actions/folder-actions.ts","src/app/drive/context-actions/actions/trash-actions.ts","src/app/drive/context-actions/actions/shares-actions.ts","src/app/drive/context-actions/actions/trash-page-actions.ts","src/app/drive/interactions/drive-dom-cache.service.ts","src/app/drive/search/search-file-types.ts","src/common/core/types/pagination/pagination-response.ts","src/app/drive/search/main-searchbar/main-searchbar.component.html","src/app/drive/search/main-searchbar/main-searchbar.component.ts","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.ts","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.html","src/common/core/ui/skeleton/skeleton-animations.ts","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.html","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.ts","src/common/workspaces/workspace-selector/workspace-selector.component.html","src/common/workspaces/workspace-selector/workspace-selector.component.ts","src/app/drive/sidebar/sidebar.component.ts","src/app/drive/sidebar/sidebar.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.ts","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.html","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.ts","src/app/drive/details-sidebar/details-panel/details-panel.component.html","src/app/drive/details-sidebar/details-panel/details-panel.component.ts","src/app/drive/details-sidebar/details-sidebar.component.html","src/app/drive/details-sidebar/details-sidebar.component.ts","src/app/drive/interactions/drive-hammer-interactions.directive.ts","src/app/drive/interactions/drag-entry.service.ts","src/app/drive/interactions/files-drag-select.service.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.ts","src/app/drive/interactions/toggle-selected-class.directive.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.html","src/common/uploads/utils/read-uploaded-folders.ts","src/common/uploads/directives/upload-dropzone.directive.ts","src/app/drive/interactions/drive-infinite-scroll.directive.ts","src/common/core/ui/infinite-scroll/infinite.scroll.ts","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.ts","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.html","src/app/drive/entries/available-sorts.ts","src/app/drive/header/entries-sort-button/entries-sort-button.component.html","src/app/drive/header/entries-sort-button/entries-sort-button.component.ts","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.html","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.ts","src/app/drive/header/file-list-header/file-list-header.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.html","src/app/drive/header/file-list-header/file-list-header.component.html","src/app/drive/drive.component.html","src/app/drive/drive.component.ts","src/common/core/keybinds/keybinds.service.ts","src/common/core/keybinds/keycodes.enum.ts","src/app/drive/files/components/files-grid/files-grid.component.html","src/app/drive/files/components/files-grid/files-grid.component.ts","src/app/drive/files/components/files-list/files-list.component.html","src/app/drive/files/components/files-list/files-list.component.ts","src/app/drive/messages/no-search-entries/no-search-entries.component.ts","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.ts","src/app/drive/messages/no-starred-entries/no-starred-entries.component.ts","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.ts","src/app/drive/messages/no-folder-entries/no-folder-entries.component.ts","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.html","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.html","src/app/drive/messages/no-starred-entries/no-starred-entries.component.html","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.html","src/app/drive/messages/no-search-entries/no-search-entries.component.html","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.html","src/app/drive/messages/no-folder-entries/no-folder-entries.component.html","src/app/drive/entries/entries-container/entries-container.component.html","src/app/drive/entries/entries-container/entries-container.component.ts","src/common/file-preview/base-file-preview.ts","src/common/file-preview/current-preview-file.ts","src/common/file-preview/preview-url-transformer.ts","src/common/file-preview/default-preview/default-preview.component.html","src/common/file-preview/default-preview/default-preview.component.ts","src/common/file-preview/text-preview/text-preview.component.html","src/common/file-preview/text-preview/text-preview.component.ts","src/common/file-preview/audio-preview/audio-preview.component.html","src/common/file-preview/audio-preview/audio-preview.component.ts","src/common/file-preview/video-preview/video-preview.component.html","src/common/file-preview/video-preview/video-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.ts","src/common/file-preview/pdf-preview/pdf-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.html","src/common/file-preview/pdf-preview/pdf-preview.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.ts","src/common/file-preview/preview-files.service.ts","src/common/file-preview/available-previews.ts","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.html","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.html","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.ts","src/common/file-preview/preview-container/preview-container.component.html","src/common/file-preview/preview-container/preview-container.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.html","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.ts","src/app/drive/preview/folder-preview/folder-preview.component.html","src/app/drive/preview/folder-preview/folder-preview.component.ts","src/app/drive/preview/link-preview-container/link-preview-container.component.html","src/app/drive/preview/link-preview-container/link-preview-container.component.ts","src/app/drive/drive-routing.module.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","src/app/drive/context-actions/drive-context-menus.ts","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.html","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.ts","src/app/drive/uploads/uploads-panel/uploads-panel.component.html","src/app/drive/uploads/uploads-panel/uploads-panel.component.ts","src/app/drive/state/handlers/donwlod-handler.ts","src/app/drive/state/handlers/overlay-handler.ts","src/app/drive/state/handlers/toast-handler.ts","src/app/drive/messages/loading-toast/loading-toast.component.ts","src/app/drive/state/handlers/dialog-handler.ts","src/app/drive/state/handlers/upload-panel-handler.ts","src/app/drive/state/handlers/remove-star-handler.ts","src/app/drive/state/handlers/page-load-handler.ts","src/app/drive/state/handlers/page-change-handler.ts","src/app/drive/state/handlers/reset-scroll-handler.ts","src/app/drive/sharing/sharing.module.ts","src/common/core/ui/context-menu/context-menu.module.ts","src/common/file-preview/file-preview.module.ts","src/common/workspaces/workspace-selector/workspace-selector.module.ts","src/app/drive/drive.module.ts","src/common/uploads/utils/download-file-from-url.ts","src/app/drive/messages/loading-toast/loading-toast.component.html","node_modules/lodash/_baseIsSet.js","node_modules/lodash/_baseIsEqual.js","node_modules/lodash/_isIndex.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","node_modules/lodash/_initCloneByTag.js","node_modules/lodash/_cacheHas.js","node_modules/lodash/_assocIndexOf.js","node_modules/lodash/_Set.js","node_modules/lodash/_initCloneArray.js","node_modules/lodash/_cloneTypedArray.js","node_modules/lodash/isMap.js","node_modules/lodash/identity.js","node_modules/lodash/_baseToString.js"],"names":["assocIndexOf","module","exports","key","this","__data__","Uint8Array","arrayBuffer","result","constructor","byteLength","set","deselectCurrent","clipboardToIE11Formatting","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","baseProperty","basePropertyDeep","isKey","toKey","path","baseCreate","getPrototype","isPrototype","object","_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","ctx_r0","id","_classList","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","_MatAutocompleteMixinBase","MatAutocompleteBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","super","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","_keyManager","withWrap","change","subscribe","index","emit","toArray","_setVisibility","unsubscribe","scrollTop","panel","nativeElement","length","_setVisibilityClasses","markForCheck","event","classList","_visibleClass","_hiddenClass","value","split","reduce","className","trim","ɵfac","t","ɵdir","type","viewQuery","_t","template","first","inputs","panelWidth","outputs","features","MatAutocomplete","arguments","ɵMatAutocomplete_BaseFactory","ɵcmp","selectors","contentQueries","dirIndex","optionGroups","hostAttrs","disableRipple","exportAs","provide","useExisting","ngContentSelectors","decls","vars","consts","directives","styles","encapsulation","changeDetection","_MatAutocompleteOriginBase","elementRef","MatAutocompleteOrigin","ɵMatAutocompleteOrigin_BaseFactory","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","pipe","_scrollStrategy","_getWindow","runOutsideAngular","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","clickTarget","_isInsideShadowRoot","composedPath","target","formField","customOrigin","connectedTo","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","activeItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","activeItemIndex","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","overlayRef","setOrigin","_getConnectedElement","updateSize","width","_getPanelWidth","_portal","create","_getOverlayConfig","keydownEvents","altKey","next","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","positions","belowPositions","originX","originY","overlayX","overlayY","panelClass","_aboveClass","abovePositions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","element","readOnly","_a","defaultView","labelCount","_setScrollTop","_getHostElement","newScrollPosition","offsetTop","offsetHeight","_getScrollTop","tabOut","_getOutsideClickStream","detachments","autocompleteDisabled","ɵMatAutocompleteTrigger_BaseFactory","hostVars","hostBindings","_handleFocus","$event","_handleInput","_handleKeydown","toString","MatAutocompleteModule","ɵmod","ɵinj","providers","imports","baseGetTag","isObjectLike","ConfirmModalComponent","dialogRef","data","i18n","settings","ok","cancel","replacements","close","confirm","baseIsArguments","objectProto","Object","prototype","hasOwnProperty","propertyIsEnumerable","isArguments","call","ListCache","Map","MapCache","pairs","LARGE_ARRAY_SIZE","push","size","ChipsModule","baseIsSet","baseUnary","nodeUtil","nodeIsSet","isSet","DatatableModule","setCacheAdd","setCacheHas","SetCache","values","add","has","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","checked","_MatSlideToggleMixinBase","_focusMonitor","tabIndex","_animationMode","_","_uniqueId","_required","_checked","name","labelPosition","ariaLabel","ariaLabelledby","toggleChange","parseInt","monitor","focusOrigin","_inputElement","stopMonitoring","_emitChangeEvent","focusVia","_thumbEl","_thumbBarEl","color","required","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","_MatSlideToggleRequiredValidatorModule","MatSlideToggleModule","root","Paginator","router","http","localStorage","params$","BehaviorSubject","paginatedOnce$","loading$","response$","dontUpdateQueryParams","perPageCacheKey","noResults$","r","pagination","initialData","userParams","url","queryParams","subscription","currentQueryParams","perPage","per_page","page","current_page","init","current","total","paginate","newPerPage","routerState","snapshot","uri","switchMap","params","firstPagination","get","of","tap","updateQueryParams","response","Array","isArray","join","navigate","replaceUrl","currentPage","last_page","sortingDataAccessor","sortHeaderId","numberValue","Number","DatatableService","modal","sort$","filters$","staticParams$","paginator","ignoreNextParamChange","originalData$","data$","selectedRows$","config","staticParams","connectToPaginator","mainSub","combineLatest","debounceTime","assign","entries","keys","applyLocalTransforms","paginatorSub","pairwise","prev","infiniteScroll","query","filter","obj","dataStr","objectToStr","currentTerm","toLowerCase","transformedFilter","indexOf","orderBy","orderDir","sort","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filters","cmp","open","beforeClosed","modifiedResource","reset","resource","afterClosed","confirmed","tableData","funcToString","Function","func","baseGet","memoize","resolver","TypeError","memoized","args","apply","cache","Cache","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","clear","entry","castPath","isIndex","isLength","hasFunc","stringToPath","freeExports","nodeType","freeModule","Buffer","allocUnsafe","buffer","isDeep","slice","copy","DatatableFiltersPanelComponent","overlayPanelRef","dialogContainer","AllowedExtensionsValidation","errorMessage","extensions","file","some","extension","FormattedFileSizePipe","precision","bytes","isNaN","String","isFinite","Ctor","arrayLikeKeys","baseKeys","isArrayLike","WORKSPACE_CONFIG","isSymbol","reIsDeepProp","reIsPlainProp","MAT_CHIP_REMOVE","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","_MatChipMixinBase","MatChip","_ngZone","platform","globalRippleOptions","animationMode","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_disabled","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","hasAttribute","tagName","chip","_removeTriggerEvents","_dispatchSelectionChange","_markForCheck","isUserInput","removable","remove","selectable","toggleSelected","run","coercedValue","_value","avatar","trailingIcon","removeIcon","_handleClick","_blur","ariaSelected","MatChipRemove","_parentChip","nodeName","setAttribute","parentChip","MAT_CHIPS_DEFAULT_OPTIONS","_MatChipListMixinBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_multiple","_compareWith","o1","o2","ariaOrientation","valueChange","valueAccessor","chips","withVerticalOrientation","withHomeAndEnd","withHorizontalOrientation","dir","_allowFocusEscape","_syncChipsState","_resetChips","_initializeSelection","_updateTabIndex","_updateFocusForDestroyedChips","stateChanges","_selectionModel","multiple","undefined","updateErrorState","_dropSubscriptions","inputElement","_chipInput","ids","_ariaDescribedby","_setSelectionByValue","_originatesFromChip","focused","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","newChipIndex","Math","min","_clearSelection","currentValue","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","fallbackValue","valueToEmit","_hasFocusedChip","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","empty","writeValue","placeholder","_placeholder","_keydown","role","errorState","compareWith","errorStateMatcher","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_chipList","_emitChipEnd","addOnBlur","_isSeparatorKey","input","Set","registerInput","_focus","_onInput","invalid","chipList","ɵ0","MatChipsModule","useValue","nativeKeys","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","tag","unmasked","baseClone","CLONE_DEEP_FLAG","array","offset","SvgCacheService","inProgressUrlFetches","fileName","endsWith","cloneSvg","fetchIcon","svgText","svgElementFromString","svg","inProgressFetch","req","responseType","finalize","share","str","div","innerHTML","querySelector","cloneNode","SvgImageComponent","el","svgIconChanges","currentSvgFetch","take","setSvgElement","previousValue","clearSvgElement","styleTags","querySelectorAll","i","layoutElement","childCount","childNodes","child","NoResultsMessageComponent","svgImage","horizontal","isObject","fromIndex","baseIsNative","getValue","stubFalse","isBuffer","copyObject","keysIn","UploadButtonDirective","filesSelected","files","uid","coreJsData","maskSrcKey","exec","IE_PROTO","rangeCount","active","ranges","getRangeAt","toUpperCase","blur","LEFT_POSITION","offsetX","datatable","DatatableHeaderComponent","cd","overlayPanel","showSelectedActions","subscriptions","v","filterSub","filterPanelRef","changeSub","numberOfRowsSelected","s","offsetY","origin","filterButton","mobilePosition","filterPanelTemplate","maxWidth","getSymbolsIn","removeNullFromObject","baseGetAllKeys","baseIsEqual","hasIn","isStrictComparable","matchesStrictComparable","srcValue","objValue","COMPARE_PARTIAL_FLAG","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","match","number","quote","subString","UploadsModule","getTag","getMapData","eq","equalArrays","mapToArray","setToArray","symbolProto","symbolValueOf","valueOf","other","bitmask","customizer","equalFunc","stack","byteOffset","convert","stacked","ChipInputComponent","emailsInput","selectMode","formControl","items$","suggestedValues$","suggestFn","bindToSearchControl","parseEmailsOnPaste","items","splice","propagateChange","propagate","matAutocomplete","isOpen","duplicate","findValueIndex","inputEl","setValue","findIndex","item","valueChanges","filtered","emails","getData","deleteFromDocument","email","addFromAutocomplete","TableHeaderCheckboxComponent","changeRef","allRowsSelected","toggleAllRows","SvgImageModule","NoResultsMessageModule","nativeCreate","SkeletonComponent","theme","animation","variant","dark","isDarkMode","predicate","fromRight","freeGlobal","freeSelf","self","arrayIncludes","arrayIncludesWith","cacheHas","createSet","iteratee","comparator","includes","isCommon","seen","outer","computed","seenIndex","resIndex","getPrototypeOf","isFunction","baseAssignValue","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","isMasked","toSource","reIsHostCtor","reIsNative","RegExp","hasKey","val","getRawTag","objectToString","getNative","defineProperty","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isMap","cloneableTags","isFlat","isFull","isArr","isFunc","subValue","props","WeakMap","BlockedExtensionsValidation","nativeKeysIn","isProto","isKeyable","DataView","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseFindIndex","baseIsNaN","strictIndexOf","UserColumnComponent","showEmail","n","TableSortHeaderComponent","datable","focusMonitor","arrowVisible","arrowDirection","columnName","sortSub","onMouseLeave","getDirection","disableSort","changeSort","getSymbols","WorkspacesService","PERSONAL_WORKSPACE","default","currentUser","cookie","notifications","toast","available$","activeId$","getIdFromCookie","activeWorkspace$","permission","member","is_owner","permissions","p","workspaceId","cookieName","workspace","w","workspaces","BASE_URI","payload","post","pushAndSelect","put","inviteId","userId","roleId","memberId","member_id","model_type","clickedOnNotification$","notification","action","deleteInvite","global","cloneArrayBuffer","dataView","mapTo","lift","MapToOperator","subscriber","destination","x","Subscriber","MatDrawerContainer_div_0_Template","_r3","_onBackdropClicked","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","MatSidenavContainer_mat_sidenav_content_3_Template","MatSidenav","MatSidenavContent","MatDrawerContainer","MatDrawer","MatDrawerContent","MatSidenavContainer","MatSidenavModule","_c5","matDrawerAnimations","transformDrawer","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_CONTAINER","_container","scrollDispatcher","ngZone","_contentMarginChanges","_contentMargins","left","right","_focusTrapFactory","_platform","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","Subject","_animationEnd","_animationState","openedChange","_openedStream","o","openedStart","fromState","toState","_closedStream","closedStart","onPositionChanged","_modeChanged","_takeFocus","_isFocusWithinDrawer","_restoreFocus","fromEvent","disableClose","takeUntil","distinctUntilChanged","y","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","_openedVia","activeEl","_updateFocusTrapState","isBrowser","destroy","openedVia","toggle","_setOpen","restoreFocus","offsetWidth","enabled","mode","_autoFocus","_animationStartListener","_animationDoneListener","viewportRuler","defaultAutosize","_drawers","backdropClick","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_allDrawers","startWith","drawer","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_getWidth","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","merge","isAdd","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_closeViaBackdropClick","_backdropOverride","_userContent","_content","autosize","hasBackdrop","changeDetectorRef","container","_fixedInViewport","_fixedTopGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenavContainer_BaseFactory","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","webpackPolyfill","deprecate","paths","children","enumerable","l","baseIsMatch","getMatchData","matchData","pop","reFlags","regexp","lastIndex","baseTimes","isTypedArray","inherited","isArg","isBuff","isType","skipIndexes","DatatableHeaderSearchInputComponent","route","searchControl","hideIcon","addFilter","baseIsTypedArray","nodeIsTypedArray","typedArrayTags","noop","objectCreate","proto","baseToString","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","equalByTag","equalObjects","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","TableBodyCheckboxComponent","isRowSelected","toggleRow","arrayPush","keysFunc","symbolsFunc","stackClear","stackDelete","stackGet","stackHas","stackSet","defaultThrottleConfig","leading","trailing","throttleTime","duration","scheduler","ThrottleTimeOperator","_hasTrailingValue","_trailingValue","throttled","schedule","dispatchNext","arg","clearThrottle","DefaultUploadValidator","UploadQueueService","queueId","canceled$","processing$","uploadedResponse$","ReplaySubject","progress$","percentage","error$","customData","uploadedFile","setProgress","eta","completed","DEFAULT_MAX_FILE_SIZE_MB","showToast","validations","maxSize","getMaxFileSize","allowedExtensions","getAllowedExtensions","blockedExtensions","getBlockedExtensions","convertToBytes","getJson","api","defaultValidator","uploads$","totalProgress$","uploadsAdded$","count$","pending","queueItem","fileEntry","progress","upload","c","asObservable","validator","uploadQueueItems","transformUploads","concat","transformed","updateCount","from","u","mergeMap","uploadQueueItem","catchError","errResponse","handleUploadFailure","bubbleError","throwError","handleUploadEvent","willProcessFiles","COMPLETED","queueItemId","speed","totalBytes","completedBytes","updateTotalProgress","addError","activeUpload","validate","failed","PROGRESS","updateProgress","completeUpload","msg","errors","showLearnMoreButton","DefaultUpload","isAdmin","errorUpload","onAction","inProgress","baseHasIn","hasPath","FormattedDatePipe","_locale","angularPipe","timezone","locale","transform","DELETE_RESOURCE_MESSAGE","title","baseIndexOf","isNew","newValue","FormatPipesModule","MatFormFieldControl","MAT_FORM_FIELD","MatFormFieldModule","noCustomizer","SkeletonModule","baseKeysIn","freeProcess","process","require","types","binding","defaultValue","arraySome","isPartial","arrLength","othLength","arrStacked","othStacked","arrValue","othValue","compared","othIndex","baseIteratee","baseUniq","UploadProgressBarComponent","uploadQueue","hidden","totalProgress","DatatableFooterComponent","hidePerPage","perPageControl","to","totalRecords","havePrevious","haveNext","emitEvent","changePerPage","previousPage","nextPage","FaviconPipe","location","protocol","host","URL","objProps","objLength","objStacked","skipCtor","objCtor","othCtor","baseMatches","baseMatchesProperty","identity","property","StarredPageOpened","SearchPageOpened","WorkspacesIndexPageOpened","TrashPageOpened","SharesFolderOpened","FolderPageOpened","RecentEntriesPageOpened","DriveUrlsService","DriveEntryApiService","FoldersApiService","DriveUploadValidator","DriveState","FileIconComponent","LoadUserFolders","LoadUserSpaceUsage","BuildFolderTree","folders","OpenFolder","folder","OpenSearchPage","SelectEntries","SelectAllEntries","DeselectAllEntries","DeleteSelectedEntries","OpenUploadsPanel","CloseUploadsPanel","AddEntries","MoveEntries","OpenDialog","dialog","OpenConfirmDialog","confirmAction","SetViewMode","ToggleDetailsSidebar","ToggleSidebar","UploadFiles","RestoreTrashedEntries","DeleteTrashedEntriesForever","EmptyTrash","OpenFilePreview","DownloadEntries","link","password","AddStar","RemoveStar","RemoveEntries","LoadMoreEntries","loadMore","ReloadPageEntries","CopySelectedEntries","OpenUploadWindow","ShowLoadingToast","HideLoadingToast","ResetState","UpdateEntries","SetCurrentUser","user","SetWorkspace","UpdateEntryDescription","description","DrivePage","viewName","folderHash","hasActions","sortColumn","sortDirection","RECENT_PAGE","recentOnly","SEARCH_PAGE","SHARES_PAGE","sharedOnly","TRASH_PAGE","deletedOnly","WORKSPACE_INDEX_PAGE","STARRED_PAGE","starredOnly","FolderPage","hash","EntriesSelectedViaDrag","EntrySelectedViaContextMenu","EntryTapped","ctrlKey","EntryDoubleTapped","FileDeleteSuccess","deletedFiles","EntryContextMenuOpened","NewFolderCreated","EntryRenamed","newName","StartedDragging","StoppedDragging","MoveEntriesSuccess","oldLocation","MoveEntriesFailed","messages","TrashedEntriesDeleteSuccess","TrashedEntriesRestoreSuccess","NotEnoughSpaceError","UserSpaceUsageChanged","BreakpointChanged","status","DRIVE_STATE_MODEL_DEFAULTS","isMobile","activePage","folderTree","flatFolders","userFoldersLoaded","selectedEntries","dragging","loading","uploadsPanelOpen","viewMode","detailsVisible","sidebarOpen","activeWorkspace","spaceUsage","available","used","meta","lastPage","LoadingToastMessages","DRIVE_UPLOAD_INPUT_CONFIG","FOLDERS_API_ROUTES","GET_ALL","CREATE","entryId","emptyTrash","driveRoot","foldersApi","entriesApi","driveUrls","uploads","store","localStore","uploadInputConfig","getAllForCurrentUser","patchState","rootFolder","dispatch","getState","tree","hashTable","len","treeHash","parent_id","parent","oldState","newState","transformQueryParams","getEntriesForFolder","state","currentFolder","deleted_at","oldParams","selectSnapshot","alreadySelected","curr","entryDoubleTapped","entryIds","selectedEntryIds","actions","selectedEntryParent","canMoveEntriesTo","moveEntries","currentEntries","newEntries","newSize","sum","file_size","enoughSpaceLeftToUpload","parentId","start","httpParams","newEntry","deleteForever","restoredEntries","restore","addStar","tags","removeStar","removeTag","count","copyEntries","directory","getSpaceUsage","mainEntries","updatedEntry","mainIndex","selectedIndex","update","setState","folderId","f","every","spaceUsed","spaceAvail","folderUser","users","owns_entry","entry_permissions","activeFolder","userHasPermission","edit","workspace_id","movingEntries","startsWith","cancelUncompleted","selectedEntry","selectedEntryOrActiveFolder","userSpaceUsed","userSpaceAvailable","SUPPORTED_ENTRY_TYPES","mime","EntryDragPreviewComponent","ShareDialogState","SharesApiService","DRIVE_ENTRY_FULL_PERMISSIONS","view","download","SetInitialUsers","UpdateUserPermissions","RemoveUser","SetUsers","SaveChanges","ShareEntries","ShareEntriesFailed","sharesApi","uniqueUsers","varies","usersWithAccess","original","updateUsers","newUsers","updateEntriesInDriveStore","shareEntries","errorResponse","updatedEntries","SharingPermissionsButtonComponent","compact","selectPermission","EntriesAccessTableComponent","newPermissions","saveChanges","dirty","ShareableLinksApiService","ShareDialogComponent","ShareLinkState","actions$","destroyed$","suggestUserEmails","getAll","resetModel","bindToShareError","bindToShareModel","shareModel","setErrorMessages","linkId","LoadShareableLink","UpdateShareableLink","CreateShareableLink","DeleteShareableLink","ToggleOptionsPanel","LinkCopySuccess","ResetShareLinkState","defaultState","optionsPanelVisible","backendErrors","linkOptions","allowDownload","allowEdit","expiresAt","linksApi","entry_id","cachedLink","findByEntryId","autoCreate","LinkOptionsComponent","form","date","time","passwordVisible","expirationVisible","bindToLinkChange","getPayload","link$","hydrateExpirationForm","expires_at","patchValue","allow_edit","allow_download","parts","Date","toJSON","toggleOptionsPanel","ShareLinkDialogComponent","shareableLink$","bindToOptionsPanelToggle","focusInput","getBaseUrl","sub","optionsVisible","network","image","base","href","innerWidth","innerHeight","getElementById","height","padding","opacity","overflow","CrupdateFolderDialogComponent","CdkTreeNodeOutlet","CdkNestedTreeNode","CdkTreeNode","CdkTree","CdkTreeNodeDef","CdkTreeModule","CdkTreeNodeToggle","CdkTreeNodePadding","MatTreeNodeDef","MatTreeNode","MatTreeNodePadding","MatNestedTreeNode","MatTree","MatTreeNodeOutlet","MatTreeNodeToggle","MatTreeModule","FoldersTreeService","ContextMenuDirective","ContextMenu","FolderDropTargetDirective","BaseDropTarget","folderName","setErrors","FlatTreeControl","getLevel","isExpandable","trackBy","node","dataNode","results","dataNodes","expansionModel","_trackByValue","collapseDescendants","expandDescendants","toBeProcessed","getDescendants","CDK_TREE_NODE_OUTLET_NODE","viewContainer","_node","CdkTreeNodeOutletContext","$implicit","when","_differs","_onDestroy","_levels","viewChange","end","MAX_VALUE","_dataDiffer","_nodeOutlet","_dataSource","disconnect","dataSource","_dataSubscription","defaultNodeDefs","_nodeDefs","def","_defaultNodeDef","_observeRenderChanges","dataStream","connect","isObservable","renderNodeChanges","parentData","dataDiffer","diff","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","insertNode","move","nodeData","_getNodeDef","context","level","treeControl","createEmbeddedView","mostRecentTreeNode","_switchDataSource","_tree","_dataChanges","_data","_setRoleFromData","isExpanded","childrenNodes","getChildren","updateChildrenNodes","nodeOutlet","_clear","outlet","_getNodeOutlet","_children","outlets","cssUnitPattern","_treeNode","_renderer","indentUnits","_indent","_setPadding","nodeLevel","_level","forceChange","_paddingIndent","_currentPadding","paddingProp","resetProp","indent","units","_setLevelInput","_setIndentInput","_recursive","recursive","toggleDescendants","_toggle","_MatTreeNodeMixinBase","ɵMatTreeNodeDef_BaseFactory","ngOnDestroy","ɵMatTreeNodePadding_BaseFactory","ɵMatTree_BaseFactory","ɵMatTreeNodeToggle_BaseFactory","transformFunction","resultNodes","parentMap","flatNode","_flattenChildren","childParentMap","_flattenNode","structuredData","nodes","currentExpand","expand","_treeControl","_treeFlattener","_flattenedData","_expandedData","collectionViewer","changed","expandFlattenedNodes","flattenNodes","createTreeFlattener","createTreeControl","createTreeDataSource","flattener","transformer","control","expandable","AVAILABLE_CONTEXT_MENUS","ContextMenuRef","attachments","backdropElement","CONTEXT_MENU_DATA","zone","injector","events","component","createOverlay","openContextMenu","portal","bindEventsToOverlay","removeLastOrigin","getMenuPositionStrategy","backdropClass","contextMenuElement","createOriginFromEvent","primary","lastOrigin","HTMLElement","EventTarget","clientY","clientX","contextMenu","_availableMenus","disableContextMenu","availableMenus","getMenuComponent","getMenuData","subs","onDragStart","onDragEnd","enter","onDragEnter","leave","onDragLeave","classes","canDrop","removeDragOverClass","executeAction","MoveEntriesDialogComponent","FoldersTreeComponent","expanded","showRootNode","folderSelected","selectedFolderId$","sub1","userFolders","fs","sub2","destination$","canMove$","failure","EntryActions","DriveContextActions","RenameEntryDialogComponent","FolderActions","TrashActions","SharesActions","TrashPageActions","DriveDomCacheService","entryName","updateStatus","multipleEntriesSelected","allStarred","allSelectedEntriesStarred","onlyFoldersSelected","getSelectedFolder","getSelectedEntries","icon","showInCompact","execute","visible","hasPermission","separatorBefore","openUploadWindow","noopTrue","shares","detachUser","bodyBold","SEARCH_FILE_TYPES","EMPTY_PAGINATION_RESPONSE","MainSearchbarComponent","SidebarActionButtonsComponent","driveApi","defaultResults","results$","displayFn","lastQuery","setDefaultResults","q","search","content","openSearchPage","resetForm","closePanelAndBlur","getCurrentUserEntries","entryType","trigger","openUploadsPanel","openNewFolderDialog","canUpload","SKELETON_ANIMATIONS","AvailableSpaceIndicatorComponent","spaceUsedPercent","WorkspaceSelectorComponent","SidebarComponent","vcr","withCount","m","WorkspaceModule","components","crupdateModal","viewContainerRef","manageMembers","menuTrigger","closeMenu","Default","urls","openFolder","EntryDescriptionPanelComponent","editingDescription$","savingDescription$","textArea","queryList","FileThumbnailComponent","thumbnail","separator","DetailsPanelComponent","DriveHammerInteractionsDirective","DragEntryService","FilesDragSelectService","FilesGridItemComponent","DetailsSidebarComponent","ToggleSelectedClassDirective","driveEntry","initial","cacheClientRects","createSelectBox","bindScroll","gridElements","getGridElements","hammerToRelative","scrollCont","selectBox","lastPanEvent","resizeBox","removeSelectBox","dispatchSelectedAction","unbindScroll","newPos","getNewSelectorPosition","scrollAndRepositionSelector","selectIntersectingElements","tmp","x1","y1","x2","y2","bottom","area","rectToRelative","filesContRect","edge","reachedAreaEdge","scrollBy","scrollDiff","scrollValue","abs","scrollHeight","applyPosition","selectedBoxRect","gridItem","rect","center","dataset","filesCont","scrollContRect","scrollListener","domCache","dragPreview","dragSelect","dragEntry","bindToHammer","hammerManager","enable","createHammerManager","onPanStart","onPan","onPanEnd","onTap","onDoubleTap","Hammer","Manager","Tap","pan","Pan","doubleTap","taps","recognizeWith","on","gridElement","getEntryEl","panService","getEntryByEl","en","entryEl","srcEvent","metaKey","closest","els","readDirRecursive","createReader","readEntries","childEntry","isDirectory","transformFileEntry","fullPath","DriveInfiniteScrollDirective","InfiniteScroll","UploadDropzoneDirective","DriveContextMenuComponent","disableDropzoneClick","disableDropzone","uploadConfig","filesDropped","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","clickButton","handleClick","removeClassesFromDropzone","emitUploadEvent","dropzoneDisabled","dataTransfer","dropEffect","newEl","elementFromPoint","kind","webkitGetAsEntry","hasFiles","threshold","scrollSub","getScrollContainer","capture","passive","onScroll","canLoadMore","isLoading","targetCanScroll","scrollY","documentElement","loadMoreItems","canLoadMoreEntries","DriveToolbarComponent","EntryBreadcrumbsComponent","breadcrumb","foldersLoaded","bindToActivePage","activePageSub","breadcrumbs","getRootBreadcrumb","folderPath","getBreadcrumbForFolder","allFolders","pathFolder","ROOT_FOLDER_PAGE","userOwnsActiveFolder","generateBreadCrumb","AVAILABLE_SORTS","EntriesSortButtonComponent","DEFAULT_VALUE","column","btnDisabled","availableSorts","ContextActionsContainerComponent","FileListHeaderComponent","ToolbarActionsComponent","hasMoreActions$","combined","setActions","moreActionsButton","getActions","setActionsForEntry","toggleViewMode","ToggleDetails","anythingSelected","detailsOpen","sortFormControl","DriveComponent","Keybinds","breakpoints","setViewMode","cacheDemoElements","observeBreakpointChanges","bindToWorkspace","getModel","model$","filesContainer","scrollContainer","observe","matches","sub3","bindToNotificationClick","toggleSidebar","uploadFiles","Keycodes","bindings","keybind","callback","parseKeybindString","keybindString","executeBindings","bindingMatches","ctrl","shiftKey","shift","parsed","part","FilesGridComponent","disableInteractions","NoSearchEntriesComponent","NoSharedEntriesComponent","NoStarredEntriesComponent","NoTrashedEntriesComponent","NoRecentEntriesComponent","FilesListComponent","NoFolderEntriesComponent","UploadDropzoneComponent","EntriesContainerComponent","BaseFilePreview","keybinds","tabindex","keybindSub","listenOn","addWithPreventDefault","activePageName","entriesEmpty","CURRENT_PREVIEW_FILE","PREVIEW_URL_TRANSFORMER","sanitizer","filePreviewWrapper","bypassSecurityTrustResourceUrl","getSrc","DefaultPreviewComponent","TextPreviewComponent","content$","fileTooLarge$","loadFileContents","getContents","AudioPreviewComponent","invalidMedia","canPlayVideo","player","src","play","canPlayType","playerEl","VideoPreviewComponent","ImagePreviewComponent","PdfPreviewComponent","GoogleDocsViewerComponent","PreviewFilesService","DefaultPreviews","showDefaultPreview$","showDefaultPreview","iframe","onload","clearTimeout","timeoutRef","stopLoading","getIframeSrc","reject","previewUrl","preview_token","getFullPreviewUrl","encodeURIComponent","AVAILABLE_PREVIEWS","video","audio","pdf","spreadsheet","powerPoint","word","availablePreviews","previewUriTransformer","updateMeta","updatePortal","newPointer","oldPointer","pointer","getCurrent","createInjector","activeFile","injectionTokens","LinkPreviewPasswordPanelComponent","links","passwordControl","passwordError$","passwordValid","checkPassword","handlePasswordCheck","submitPassword","previewFiles","FilePreviewToolbarComponent","showLogo","disableDownload","showCloseButton","PreviewContainerComponent","downloadSub","comp","instance","FilePreviewOverlayComponent","bindToDownload","previewContainer","optionsButton","shareableLink","closeOverlay","FolderPreviewComponent","linkApi","breadcrumb$","pagination$","loadChildren","generateBreadcrumb","setPagination","folderChildren","ent","activeEntry","hideMoreOptionsBtn","getEntry","openPreviewOverlay","makeLinkHash","subFolder","replaceChildren","order","findByHash","withEntries","onClick","LinkPreviewContainerComponent","DriveRoutingModule","passwordPanelVisible$","linkChanged","setBackgroundClass","togglePasswordPanel","showPreview","importEntry","dashboardRoutes","canActivate","WorkspaceWrapperModule","forChild","MatProgressSpinner__svg_circle_1_Template","_spinnerAnimationLabel","_getStrokeDashOffset","_getStrokeCircumference","_getCircleStrokeWidth","_getCircleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r1","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","MatProgressSpinnerModule","MatSpinner","MatProgressSpinner","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","diameter","_diameter","_fallbackAnimation","trackedDiameters","_diameters","_getSpinnerAnimationLabel","head","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","viewBox","PI","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","strokeCircumference","_strokeWidth","max","_getViewBox","DRIVE_CONTEXT_MENUS","UploadsPanelItemComponent","animationFrame","isEmpty","DownloadHandler","OverlayHandler","UploadsPanelComponent","ToastHandler","LoadingToastComponent","DialogHandler","UploadPanelHandler","RemoveStarHandler","PageLoadHandler","PageChangeHandler","ResetScrollHandler","SharingModule","ContextMenuModule","FilePreviewModule","WorkspaceSelectorModule","DriveModule","activeUploads","minimized$","toggleMinimized","getDownloadUrl","click","hashes","getEntryHashes","entriesDeleted","entriesStarred","entriesUnstarred","entriesMoveFailed","folderCreated","entriesMoved","entriesDeletedForever","entriesRestoredFromTrash","entryRenamed","linkCopiedToClipboard","notEnoughSpace","loadingToast","oldName","toastRef","openComponent","dismiss","overlayConfig","closeUploadsPanel","uploadPanelRef","openConfirmDialog","scrollTo","urlAfterRedirects","isLoggedIn","getPageLoadAction","getPageUriParams","pageName","firstChild","useClass","STATE_HANDLERS","handler","ext","forFeature","baseIsEqualDeep","reIsUint","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","i_r5","ctx_r11","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r16","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r13","i_r14","ctx_r3","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","offsetLeft","MatInkBar","_inkBarPositioner","show","requestAnimationFrame","_setStyles","visibility","inkBar","MAT_TAB_CONTENT","MatTabContent","MAT_TAB_LABEL","MatTabLabel","ɵMatTabLabel_BaseFactory","_MatTabMixinBase","MatTabBase","MAT_TAB_GROUP","MatTab","_closestTabGroup","_contentPortal","_stateChanges","isActive","_explicitContent","_implicitContent","_templateLabel","_setTemplateLabelInput","matTabsAnimations","translateTab","minHeight","MatTabBodyPortal","componentFactoryResolver","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","isCentering","_afterLeavingCenter","MatTabBody","_MatTabBodyBase","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","_computePositionAnimationState","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_positionIndex","_portalHost","_onTranslateTabStarted","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","_allTabs","_tabHeader","_alignInkBarToSelectedTab","tabHeight","wrapper","_tabBodyWrapper","tabHeader","focusIndex","idx","_animationDuration","_backgroundColor","backgroundColor","dynamicHeight","MatTabGroup","_focusChanged","MatTabHeader","MatTabLabelWrapper","_MatTabLabelWrapperMixinBase","MatTabLabelWrapperBase","passiveEventListenerOptions","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_itemSelected","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","_MatTabHeaderBase","_disableRipple","_handlePaginatorClick","_onContentChanges","_MatTabNavBase","updateActiveLink","MatTabNav","MatTabLink","attrs","_MatTabLinkMixinBase","MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","_isActive","exitDuration","tabNavBar","_tabLinkRipple","MatTabsModule","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","typedArray","baseIsMap","nodeIsMap","arrayMap","symbolToString"],"mappings":"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","sourceRoot":"webpack:///","sourcesContent":["var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\n_MatAutocompleteBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return ɵMatAutocomplete_BaseFactory(t || MatAutocomplete); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\nconst ɵMatAutocomplete_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return ɵMatAutocompleteOrigin_BaseFactory(t || MatAutocompleteOrigin); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteOrigin_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/**\n * The height of each autocomplete option.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\n_MatAutocompleteTriggerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return ɵMatAutocompleteTrigger_BaseFactory(t || MatAutocompleteTrigger); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteTrigger_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Translations} from '../../translations/translations.service';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\nexport interface ConfirmModalData {\r\n    title: string;\r\n    body: string;\r\n    bodyBold?: string;\r\n    ok?: string;\r\n    cancel?: string;\r\n    replacements?: object;\r\n}\r\n\r\n@Component({\r\n    selector: 'confirm-modal',\r\n    templateUrl: './confirm-modal.component.html',\r\n    styleUrls: ['./confirm-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ConfirmModalComponent implements OnInit {\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmModalData,\r\n        private i18n: Translations,\r\n        public settings: Settings,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        if ( ! this.data.ok) {\r\n            this.data.ok = 'Confirm';\r\n        }\r\n        if ( ! this.data.cancel) {\r\n            this.data.cancel = 'Cancel';\r\n        }\r\n        for (const key in this.data) {\r\n            if (typeof this.data[key] === 'string') {\r\n                this.data[key] = this.i18n.t(this.data[key], this.data.replacements);\r\n            }\r\n        }\r\n    }\r\n\r\n    public confirm() {\r\n        this.dialogRef.close(true);\r\n    }\r\n\r\n    public close() {\r\n        this.dialogRef.close(false);\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title>{{data.title}}</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div class=\"mat-dialog-contents\" mat-dialog-content>\r\n    <p>{{data.body}}</p>\r\n    <p class=\"bold\" *ngIf=\"data.bodyBold\">{{data.bodyBold}}</p>\r\n</div>\r\n\r\n<div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n    <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel cancel-button\">{{data.cancel}}</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" class=\"button primary submit-button\" cdkFocusInitial (click)=\"confirm()\">{{data.ok}}</button>\r\n</div>\r\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ChipInputComponent} from './chip-input/chip-input.component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatRippleModule} from '@angular/material/core';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatChipsModule,\r\n        MatAutocompleteModule,\r\n        ReactiveFormsModule,\r\n        TranslationsModule,\r\n\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatRippleModule,\r\n    ],\r\n    declarations: [\r\n        ChipInputComponent,\r\n    ],\r\n    exports: [\r\n        ChipInputComponent,\r\n    ]\r\n})\r\nexport class ChipsModule {\r\n}\r\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TableSortHeaderComponent} from './table-sort-header/table-sort-header.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {TranslationsModule} from '../core/translations/translations.module';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {UserColumnComponent} from './columns/user-column/user-column.component';\nimport {TableBodyCheckboxComponent} from './selection/table-body-checkbox.component';\nimport {TableHeaderCheckboxComponent} from './selection/table-header-checkbox.component';\nimport {DatatableFooterComponent} from './datatable-footer/datatable-footer.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {DatatableHeaderComponent} from './datatable-header/datatable-header.component';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {DatatableFiltersPanelComponent} from './datatable-filters-panel/datatable-filters-panel.component';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {ChipsModule} from '../core/ui/chips/chips.module';\nimport { DatatableHeaderSearchInputComponent } from './datatable-header/datatable-header-search-input/datatable-header-search-input.component';\nimport {NoResultsMessageModule} from '../core/ui/no-results-message/no-results-message.module';\nimport {NoResultsMessageComponent} from '../core/ui/no-results-message/no-results-message.component';\n\n@NgModule({\n    declarations: [\n        TableSortHeaderComponent,\n        UserColumnComponent,\n        TableBodyCheckboxComponent,\n        TableHeaderCheckboxComponent,\n        DatatableFooterComponent,\n        DatatableHeaderComponent,\n        DatatableHeaderSearchInputComponent,\n        DatatableFiltersPanelComponent,\n        DatatableHeaderSearchInputComponent,\n    ],\n    imports: [\n        CommonModule,\n        TranslationsModule,\n        ReactiveFormsModule,\n        FormsModule,\n        ChipsModule,\n        NoResultsMessageModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatProgressBarModule,\n    ],\n    exports: [\n        TableSortHeaderComponent,\n        MatCheckboxModule,\n        UserColumnComponent,\n        TableBodyCheckboxComponent,\n        TableHeaderCheckboxComponent,\n        DatatableFooterComponent,\n        DatatableHeaderComponent,\n        DatatableFiltersPanelComponent,\n        DatatableHeaderSearchInputComponent,\n        NoResultsMessageComponent,\n    ]\n})\nexport class DatatableModule {\n}\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","import {Params, Router} from '@angular/router';\r\nimport {BehaviorSubject, of, Subscription} from 'rxjs';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {PaginationResponse} from '@common/core/types/pagination/pagination-response';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\r\nimport {PaginationParams} from '@common/core/types/pagination/pagination-params';\r\nimport {Injectable} from '@angular/core';\r\nimport {LocalStorage} from '@common/core/services/local-storage.service';\r\n\r\n@Injectable()\r\nexport class Paginator<T> {\r\n    private subscription: Subscription;\r\n    private params$ = new BehaviorSubject<PaginationParams>({});\r\n    public paginatedOnce$ = new BehaviorSubject<boolean>(false);\r\n    public loading$ = new BehaviorSubject(false);\r\n    public response$ = new BehaviorSubject<{pagination: PaginationResponse<T>, [key: string]: any}>(null);\r\n    public dontUpdateQueryParams = false;\r\n    public perPageCacheKey: string = null;\r\n    /** only true if data was already loaded from backend and it was empty */\r\n    public noResults$ = this.response$.pipe(map(r => this.paginatedOnce$.value && r.pagination.data.length === 0));\r\n\r\n    get params(): PaginationParams {\r\n        return this.params$.value;\r\n    }\r\n\r\n    get currentPage(): number {\r\n        return this.response$.value?.pagination?.current_page;\r\n    }\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: AppHttpClient,\r\n        private localStorage?: LocalStorage,\r\n    ) {}\r\n\r\n    public paginate(userParams: object = {}, url?: string, initialData?: PaginationResponse<T>) {\r\n        // only use query params on first pagination, so query params can be removed via user params\r\n        const queryParams = !this.subscription ? this.currentQueryParams() : {};\r\n        const paginationParams = this.response$.value ? {\r\n            perPage: this.response$.value.pagination.per_page,\r\n            page: this.response$.value.pagination.current_page\r\n        } : {};\r\n        this.params$.next({...paginationParams, ...queryParams, ...userParams});\r\n\r\n        if ( ! this.subscription) {\r\n            this.init(url, initialData);\r\n        }\r\n    }\r\n\r\n    public nextPage() {\r\n        const current = this.response$.value.pagination.current_page;\r\n        const total = this.response$.value.pagination.total;\r\n        const next = current + 1;\r\n        this.paginate({\r\n            ...this.params$.value,\r\n            page: !current || next > total ? current : next\r\n        });\r\n    }\r\n\r\n    public previousPage() {\r\n        const current = this.response$.value.pagination.current_page;\r\n        this.paginate({\r\n            ...this.params$.value,\r\n            page: (current - 1) || 1\r\n        });\r\n    }\r\n\r\n    public changePerPage(newPerPage: number) {\r\n        if (newPerPage !== this.params$.value?.perPage) {\r\n            if (this.perPageCacheKey) {\r\n                this.localStorage.set(this.perPageCacheKey, newPerPage);\r\n            }\r\n            this.paginate({\r\n                ...this.params$.value,\r\n                perPage: newPerPage\r\n            });\r\n        }\r\n    }\r\n\r\n    public currentQueryParams(): Params {\r\n        return this.router.routerState.root.snapshot.queryParams;\r\n    }\r\n\r\n    private init(uri: string, initialData?: PaginationResponse<T>) {\r\n        this.subscription = this.params$.pipe(\r\n            switchMap(params => {\r\n                this.loading$.next(true);\r\n                const firstPagination = !this.paginatedOnce$.value;\r\n                if (firstPagination && this.perPageCacheKey && this.localStorage.get(this.perPageCacheKey)) {\r\n                    params = {perPage: this.localStorage.get(this.perPageCacheKey), ...params};\r\n                }\r\n\r\n                // if we got initial pagination response (of 1st page)\r\n                // return that instead of making 1st page http request\r\n                const request = firstPagination && initialData ?\r\n                    of({pagination: initialData}) :\r\n                    this.http.get(uri, params);\r\n\r\n                return (request as PaginatedBackendResponse<T>).pipe(\r\n                    // can't use \"finalize\" here as it will complete after loading$.next(true)\r\n                    // call above, which will prevent loading bar from showing\r\n                    // if pagination request is cancelled and new one is queued\r\n                    tap(() => {\r\n                        this.updateQueryParams(params);\r\n                        this.loading$.next(false);\r\n                        this.paginatedOnce$.next(true);\r\n                    }, () => {\r\n                        this.loading$.next(false);\r\n                        this.paginatedOnce$.next(true);\r\n                    })\r\n                ) as PaginatedBackendResponse<T>;\r\n            })\r\n        ).subscribe(response => {\r\n            this.response$.next(response);\r\n        });\r\n    }\r\n\r\n    private updateQueryParams(params = {}) {\r\n        if (this.dontUpdateQueryParams) return;\r\n        for (const key in params) {\r\n            if (Array.isArray(params[key])) {\r\n                params[key] = params[key].join(',');\r\n            }\r\n        }\r\n        this.router.navigate([], {queryParams: params, replaceUrl: true});\r\n    }\r\n\r\n    public canLoadNextPage() {\r\n        return this.response$.value &&\r\n            this.currentPage < this.response$.value?.pagination?.last_page;\r\n    }\r\n}\r\n","import * as Dot from \"dot-object\";\r\nimport {_isNumberValue} from '@angular/cdk/coercion';\r\nimport {Model} from '@common/core/types/models/model';\r\n\r\nconst MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\nexport function sortDatatableData<T extends Model>(data: T[], orderBy: string, orderDir: string): T[] {\r\n    return data.sort((a, b) => {\r\n        let valueA = sortingDataAccessor(a, orderBy);\r\n        let valueB = sortingDataAccessor(b, orderBy);\r\n\r\n        // If there are data in the column that can be converted to a number,\r\n        // it must be ensured that the rest of the data\r\n        // is of the same type so as not to order incorrectly.\r\n        const valueAType = typeof valueA;\r\n        const valueBType = typeof valueB;\r\n\r\n        if (valueAType !== valueBType) {\r\n            if (valueAType === 'number') {\r\n                valueA += '';\r\n            }\r\n            if (valueBType === 'number') {\r\n                valueB += '';\r\n            }\r\n        }\r\n\r\n        // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\r\n        // one value exists while the other doesn't. In this case, existing value should come last.\r\n        // This avoids inconsistent results when comparing values to undefined/null.\r\n        // If neither value exists, return 0 (equal).\r\n        let comparatorResult = 0;\r\n        if (valueA != null && valueB != null) {\r\n            // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\r\n            if (valueA > valueB) {\r\n                comparatorResult = 1;\r\n            } else if (valueA < valueB) {\r\n                comparatorResult = -1;\r\n            }\r\n        } else if (valueA != null) {\r\n            comparatorResult = 1;\r\n        } else if (valueB != null) {\r\n            comparatorResult = -1;\r\n        }\r\n\r\n        return comparatorResult * (orderDir === 'asc' ? 1 : -1);\r\n    });\r\n}\r\n\r\n/**\r\n * Data accessor function that is used for accessing data properties for sorting through\r\n * the default sortData function.\r\n * This default function assumes that the sort header IDs (which defaults to the column name)\r\n * matches the data's properties (e.g. column Xyz represents data['Xyz']).\r\n * May be set to a custom function for different behavior.\r\n */\r\nfunction sortingDataAccessor(data: object, sortHeaderId: string): string {\r\n    const value = Dot.pick(sortHeaderId, data);\r\n\r\n    if (_isNumberValue(value)) {\r\n        const numberValue = Number(value);\r\n\r\n        // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\r\n        // leave them as strings. For more info: https://goo.gl/y5vbSg\r\n        return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\r\n    }\r\n\r\n    // if (Array.isArray(value)) {\r\n    //     return value.reduce((prev, curr) => prev += objectToStr(curr));\r\n    // }\r\n\r\n    return value;\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Subscription} from 'rxjs';\nimport {Paginator} from '../shared/paginator.service';\nimport {debounceTime, filter, map, pairwise, skip, tap} from 'rxjs/operators';\nimport {DatatableFilters, DatatableFilterValue} from './types/datatable-filters';\nimport {DatatableSort} from './types/datatable-sort';\nimport {PaginationParams} from '../core/types/pagination/pagination-params';\nimport {removeNullFromObject} from '../core/utils/remove-null-from-object';\nimport {ComponentType} from '@angular/cdk/portal';\nimport {MatDialogConfig} from '@angular/material/dialog';\nimport {Modal} from '../core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '../core/ui/confirm-modal/confirm-modal.component';\nimport {DELETE_RESOURCE_MESSAGE} from './delete-resource-message';\nimport {PaginationResponse} from '../core/types/pagination/pagination-response';\nimport {sortDatatableData} from '@common/datatable/utils/sort-datatable-data';\nimport {Model} from '@common/core/types/models/model';\nimport {filterDatatableData} from '@common/datatable/utils/filter-datatable-data';\nimport {Router} from '@angular/router';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {LocalStorage} from '../core/services/local-storage.service';\n\nexport type DatatableStaticParams = Record<string, string|number|boolean|string[]>;\n\ninterface DatatableConfig<T> {\n    uri?: string;\n    staticParams?: DatatableStaticParams;\n    initialData?: PaginationResponse<T>|T[];\n    disableSort?: boolean;\n    infiniteScroll?: boolean;\n}\n\n@Injectable()\nexport class DatatableService<T extends Model> {\n    public sort$ = new BehaviorSubject<DatatableSort>({});\n    public filters$ = new BehaviorSubject<DatatableFilters>({});\n    public staticParams$ = new BehaviorSubject<DatatableStaticParams>({});\n    public paginator = new Paginator<T>(this.router, this.http, this.localStorage);\n    private paginatorSub: Subscription;\n    private mainSub: Subscription;\n    private ignoreNextParamChange = false;\n    private originalData$ = new BehaviorSubject<T[]>([]);\n    public data$ = new BehaviorSubject<T[]>([]);\n    public selectedRows$ = new BehaviorSubject<number[]>([]);\n    public config: DatatableConfig<T>;\n\n    constructor(\n        protected modal: Modal,\n        protected router: Router,\n        protected http: AppHttpClient,\n        protected localStorage: LocalStorage,\n    ) {}\n\n    get data() {\n        return this.data$.value;\n    }\n\n    set data(data: T[]) {\n        const tableData = [...data];\n        this.originalData$.next(tableData);\n        this.data$.next(tableData);\n\n        // Reset filters and sort without trigger data reload via pagination\n        this.ignoreNextParamChange = true;\n        this.reset();\n    }\n\n    public init(config: DatatableConfig<T> = {}) {\n        this.config = config;\n        this.staticParams$.next({...this.staticParams$.value, ...config.staticParams});\n        if (config.uri) {\n            this.connectToPaginator();\n        } else if (config.initialData) {\n            this.data = config.initialData as T[];\n        }\n\n        this.mainSub = combineLatest([this.sort$, this.filters$, this.staticParams$])\n            .pipe(debounceTime(0), map(params => Object.assign({}, ...params))).subscribe((params: PaginationParams) => {\n                if (this.ignoreNextParamChange) {\n                    return this.ignoreNextParamChange = false;\n                }\n                params = removeNullFromObject(params);\n                Object.entries(params).forEach(([key, value]) => {\n                    if (typeof value === 'object' && value.id) {\n                        params[`${key}Id`] = value.id;\n                        delete params[key];\n                    }\n                });\n                if (this.config.uri) {\n                    this.paginator.paginate(params, this.config.uri, this.config.initialData as PaginationResponse<T>);\n                } else if (Object.keys(params).length && this.data.length) {\n                    this.applyLocalTransforms(params);\n                }\n            });\n\n        return this;\n    }\n\n    private connectToPaginator() {\n        this.paginatorSub = this.paginator.response$.pipe(pairwise()).subscribe(([prev, current]) => {\n            // append data instead of overriding with next page data (infinite scroll).\n            // if page did not change, we can assume that it was filter or sort\n            // change and we should use only new data, even on infinite scroll\n            const data = this.config.infiniteScroll && prev?.pagination?.current_page !== current.pagination.current_page ?\n                [...this.data$.value, ...current.pagination.data] :\n                current.pagination.data;\n            this.data$.next(data);\n        });\n    }\n\n    private applyLocalTransforms(params: PaginationParams) {\n        let data = [...this.originalData$.value];\n        if (params.query) {\n            data = filterDatatableData<T>(data, params.query);\n        }\n        if (params.orderBy && params.orderDir) {\n            data = sortDatatableData<T>(data, params.orderBy, params.orderDir);\n        }\n        this.data$.next(data);\n    }\n\n    public addFilter(key: keyof DatatableFilters, value: DatatableFilterValue) {\n        this.filters$.next({\n            ...this.filters$.value,\n            [key]: value,\n        });\n    }\n\n    public removeFilter(key: keyof DatatableFilters) {\n        const filters = {...this.filters$.value};\n        delete filters[key];\n        this.filters$.next(filters);\n    }\n\n    public reset(staticParams: DatatableStaticParams = null) {\n        this.filters$.next({});\n        this.sort$.next({});\n        this.selectedRows$.next([]);\n        if (staticParams) {\n            this.staticParams$.next(staticParams);\n        }\n    }\n\n    public openCrupdateResourceModal(cmp: ComponentType<any>, data?: object, config?: MatDialogConfig) {\n        return this.modal.open(cmp, data, config).beforeClosed()\n            .pipe(\n                filter(modifiedResource => !!modifiedResource),\n                tap(() => this.reset())\n            );\n    }\n\n    public confirmResourceDeletion(resource: string) {\n        const data = {...DELETE_RESOURCE_MESSAGE, replacements: {resource}};\n        return this.modal.open(ConfirmModalComponent, data).afterClosed()\n            .pipe(filter(confirmed => confirmed));\n    }\n\n    public getCurrentParams() {\n        return {\n            ...this.sort$.value,\n            ...this.filters$.value,\n            ...this.staticParams$.value,\n            ...this.paginator.params,\n        };\n    }\n\n    public destroy() {\n        this.paginatorSub?.unsubscribe();\n        this.mainSub?.unsubscribe();\n    }\n}\n","import {Model} from '../../core/types/models/model';\r\n\r\nexport function filterDatatableData<T extends Model>(data: T[], filter: string): T[] {\r\n    return data.filter(obj => filterPredicate(obj, filter));\r\n}\r\n/**\r\n * Checks if a data object matches the data source's filter string. By default, each data object\r\n * is converted to a string of its properties and returns true if the filter has\r\n * at least one occurrence in that string. By default, the filter string has its whitespace\r\n * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\r\n * filter matching.\r\n * @param data Data object used to check against the filter.\r\n * @param filter Filter string that has been set on the data source.\r\n * @returns Whether the filter matches against the data\r\n */\r\nfunction filterPredicate(data: object, filter: string): boolean {\r\n    // Transform the data into a lowercase string of all property values.\r\n    const dataStr = objectToStr(data);\r\n\r\n    // Transform the filter by converting it to lowercase and removing whitespace.\r\n    const transformedFilter = filter.trim().toLowerCase();\r\n\r\n    return dataStr.indexOf(transformedFilter) !== -1;\r\n}\r\n\r\nexport function objectToStr(obj: object) {\r\n    return Object.keys(obj).reduce((currentTerm: string, key: string) => {\r\n        // Use an obscure Unicode character to delimit the words in the concatenated string.\r\n        // This avoids matches where the values of two columns combined will match the user's query\r\n        // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\r\n        // that has a very low chance of being typed in by somebody in a text field. This one in\r\n        // particular is \"White up-pointing triangle with dot\" from\r\n        // https://en.wikipedia.org/wiki/List_of_Unicode_characters\r\n        const term = (obj[key] && typeof obj[key] === 'object') ?\r\n            objectToStr(obj[key]) :\r\n            obj[key];\r\n        return currentTerm + term + '◬';\r\n    }, '').toLowerCase();\r\n}\r\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","import {ChangeDetectionStrategy, Component, ElementRef, Inject, TemplateRef} from '@angular/core';\nimport {OVERLAY_PANEL_DATA} from '../../core/ui/overlay-panel/overlay-panel-data';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {matDialogAnimations} from '@angular/material/dialog';\n\n@Component({\n    selector: 'datatable-filters-panel',\n    templateUrl: './datatable-filters-panel.component.html',\n    styleUrls: ['./datatable-filters-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[@dialogContainer]': `'enter'`\n    },\n    animations: [\n        matDialogAnimations.dialogContainer,\n    ]\n})\nexport class DatatableFiltersPanelComponent {\n\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) public data: {filters: TemplateRef<ElementRef>},\n        private overlayPanelRef: OverlayPanelRef,\n    ) {}\n\n    public close() {\n        this.overlayPanelRef.close();\n    }\n}\n","<header>\n    <mat-icon svgIcon=\"filter-list\"></mat-icon>\n    <span trans>Filters</span>\n</header>\n\n<form class=\"body\" (ngSubmit)=\"close()\">\n    <ng-container *ngTemplateOutlet=\"data.filters\"></ng-container>\n</form>\n\n<footer>\n    <button (click)=\"close()\" type=\"button\" mat-button color=\"accent\" trans>Close</button>\n</footer>\n","import { UploadedFile } from '../../uploaded-file';\r\nimport { UploadValidation } from './upload-validation';\r\nimport { Translations } from '../../../core/translations/translations.service';\r\n\r\nexport class AllowedExtensionsValidation extends UploadValidation {\r\n    constructor(\r\n        protected params: {extensions: string[]},\r\n        protected i18n: Translations\r\n    ) {\r\n        super();\r\n\r\n        this.errorMessage = this.i18n.t(\r\n            'Only these file types are allowed: :extensions',\r\n            {extensions: this.params.extensions.join(', ')}\r\n        );\r\n    }\r\n\r\n    public fails(file: UploadedFile) {\r\n        return ! this.params.extensions.some(extension => {\r\n            return extension.toLowerCase() === file.extension.toLowerCase();\r\n        });\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface WorkspaceConfig {\r\n    description: string;\r\n}\r\n\r\nexport const WORKSPACE_CONFIG = new InjectionToken<WorkspaceConfig>('WORKSPACE_CONFIG');\r\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","import { SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event object emitted by MatChip when selected or deselected. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' },\n                providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }]\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' },\n                providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }]\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, \n    // @breaking-change 9.0.0 `_changeDetectorRef` parameter to become required.\n    _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether the chip has focus. */\n        this._hasFocus = false;\n        /** Whether the chip list is selectable */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        /** Whether the chip list as a whole is disabled. */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blured. */\n        this._onBlur = new Subject();\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /** Whether the chip is selected. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /** Whether the chip is disabled. */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() { return this._removable; }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /** The ARIA selected applied to the chip. */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    _addHostClassName() {\n        const basicChipAttrName = 'mat-basic-chip';\n        const element = this._elementRef.nativeElement;\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /** Selects the chip. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Deselects the chip. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Select this chip and emit selected event */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Handles click events on the chip. */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /** Handle custom key presses. */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            this._ngZone.run(() => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            });\n        });\n    }\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MAT_CHIP_AVATAR,] }],\n    trailingIcon: [{ type: ContentChild, args: [MAT_CHIP_TRAILING_ICON,] }],\n    removeIcon: [{ type: ContentChild, args: [MAT_CHIP_REMOVE,] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MAT_CHIP_AVATAR]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_TRAILING_ICON]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_REMOVE]\n        }] }); })();\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /** Calls the parent chip's public `remove()` method if applicable. */\n    _handleClick(event) {\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }])] });\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                },\n                providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }]\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n/** Change event object that is emitted when the chip list value has changed. */\nclass MatChipListChange {\n    constructor(\n    /** Chip list that emitted the event. */\n    source, \n    /** Value of the chip list when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, \n    /** @docs-private */\n    ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Uid of the chip list */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /** Tab index for the chip list. */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /** Function when touched */\n        this._onTouched = () => { };\n        /** Function when changed */\n        this._onChange = () => { };\n        this._multiple = false;\n        this._compareWith = (o1, o2) => o1 === o2;\n        this._required = false;\n        this._disabled = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /** Event emitted when the selected chip list value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /** The array of selected chips inside chip list. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The ARIA role applied to the chip list. */\n    get role() { return this.empty ? null : 'listbox'; }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._value; }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     */\n    get selectable() { return this._selectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n        }\n    }\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map(chip => chip.selectionChange));\n    }\n    /** Combined stream of all of the child chips' focus change events. */\n    get chipFocusChanges() {\n        return merge(...this.chips.map(chip => chip._onFocus));\n    }\n    /** Combined stream of all of the child chips' blur change events. */\n    get chipBlurChanges() {\n        return merge(...this.chips.map(chip => chip._onBlur));\n    }\n    /** Combined stream of all of the child chips' remove change events. */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map(chip => chip.destroyed));\n    }\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHomeAndEnd()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => {\n                    this._syncChipsState();\n                });\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        });\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /** Associates an HTML input element with this chip list. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        // We use this attribute to match the chip list to its input in test harnesses.\n        // Set the attribute directly here to avoid \"changed after checked\" errors.\n        this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /** Attempt to focus an input if we have one. */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keydown(event) {\n        const target = event.target;\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            this._keyManager.onKeydown(event);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            let input = element;\n            return !input.value;\n        }\n        return false;\n    }\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach(chip => chip.deselect());\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n            this._sortValues();\n        }\n        else {\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        const correspondingChip = this.chips.find(chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n    /**\n     * Deselects every chip in the list.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach(chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip list. */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                });\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout(() => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach(chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        });\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n    }\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n            const chip = event.chip;\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        });\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this.chips && this.chips.some(chip => chip._hasFocus);\n    }\n    /** Syncs the list's state with the individual chips. */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach(chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            });\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = this._elementRef.nativeElement;\n    }\n    /** Register input for chip list */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /** Whether the input is disabled. */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether the input is empty. */\n    get empty() { return !this._inputElement.value; }\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = {\n    separatorKeyCodes: [ENTER]\n};\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ɵ0\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon], exports: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ɵ0\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule, ɵ0 };\n\n//# sourceMappingURL=chips.js.map","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {finalize, map, share, tap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {DOCUMENT} from '@angular/common';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SvgCacheService {\n    private cache = new Map<string, SVGElement>();\n    private inProgressUrlFetches = new Map<string, Observable<string>>();\n\n    constructor(\n        private http: HttpClient,\n        @Optional() @Inject(DOCUMENT) private document: Document\n    ) {}\n\n    public get(name: string): Observable<SVGElement> {\n        const fileName = name.endsWith('.svg') ? name : `${name}.svg`;\n\n        if (this.cache.get(fileName)) {\n            return of(cloneSvg(this.cache.get(fileName)));\n        }\n\n        return this.fetchIcon(fileName).pipe(\n            map(svgText => this.svgElementFromString(svgText, fileName)),\n            tap(svg => this.cache.set(fileName, svg)),\n            map(svg => cloneSvg(svg))\n        );\n    }\n\n    private fetchIcon(fileName: string) {\n        const inProgressFetch = this.inProgressUrlFetches.get(fileName);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n\n        const req = this.http.get(`client/assets/images/illustrations/${fileName}`, {responseType: 'text'}).pipe(\n            finalize(() => this.inProgressUrlFetches.delete(fileName)),\n            share(),\n        );\n        this.inProgressUrlFetches.set(fileName, req);\n        return req;\n    }\n\n    private svgElementFromString(str: string, fileName: string = ''): SVGElement {\n        const div = this.document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg') as SVGElement;\n\n        if (!svg) {\n            throw Error(`<svg> tag not found for ${fileName}`);\n        }\n\n        return svg;\n    }\n}\n\nfunction cloneSvg(svg: SVGElement): SVGElement {\n    return svg.cloneNode(true) as SVGElement;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport {SvgCacheService} from './svg-cache.service';\nimport {take} from 'rxjs/operators';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'svg-image',\n    templateUrl: './svg-image.component.html',\n    styleUrls: ['./svg-image.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'role': 'img',\n    }\n})\nexport class SvgImageComponent implements OnChanges, OnDestroy {\n    @Input() name: string;\n    private currentSvgFetch: Subscription;\n\n    constructor(\n        private cache: SvgCacheService,\n        private el: ElementRef<HTMLElement>,\n    ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        const svgIconChanges = changes.name;\n\n        if (svgIconChanges) {\n            this.currentSvgFetch?.unsubscribe();\n            if (this.name) {\n                this.currentSvgFetch = this.cache.get(this.name)\n                    .pipe(take(1))\n                    .subscribe(svg => this.setSvgElement(svg));\n            }\n        } else if (svgIconChanges.previousValue) {\n            this.clearSvgElement();\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.currentSvgFetch?.unsubscribe();\n    }\n\n    private setSvgElement(svg: SVGElement) {\n        this.clearSvgElement();\n\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style') as NodeListOf<HTMLStyleElement>;\n\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n\n        this.el.nativeElement.appendChild(svg);\n    }\n\n    private clearSvgElement() {\n        const layoutElement = this.el.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n\n}\n","<mat-icon class=\"icon\" [svgIcon]=\"svgIcon\" *ngIf=\"svgIcon; else svgImageRef\"></mat-icon>\r\n<ng-template #svgImageRef>\r\n    <svg-image class=\"icon\" [name]=\"svgImage\"></svg-image>\r\n</ng-template>\r\n<div class=\"text\">\r\n    <div class=\"main\">\r\n        <ng-content select=\"[primary-text]\"></ng-content>\r\n    </div>\r\n    <div class=\"secondary\">\r\n        <ng-content select=\"[secondary-text]\"></ng-content>\r\n    </div>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Component({\r\n    selector: 'no-results-message',\r\n    templateUrl: './no-results-message.component.html',\r\n    styleUrls: ['./no-results-message.component.scss'],\r\n    host: {class: 'no-results-message'},\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NoResultsMessageComponent {\r\n    @Input() svgImage = 'no-results.svg';\r\n    @Input() svgIcon: string;\r\n    @Input() @HostBinding('class.horizontal') horizontal = false;\r\n    constructor(public settings: Settings) {}\r\n}\r\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadInputConfig } from '../upload-input-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\n@Directive({\r\n    selector: '[uploadButton]'\r\n})\r\nexport class UploadButtonDirective implements OnInit {\r\n    @Input('uploadButton') config: UploadInputConfig = {};\r\n    @Output() filesSelected = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            openUploadWindow(this.config).then(files => {\r\n                if (files && files.length) {\r\n                    this.filesSelected.emit(files);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","import { ConnectedPosition } from '@angular/cdk/overlay';\r\n\r\nexport const LEFT_POSITION: ConnectedPosition[] = [\r\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 5},\r\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 5},\r\n];\r\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"></mat-progress-bar>\n<div class=\"left-column\">\n    <div class=\"default-left-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-content select=\"[leftContent]\"></ng-content>\n    </div>\n    <div class=\"selected-left-content capitalize\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        {{numberOfRowsSelected}} {{ pluralResourceName }} {{ 'Selected' | trans }}\n    </div>\n</div>\n<div class=\"right-column\">\n    <div class=\"default-right-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-container *ngIf=\"filterPanelTemplate\">\n            <mat-chip-list aria-label=\"Active Filters\" class=\"filter-chip-list\">\n                <mat-chip *ngFor=\"let filter of filters$ | async | keyvalue\" [removable]=\"true\" [selectable]=\"false\" (removed)=\"datatable.removeFilter(filter.key)\">\n                    {{filter.key}}: {{isModel(filter.value) ? (filter.value.name || filter.value.display_name) : filter.value}}\n                    <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n            <button (click)=\"openFiltersPanel()\" class=\"filter-button\" [class.active]=\"filterPanelRef\" #filterButton mat-icon-button>\n                <mat-icon svgIcon=\"filter-list\"></mat-icon>\n            </button>\n        </ng-container>\n        <datatable-header-search-input placeholder=\"Search {{ pluralResourceName }}\"></datatable-header-search-input>\n    </div>\n    <div class=\"selected-right-actions\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        <ng-content select=\"[rightContent]\"></ng-content>\n    </div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Model} from '../../core/types/models/model';\nimport {Subscription} from 'rxjs';\nimport {OverlayPanel} from '../../core/ui/overlay-panel/overlay-panel.service';\nimport {LEFT_POSITION} from '../../core/ui/overlay-panel/positions/left-position';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {DatatableFiltersPanelComponent} from '../datatable-filters-panel/datatable-filters-panel.component';\nimport {map} from 'rxjs/operators';\nimport {removeNullFromObject} from '../../core/utils/remove-null-from-object';\nimport {DatatableFilterValue} from '../types/datatable-filters';\n\n@Component({\n    selector: 'datatable-header',\n    templateUrl: './datatable-header.component.html',\n    styleUrls: ['./datatable-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableHeaderComponent implements OnInit, OnDestroy {\n    @HostBinding('class.rows-selected') public numberOfRowsSelected: number;\n    @ContentChild('tableFilters') filterPanelTemplate: TemplateRef<ElementRef>;\n    @ViewChild('filterButton', { read: ElementRef }) filterButton: ElementRef<HTMLButtonElement>;\n    @Input() pluralResourceName: string;\n    @Input() showSelectedActions = true;\n    private subscriptions: Subscription[] = [];\n    public filterPanelRef: OverlayPanelRef<any>;\n\n    public filters$ = this.datatable.filters$\n        .pipe(map(v => {\n            const filters = removeNullFromObject(v);\n            delete filters.query;\n            return filters;\n        }));\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n        private overlayPanel: OverlayPanel,\n    ) {}\n\n    ngOnInit() {\n        // close filter panel when any filter is selected.\n        const filterSub = this.datatable.filters$.subscribe(() => {\n            this.filterPanelRef && this.filterPanelRef.close();\n        });\n        const changeSub = this.datatable.selectedRows$.subscribe(value => {\n            this.numberOfRowsSelected = value.length;\n            this.cd.markForCheck();\n        });\n        this.subscriptions = [filterSub, changeSub];\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public openFiltersPanel() {\n        if (this.filterPanelRef) {\n            this.filterPanelRef.close();\n        } else {\n            const position = LEFT_POSITION.slice();\n            position[0].offsetY = 40;\n            position[1].offsetY = 40;\n            this.filterPanelRef = this.overlayPanel.open(DatatableFiltersPanelComponent, {\n                origin: this.filterButton,\n                position,\n                mobilePosition: 'center',\n                data: {filters: this.filterPanelTemplate},\n                maxWidth: '90%',\n            });\n            this.filterButton.nativeElement.classList.add('active');\n            this.filterPanelRef.afterClosed().subscribe(() => {\n                this.filterPanelRef = null;\n                this.filterButton.nativeElement.classList.remove('active');\n            });\n        }\n    }\n\n    public isModel(value: DatatableFilterValue) {\n        return typeof value === 'object' && value.id;\n    }\n}\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","export function removeNullFromObject<T>(obj: T): T {\r\n    const copy = {...obj};\r\n    Object.keys(copy).forEach(key => (copy[key] == null || copy[key] === '') && delete copy[key]);\r\n    return copy;\r\n}\r\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {UploadButtonDirective} from './directives/upload-button.directive';\r\nimport {UploadDropzoneDirective} from './directives/upload-dropzone.directive';\r\nimport {UploadProgressBarComponent} from './upload-progress-bar/upload-progress-bar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatProgressBarModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n    exports: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n})\r\nexport class UploadsModule {\r\n}\r\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","import {\r\n    AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, OnInit, TemplateRef, ViewChild, ViewEncapsulation\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\nimport {MatAutocomplete} from '@angular/material/autocomplete';\r\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\r\nimport {Model} from '../../../types/models/model';\r\n\r\ntype ChipValue = 'string' | Model;\r\n\r\n@Component({\r\n    selector: 'chip-input',\r\n    templateUrl: './chip-input.component.html',\r\n    styleUrls: ['./chip-input.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: ChipInputComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class ChipInputComponent implements ControlValueAccessor, OnInit, AfterViewInit {\r\n    @Input() placeholder: string;\r\n    @Input() type = 'text';\r\n    @Input() emailsInput = false;\r\n    @Input() suggestFn: (query: string) => Observable<ChipValue[]>;\r\n    @Input() @HostBinding('class.select-mode') selectMode = false;\r\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n    @ViewChild('inputEl') inputEl: ElementRef<HTMLInputElement>;\r\n    @ViewChild('selectModeTemplate') selectModeTemplate: TemplateRef<any>;\r\n\r\n    public formControl = new FormControl();\r\n\r\n    public propagateChange: (items: ChipValue[]) => void;\r\n    public items$ = new BehaviorSubject<ChipValue[]>([]);\r\n    public suggestedValues$ = new BehaviorSubject<ChipValue[]>([]);\r\n    @Input() set suggestedValues(values: ChipValue[]) {\r\n        this.suggestedValues$.next(values);\r\n    }\r\n\r\n    constructor(\r\n        public el: ElementRef<HTMLElement>,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        if (this.suggestFn) {\r\n            this.bindToSearchControl();\r\n        }\r\n        if (this.selectMode) {\r\n           // TODO: implement\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.emailsInput) {\r\n            this.parseEmailsOnPaste();\r\n        }\r\n    }\r\n\r\n    public remove(index: number) {\r\n        const items = [...this.items$.value];\r\n        items.splice(index, 1);\r\n        this.items$.next(items);\r\n        this.propagateChange(this.items$.value);\r\n    }\r\n\r\n    public addFromChipInput(value: ChipValue, propagate = true) {\r\n        if (value && !this.matAutocomplete.isOpen && !this.selectMode) {\r\n            this.add(value, propagate);\r\n        }\r\n    }\r\n\r\n    public addFromAutocomplete(value: ChipValue, propagate = true) {\r\n        this.add(value, propagate);\r\n    }\r\n\r\n    private add(value: ChipValue, propagate = true) {\r\n        value = (typeof value === 'string' ? value.trim() : value) as ChipValue;\r\n        const duplicate = this.findValueIndex(value) > -1;\r\n        if (value && !duplicate) {\r\n            this.items$.next([...this.items$.value, value]);\r\n            if (propagate) {\r\n                this.propagateChange(this.items$.value);\r\n            }\r\n        }\r\n        if (this.inputEl) {\r\n            this.inputEl.nativeElement.value = '';\r\n        }\r\n        this.formControl.setValue(null);\r\n        this.suggestedValues$.next([]);\r\n    }\r\n\r\n    private findValueIndex(value: ChipValue) {\r\n        if (typeof value === 'string') {\r\n            return this.items$.value.indexOf(value);\r\n        } else {\r\n            return this.items$.value.findIndex(v => (v as Model).id === value.id);\r\n        }\r\n    }\r\n\r\n    public writeValue(value: ChipValue[] = []) {\r\n        if (value && value.length) {\r\n            value.forEach(item => this.add(item, false));\r\n        } else if (this.items$.value.length) {\r\n            while (this.items$.value.length !== 0) {\r\n                this.remove(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: (items: ChipValue[]) => void) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n\r\n    private bindToSearchControl() {\r\n        this.formControl.valueChanges.pipe(\r\n            debounceTime(150),\r\n            distinctUntilChanged(),\r\n            switchMap(query => query ? this.suggestFn(query) : of([])),\r\n            catchError(() => of([])),\r\n        ).subscribe(values => {\r\n            const filtered = values.filter(v => this.findValueIndex(v) === -1);\r\n            this.suggestedValues$.next(filtered);\r\n        });\r\n    }\r\n\r\n    public displayChipValue(value: ChipValue): string {\r\n        return typeof value === 'object' ? value.name : value;\r\n    }\r\n\r\n    private parseEmailsOnPaste() {\r\n        this.inputEl.nativeElement.addEventListener('paste', e => {\r\n            const paste = (e.clipboardData || window['clipboardData']).getData('text');\r\n            const emails = paste.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n            if (emails) {\r\n                e.preventDefault();\r\n                const selection = window.getSelection();\r\n                if (selection.rangeCount) {\r\n                    selection.deleteFromDocument();\r\n                    emails.forEach(email => this.add(email));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","<mat-chip-list #chipList [selectable]=\"false\">\r\n    <mat-chip\r\n        *ngFor=\"let item of items$ | async; index as i\"\r\n        [selectable]=\"false\"\r\n        [removable]=\"!selectMode\"\r\n        (removed)=\"remove(i)\"\r\n    >\r\n        {{displayChipValue(item)}}\r\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\r\n    </mat-chip>\r\n    <input [placeholder]=\"placeholder | trans\"\r\n           *ngIf=\"!selectMode\"\r\n           #inputEl\r\n           [type]=\"type\"\r\n           class=\"mat-chip-input mat-input-element\"\r\n           [matChipInputFor]=\"chipList\"\r\n           [matChipInputAddOnBlur]=\"true\"\r\n           [matAutocomplete]=\"auto\"\r\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\r\n           [formControl]=\"formControl\"\r\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\r\n</mat-chip-list>\r\n\r\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.value)\" [autoActiveFirstOption]=\"true\">\r\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\r\n</mat-autocomplete>\r\n\r\n<ng-template #selectModeTemplate let-suggestions=\"suggestions\">\r\n    <mat-option *ngFor=\"let value of suggestions\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\r\n</ng-template>\r\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\n\n@Component({\n    selector: '[table-header-checkbox]',\n    template: `\n        <mat-checkbox\n            (change)=\"$event ? toggleAllRows() : null\"\n            [checked]=\"allRowsSelected()\"\n            [indeterminate]=\"anyRowsSelected() && ! allRowsSelected()\">\n        </mat-checkbox>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'table-checkbox'},\n})\nexport class TableHeaderCheckboxComponent implements OnInit, OnDestroy{\n    private changeRef: Subscription;\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datatable.selectedRows$.subscribe(() => {\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n    }\n\n    public anyRowsSelected(): boolean {\n        return !!this.datatable.selectedRows$.value.length;\n    }\n\n    public allRowsSelected() {\n        return this.datatable.selectedRows$.value.length &&\n            this.datatable.selectedRows$.value.length === this.datatable.data$.value?.length;\n    }\n\n    public toggleAllRows() {\n        if (this.allRowsSelected()) {\n            this.datatable.selectedRows$.next([]);\n        } else {\n            this.datatable.selectedRows$.next(\n                this.datatable.data$.value.map(v => v.id)\n            );\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SvgImageComponent} from './svg-image.component';\n\n\n@NgModule({\n    declarations: [\n        SvgImageComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        SvgImageComponent,\n    ]\n})\nexport class SvgImageModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NoResultsMessageComponent} from '@common/core/ui/no-results-message/no-results-message.component';\nimport {SvgImageModule} from '../svg-image/svg-image.module';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n    declarations: [\n        NoResultsMessageComponent,\n    ],\n    imports: [\n        CommonModule,\n        SvgImageModule,\n\n        MatIconModule,\n    ],\n    exports: [\n        NoResultsMessageComponent,\n    ]\n})\nexport class NoResultsMessageModule {\n}\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\nimport {ThemeService} from '../../theme.service';\n\n@Component({\n    selector: 'skeleton',\n    templateUrl: './skeleton.component.html',\n    styleUrls: ['./skeleton.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        'aria-busy': 'true',\n        'aria-valuemin': '0',\n        'aria-valuemax': '100',\n        'aria-valuetext': 'Loading...',\n        'role': 'progressbar',\n    }\n})\nexport class SkeletonComponent {\n    @Input() animation: 'pulsate' | 'wave' = 'wave';\n    @Input() variant: 'avatar' | 'text' | 'rect' = 'text';\n    @HostBinding('class.dark') dark = this.theme.isDarkMode();\n\n    @HostBinding('class.pulsate') get pulsate() {\n        return this.animation === 'pulsate';\n    }\n\n    @HostBinding('class.wave') get wave() {\n        return this.animation === 'wave';\n    }\n\n    @HostBinding('class.avatar') get avatar() {\n        return this.variant === 'avatar';\n    }\n\n    @HostBinding('class.text') get text() {\n        return this.variant === 'text';\n    }\n\n    @HostBinding('class.rect') get rect() {\n        return this.variant === 'rect';\n    }\n\n    constructor(private theme: ThemeService) {}\n}\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","export function hasKey<K extends string>(key: K, val: any): val is {[P in K]: any} {\r\n    return key in val;\r\n}\r\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","import { UploadedFile } from '../../uploaded-file';\r\nimport { UploadValidation } from './upload-validation';\r\nimport {Translations} from '@common/core/translations/translations.service';\r\n\r\nexport class BlockedExtensionsValidation extends UploadValidation {\r\n    constructor(\r\n        protected params: {extensions: string[]},\r\n        protected i18n: Translations\r\n    ) {\r\n        super();\r\n\r\n        this.errorMessage = this.i18n.t(\r\n            'These file types are not allowed: :extensions',\r\n            {extensions: this.params.extensions.join(', ')}\r\n        );\r\n    }\r\n\r\n    public fails(file: UploadedFile) {\r\n        return this.params.extensions.some(extension => {\r\n            return extension === file.extension;\r\n        });\r\n    }\r\n}\r\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","<ng-container *ngIf=\"user\">\n    <img [src]=\"user.avatar\" alt=\"\">\n    <div class=\"content\">\n        <div>{{user.display_name}}</div>\n        <div class=\"email secondary\">{{user.email}}</div>\n    </div>\n</ng-container>\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {User} from '@common/core/types/models/User';\n\n@Component({\n    selector: 'user-column',\n    templateUrl: './user-column.component.html',\n    styleUrls: ['./user-column.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'column-with-image'},\n})\nexport class UserColumnComponent {\n    @Input() user: User;\n    @Input() showEmail = false;\n}\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {filter} from 'rxjs/operators';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {slugifyString} from '../../core/utils/slugify-string';\n\n@Component({\n    selector: '[table-sort-header]',\n    templateUrl: './table-sort-header.component.html',\n    styleUrls: ['./table-sort-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        'tabindex': '0',\n        '(click)': 'handleClick()',\n        '(keydown)': 'handleKeydown($event)',\n        '(mouseenter)': 'onMouseEnter()',\n        '(mouseleave)': 'onMouseLeave()',\n    }\n})\nexport class TableSortHeaderComponent implements OnInit, AfterViewInit, OnDestroy {\n    @ViewChild('columnName', {static: true}) columnName: ElementRef<HTMLElement>;\n    @Input('table-sort-header') public orderBy: string;\n\n    @HostBinding('class.active')\n    public orderDir: 'desc'|'asc'|null = null;\n\n    @HostBinding('class.sort-disabled') get sortDisabled() {\n        return this.datable.config?.disableSort;\n    }\n\n    private sortSub: Subscription;\n    public arrowVisible = false;\n    public arrowDirection: 'down'|'up' = 'down';\n\n    constructor(\n        public datable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        private el: ElementRef<HTMLElement>,\n    ) {}\n\n    ngOnInit() {\n        // get column name from <ng-content> if none is explicitly provided\n        if ( ! this.orderBy) {\n            this.orderBy = slugifyString(this.columnName.nativeElement.textContent, '_');\n        }\n\n        // hide arrow when sort column is changed to different column\n        this.sortSub = this.datable.sort$\n            .pipe(filter(sort => (sort.orderBy !== this.orderBy)))\n            .subscribe(() => {\n                this.orderDir = null;\n                this.onMouseLeave();\n                this.cd.markForCheck();\n            });\n    }\n\n    ngAfterViewInit() {\n        // add '.cdk-keyboard-focused' when tabbing to other sort headers\n        this.focusMonitor.monitor(this.el).subscribe();\n    }\n\n    ngOnDestroy() {\n        this.sortSub.unsubscribe();\n        this.focusMonitor.stopMonitoring(this.el);\n    }\n\n    public changeSort() {\n        this.datable.sort$.next({\n            orderBy: this.orderBy,\n            orderDir: this.getDirection(this.orderDir),\n        });\n    }\n\n    private getDirection(current: string) {\n        switch (current) {\n            case 'asc':\n                this.arrowVisible = false;\n                return this.orderDir = null;\n            case 'desc':\n                this.arrowVisible = true;\n                this.arrowDirection = 'up';\n                return this.orderDir = 'asc';\n            default:\n                this.arrowVisible = true;\n                this.arrowDirection = 'down';\n                return this.orderDir = 'desc';\n        }\n    }\n\n    public onMouseEnter() {\n        if ( ! this.datable.config?.disableSort) {\n            this.arrowVisible = true;\n        }\n    }\n\n    public onMouseLeave() {\n        this.arrowVisible = false;\n        if ( ! this.orderDir) {\n            this.arrowDirection = 'down';\n        }\n    }\n\n    public handleClick() {\n        if ( ! this.datable.config?.disableSort) {\n            this.changeSort();\n        }\n    }\n\n    public handleKeydown(e: KeyboardEvent) {\n        if ( !this.datable.config?.disableSort && (e.keyCode === SPACE || e.keyCode === ENTER)) {\n            e.preventDefault();\n            this.changeSort();\n        }\n    }\n}\n","<span class=\"text\" #columnName>\n    <ng-content></ng-content>\n</span>\n<span class=\"icon-wrapper\" [ngClass]=\"arrowDirection\">\n    <mat-icon svgIcon=\"arrow-downward\" class=\"sort-icon\" [class.hint-visible]=\"arrowVisible\"></mat-icon>\n</span>\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","import { Injectable } from '@angular/core';\nimport { Workspace } from './types/workspace';\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\nimport { PaginatedBackendResponse } from '@common/core/types/pagination/paginated-backend-response';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { WorkspaceMember } from './types/workspace-member';\nimport { WorkspaceInvite } from './types/workspace-invite';\nimport { filter, tap } from 'rxjs/operators';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { hasKey } from '@common/core/utils/has-key';\nimport { CookieService } from '../core/services/cookie.service';\nimport { NotificationService } from '../notifications/notification-list/notification.service';\nimport { WORKSPACE_INVITE_NOTIF_TYPE, WorkspaceInviteNotif } from './types/workspace-invite-notif';\nimport { Toast } from '../core/ui/toast.service';\n\nconst PERSONAL_WORKSPACE = {name: 'Default', default: true, id: null};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WorkspacesService {\n    static BASE_URI = 'workspace';\n    public available$ = new BehaviorSubject<Workspace[]>([PERSONAL_WORKSPACE]);\n    public activeId$ = new BehaviorSubject<number>(this.getIdFromCookie());\n    public activeWorkspace$ = new BehaviorSubject<Workspace>(this.getIdFromCookie() ? null : PERSONAL_WORKSPACE);\n\n    constructor(\n        private http: AppHttpClient,\n        private currentUser: CurrentUser,\n        private cookie: CookieService,\n        private notifications: NotificationService,\n        private toast: Toast,\n    ) {}\n\n    public currentUserCan(permission: string): boolean {\n        const member = this.activeWorkspace$.value?.currentUser;\n        return member && (member.is_owner || member.permissions.findIndex(p => p.name === permission) > -1);\n    }\n\n    public select(workspaceId: number) {\n        if (workspaceId !== this.activeId$.value) {\n            this.cookie.set(this.cookieName(), workspaceId);\n            this.activeId$.next(workspaceId);\n        }\n        const workspace = this.available$.value.find(w => w.id === this.activeId$.value);\n        this.activeWorkspace$.next(workspace || this.available$.value[0]);\n    }\n\n    public pushAndSelect(workspace: Workspace) {\n        this.available$.next([...this.available$.value, workspace]);\n        this.select(workspace.id);\n    }\n\n    public replace(workspace: Workspace) {\n        const workspaces = [...this.available$.value];\n        const i = workspaces.findIndex(w => w.id === workspace.id);\n        if (i) {\n            workspaces[i] = workspace;\n        }\n        this.available$.next(workspaces);\n    }\n\n    public remove(ids: number[]) {\n        const workspaces = [...this.available$.value];\n        ids.forEach(id => {\n            const i = workspaces.findIndex(w => w.id === id);\n            if (i) {\n                workspaces.splice(i, 1);\n            }\n        });\n        this.available$.next(workspaces);\n        if (ids.includes(this.activeId$.value)) {\n            this.select(null);\n        }\n    }\n\n    public index(params: {userId?: number} & PaginationParams): PaginatedBackendResponse<Workspace> {\n        return this.http.get<{pagination: PaginationResponse<Workspace>}>(`${WorkspacesService.BASE_URI}`, params)\n            .pipe(tap(response => {\n                this.available$.next([...this.available$.value, ...response.pagination.data]);\n                this.select(this.activeId$.value);\n            }));\n    }\n\n    public get(workspaceId: number): BackendResponse<{workspace: Workspace}> {\n        return this.http.get(`${WorkspacesService.BASE_URI}/${workspaceId}`);\n    }\n\n    public delete(ids: number[]): BackendResponse<unknown> {\n        return this.http.delete(`${WorkspacesService.BASE_URI}/${ids}`)\n            .pipe(tap(() => {\n                this.remove(ids);\n            }));\n    }\n\n    public create(payload: Partial<Workspace>): BackendResponse<{workspace: Workspace}> {\n        return this.http.post<{workspace: Workspace}>(`${WorkspacesService.BASE_URI}`, payload)\n            .pipe(tap(response => this.pushAndSelect(response.workspace)));\n    }\n\n    public update(id: number, payload: Partial<Workspace>): BackendResponse<{workspace: Workspace}> {\n        return this.http.put<{workspace: Workspace}>(`${WorkspacesService.BASE_URI}/${id}`, payload)\n            .pipe(tap(response => this.replace(response.workspace)));\n    }\n\n    public invitePeople(workspaceId: number, params: {emails: string[], roleId: number}): BackendResponse<{invites: WorkspaceInvite[]}> {\n        return this.http.post(`${WorkspacesService.BASE_URI}/${workspaceId}/invite`, params);\n    }\n\n    public resendInvite(workspaceId: number, inviteId: string): BackendResponse<{invite: WorkspaceInvite}> {\n        return this.http.post(`${WorkspacesService.BASE_URI}/${workspaceId}/${inviteId}/resend`);\n    }\n\n    public deleteMember(workspaceId: number, userId: number): BackendResponse<unknown> {\n        return this.http.delete(`${WorkspacesService.BASE_URI}/${workspaceId}/member/${userId}`)\n            .pipe(tap(() => {\n                if (userId === this.currentUser.get('id')) {\n                    this.remove([workspaceId]);\n                }\n            }));\n    }\n\n    public deleteInvite(inviteId: string): BackendResponse<void> {\n        return this.http.delete(`${WorkspacesService.BASE_URI}/invite/${inviteId}`);\n    }\n\n    public changeRole(workspaceId: number, member: WorkspaceMember|WorkspaceInvite, roleId: number): BackendResponse<void> {\n        const memberId = hasKey('member_id', member) ? member.member_id : member.id;\n        return this.http.post(`${WorkspacesService.BASE_URI}/${workspaceId}/${member.model_type}/${memberId}/change-role`, {roleId});\n    }\n\n    public join(inviteId: string): BackendResponse<{workspace: Workspace}> {\n        return this.http.get(`workspace/join/${inviteId}`);\n    }\n\n    public bindToNotificationClick(): Subscription {\n        return this.notifications.clickedOnNotification$\n            .pipe(filter(data => data.notification.type === WORKSPACE_INVITE_NOTIF_TYPE))\n            .subscribe(data => {\n                const inviteId = (data.notification as WorkspaceInviteNotif).data.inviteId;\n                if (data.action.action === 'join') {\n                    this.join(inviteId).subscribe(response => {\n                        this.notifications.delete([data.notification]).subscribe();\n                        this.pushAndSelect(response.workspace);\n                        this.toast.open('Joined workspace.');\n                    });\n                } else if (data.action.action === 'decline') {\n                    this.deleteInvite(inviteId).subscribe(() => {\n                        this.notifications.delete([data.notification]).subscribe();\n                        this.toast.open('Declined workspace invite.');\n                    });\n                }\n            });\n    }\n\n    private getIdFromCookie() {\n        const workspaceId = this.cookie.get(this.cookieName());\n        return typeof workspaceId === 'string' ? parseInt(workspaceId) : workspaceId;\n    }\n\n    private cookieName() {\n        return `${this.currentUser.get('id')}_activeWorkspace`;\n    }\n}\n","import { DatabaseNotification, DatabaseNotificationData } from '../../notifications/database-notification';\r\n\r\nexport const WORKSPACE_INVITE_NOTIF_TYPE = 'Common\\\\Workspaces\\\\Notifications\\\\WorkspaceInvitation';\r\n\r\nexport interface WorkspaceInviteNotif extends DatabaseNotification {\r\n    data: DatabaseNotificationData & {inviteId: string};\r\n}\r\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n//# sourceMappingURL=mapTo.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus();\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() { return this._position; }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() { return this._mode; }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() { return this._disableClose; }\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() { return this._opened; }\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurring of the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true);\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        return this._setOpen(isOpen, /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), openedVia);\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n     *   origin will be used later when focus is restored on drawer close.\n     */\n    _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus();\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() { return this._start; }\n    /** The drawer child with the `end` position. */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() { return this._autosize; }\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() { return this._fixedInViewport; }\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ], CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport {DatatableService} from '../../datatable.service';\nimport {Model} from '@common/core/types/models/model';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'datatable-header-search-input',\n    templateUrl: './datatable-header-search-input.component.html',\n    styleUrls: ['./datatable-header-search-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableHeaderSearchInputComponent implements OnInit {\n    public searchControl = new FormControl(this.route.snapshot.queryParams.query);\n    @Input() placeholder: string;\n    @Input() hideIcon = false;\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private route: ActivatedRoute,\n    ) {}\n\n    ngOnInit() {\n        this.searchControl.valueChanges\n            .pipe(debounceTime(400), distinctUntilChanged())\n            .subscribe(query => {\n                this.datatable.addFilter('query', query);\n            });\n    }\n}\n","<div class=\"input-container search-input-container\">\n    <input type=\"text\" class=\"search-input\" [placeholder]=\"placeholder | trans\" [formControl]=\"searchControl\">\n    <mat-icon svgIcon=\"search\" *ngIf=\"!hideIcon\"></mat-icon>\n</div>\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\n\n@Component({\n    selector: '[table-body-checkbox]',\n    template: `\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? toggleRow(rowId) : null\"\n                      [checked]=\"isRowSelected(rowId)\">\n        </mat-checkbox>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'table-checkbox'}\n})\nexport class TableBodyCheckboxComponent implements OnInit, OnDestroy {\n    @Input('table-body-checkbox') rowId: number;\n    private changeRef: Subscription;\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datatable.selectedRows$.subscribe(value => {\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n    }\n\n    public isRowSelected(id: number): boolean {\n        return this.datatable.selectedRows$.value.indexOf(id) > -1;\n    }\n\n    public toggleRow(id: number) {\n        if (this.isRowSelected(id)) {\n            const array = this.datatable.selectedRows$.value.slice();\n            const i = this.datatable.selectedRows$.value.indexOf(id);\n            array.splice(i, 1);\n            this.datatable.selectedRows$.next(array);\n        } else {\n            this.datatable.selectedRows$.next(\n                [...this.datatable.selectedRows$.value, id]\n            );\n        }\n    }\n}\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import { Injectable } from '@angular/core';\r\nimport {UploadValidator} from './upload-validator';\r\nimport {FileSizeValidation} from './validations/file-size-validation';\r\nimport {AllowedExtensionsValidation} from './validations/allowed-extensions-validation';\r\nimport {BlockedExtensionsValidation} from './validations/blocked-extensions-validation';\r\nimport {convertToBytes} from '../../core/utils/convertToBytes';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DefaultUploadValidator extends UploadValidator {\r\n    protected readonly DEFAULT_MAX_FILE_SIZE_MB = 8;\r\n    public showToast = true;\r\n\r\n    protected initValidations() {\r\n        this.validations.push(\r\n            new FileSizeValidation(\r\n                {maxSize: this.getMaxFileSize()},\r\n                this.i18n\r\n            )\r\n        );\r\n\r\n        const allowedExtensions = this.getAllowedExtensions(),\r\n            blockedExtensions = this.getBlockedExtensions();\r\n\r\n        if (allowedExtensions && allowedExtensions.length) {\r\n            this.validations.push(new AllowedExtensionsValidation(\r\n                {extensions: allowedExtensions}, this.i18n\r\n            ));\r\n        }\r\n\r\n        if (blockedExtensions && blockedExtensions.length) {\r\n            this.validations.push(new BlockedExtensionsValidation(\r\n                {extensions: blockedExtensions}, this.i18n\r\n            ));\r\n        }\r\n    }\r\n\r\n    protected getMaxFileSize(): number {\r\n        return this.settings.get(\r\n            'uploads.max_size',\r\n            convertToBytes(this.DEFAULT_MAX_FILE_SIZE_MB, 'MB')\r\n        );\r\n    }\r\n\r\n    protected getAllowedExtensions() {\r\n        return this.settings.getJson('uploads.allowed_extensions');\r\n    }\r\n\r\n    protected getBlockedExtensions() {\r\n        return this.settings.getJson('uploads.blocked_extensions');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {UploadQueueItem} from './upload-queue-item';\r\nimport {BehaviorSubject, EMPTY, from, ReplaySubject, Subject, throwError} from 'rxjs';\r\nimport {catchError, filter, map, mergeMap, takeUntil} from 'rxjs/operators';\r\nimport {UploadedFile} from '../uploaded-file';\r\nimport {UploadCompletedEvent, UploadEvent, UploadEventTypes, UploadProgressEvent} from '../utils/upload-progress-event';\r\nimport {UploadFileResponse, UploadsApiService} from '../uploads-api.service';\r\nimport {FileEntry} from '../types/file-entry';\r\nimport {UploadValidator} from '../validation/upload-validator';\r\nimport {BackendErrorResponse} from '../../core/types/backend-error-response';\r\nimport {DefaultUploadValidator} from '../validation/default-upload-validator';\r\nimport {BackendResponse} from '@common/core/types/backend-response';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {HttpErrors, UPLOAD_FAIL_LEARN_MORE_LINK} from '@common/core/http/errors/http-errors.enum';\r\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UploadQueueService {\r\n    public uploads$ = new BehaviorSubject<UploadQueueItem[]>([]);\r\n    public totalProgress$ = new ReplaySubject<number>(1);\r\n    public uploadsAdded$ = new Subject<UploadQueueItem[]>();\r\n    public count$ = new BehaviorSubject<{pending: number, completed: number}>({pending: 0, completed: 0});\r\n\r\n    constructor(\r\n        private api: UploadsApiService,\r\n        private defaultValidator: DefaultUploadValidator,\r\n        private toast: Toast,\r\n        private currentUser: CurrentUser,\r\n        private settings: Settings,\r\n    ) {}\r\n\r\n    public isEmpty(): boolean {\r\n        return !this.uploads$.value.length;\r\n    }\r\n\r\n    public getAllCompleted(): FileEntry[] {\r\n        return this.uploads$.value\r\n            .filter(queueItem => queueItem.completed)\r\n            .map(queueItem => queueItem.fileEntry);\r\n    }\r\n\r\n    public updateTotalProgress() {\r\n        const progress = this.uploads$.value.map(upload => upload.progress$.value.percentage || 0);\r\n        this.totalProgress$.next(progress.reduce((p, c) => p + c, 0) / progress.length);\r\n    }\r\n\r\n    public totalProgress() {\r\n        return this.totalProgress$.asObservable();\r\n    }\r\n\r\n    public start(files: UploadedFile[]|{[key: string]: UploadedFile}, config: UploadApiConfig = {}): BackendResponse<UploadFileResponse> {\r\n        const validator = config.validator || this.defaultValidator;\r\n        let uploadQueueItems = [] as UploadQueueItem[];\r\n\r\n        // push new uploads onto existing queue\r\n        if (Array.isArray(files)) {\r\n            uploadQueueItems = this.transformUploads(files, validator);\r\n            this.uploads$.next(this.uploads$.value.concat(uploadQueueItems));\r\n            this.uploadsAdded$.next(uploadQueueItems);\r\n\r\n        // replace existing uploads in the queue with new upload by specified upload ID\r\n        } else {\r\n            const replacements = this.uploads$.value.map(queueItem => {\r\n                if (files[queueItem.id]) {\r\n                    const transformed = this.transformUploads([files[queueItem.id]], validator, queueItem.id)[0];\r\n                    uploadQueueItems.push(transformed);\r\n                    return transformed;\r\n                } else {\r\n                    return queueItem;\r\n                }\r\n            });\r\n            this.uploads$.next(replacements);\r\n        }\r\n\r\n        this.updateCount();\r\n\r\n        return from(uploadQueueItems.filter(u => !u.error$.value))\r\n            .pipe(\r\n                mergeMap(uploadQueueItem => {\r\n                    return this.api.upload(uploadQueueItem.uploadedFile, config).pipe(\r\n                        catchError((errResponse: BackendErrorResponse) => {\r\n                            this.handleUploadFailure(errResponse, uploadQueueItem, validator);\r\n                            // if one item in the queue fails, either continue uploading other items\r\n                            // or immediately stop uploading and bubble up error to subscribers\r\n                            return config.bubbleError ? throwError(errResponse) : EMPTY;\r\n                        }),\r\n                        takeUntil(uploadQueueItem.canceled$),\r\n                        map(response => {\r\n                            this.handleUploadEvent(response, uploadQueueItem, config.willProcessFiles);\r\n                            // assign queue item ID to upload completed response so\r\n                            // file entry can be matched to specific upload queue item\r\n                            if (response.name === UploadEventTypes.COMPLETED) {\r\n                                response.body.queueItemId = uploadQueueItem.id;\r\n                            }\r\n                            return response;\r\n                        }),\r\n                    );\r\n                }, 1),\r\n                filter(e => e.name === UploadEventTypes.COMPLETED),\r\n                map((e: UploadCompletedEvent) => e.body)\r\n            );\r\n    }\r\n\r\n    public updateProgress(id: string, e: UploadProgressEvent) {\r\n        const queueItem = this.find(id);\r\n        if ( ! queueItem) return;\r\n\r\n        queueItem.setProgress({\r\n            eta: e.eta,\r\n            speed: e.speed,\r\n            percentage: e.progress,\r\n            totalBytes: e.totalBytes,\r\n            completedBytes: e.completedBytes,\r\n        });\r\n\r\n        this.updateTotalProgress();\r\n    }\r\n\r\n    public completeUpload(id: string, response: UploadFileResponse) {\r\n        const queueItem = this.find(id);\r\n        if ( ! queueItem) return;\r\n\r\n        queueItem.uploadedResponse$.next(response);\r\n        queueItem.fileEntry = response.fileEntry;\r\n        queueItem.complete();\r\n        this.updateTotalProgress();\r\n    }\r\n\r\n    public errorUpload(id: string, message?: string) {\r\n        this.find(id).addError(message);\r\n    }\r\n\r\n    public reset() {\r\n        this.uploads$.value.forEach(u => u.cancel());\r\n        this.uploads$.next([]);\r\n    }\r\n\r\n    public remove(id: string) {\r\n        const i = this.uploads$.value.findIndex(u => u.id === id),\r\n            upload = this.uploads$.value[i];\r\n        upload.completed ? upload.finalize() : upload.cancel();\r\n        this.uploads$.value.splice(i, 1);\r\n        this.uploads$.next(this.uploads$.value);\r\n    }\r\n\r\n    public find(id: string): UploadQueueItem {\r\n        return this.uploads$.value.find(u => u.id === id);\r\n    }\r\n\r\n    /**\r\n     * Transform specified files into upload queue items.\r\n     */\r\n    protected transformUploads(files: UploadedFile[], validator: UploadValidator, queueId?: string) {\r\n        return files.map(file => {\r\n            const activeUpload = new UploadQueueItem(file, queueId);\r\n\r\n            // validate upload\r\n            if (validator) {\r\n                const result = validator.validate(file);\r\n                if (result.failed) activeUpload.addError(result.errorMessage);\r\n            }\r\n\r\n            return activeUpload;\r\n        });\r\n    }\r\n\r\n    protected handleUploadEvent(event: UploadEvent, upload: UploadQueueItem, willProcessFiles = false) {\r\n        if (event.name === UploadEventTypes.PROGRESS) {\r\n            // upload is considered complete when progress equals 100\r\n            // but file processing for large files might take some time\r\n            // after file is fully uploaded so we should only set\r\n            // progress as 100 on final completed response\r\n            if (event.progress === 100) {\r\n                // TODO: implement processing functionality for chunked upploading\r\n                event = {...event, progress: 99};\r\n                if (willProcessFiles) {\r\n                    upload.processing$.next(true);\r\n                }\r\n            }\r\n            this.updateProgress(upload.id, event);\r\n        } else if (event.name === UploadEventTypes.COMPLETED) {\r\n            this.completeUpload(upload.id, event.body);\r\n            this.updateCount();\r\n        }\r\n    }\r\n\r\n    protected handleUploadFailure(response: BackendErrorResponse, upload: UploadQueueItem, validator: UploadValidator) {\r\n        let msg = response?.errors?.file,\r\n            showLearnMoreButton = null;\r\n        if ( ! msg) {\r\n            msg = HttpErrors.DefaultUpload;\r\n            showLearnMoreButton = this.currentUser.isAdmin() && !this.settings.get('site.hide_docs_buttons');\r\n        }\r\n\r\n        this.errorUpload(upload.id, msg);\r\n        this.updateCount();\r\n        this.updateTotalProgress();\r\n\r\n        if (validator.showToast) {\r\n            this.toast.open(msg, {action: showLearnMoreButton ? 'Learn More' : null})\r\n                .onAction()\r\n                .subscribe(() => {\r\n                    window.open(UPLOAD_FAIL_LEARN_MORE_LINK);\r\n                });\r\n        }\r\n    }\r\n\r\n    private updateCount() {\r\n        const pending = this.uploads$.value.filter(u => u.inProgress).length;\r\n        this.count$.next({pending, completed: this.uploads$.value.length - pending});\r\n    }\r\n}\r\n","import { BehaviorSubject, ReplaySubject, Subject } from 'rxjs';\r\nimport { randomString } from '../../core/utils/random-string';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { FileEntry } from '../types/file-entry';\r\nimport { UploadFileResponse } from '@common/uploads/uploads-api.service';\r\n\r\nexport interface UploadQueueItemProgress {\r\n    percentage?: number;\r\n    speed?: string;\r\n    eta?: string;\r\n    totalBytes?: number;\r\n    completedBytes?: number;\r\n}\r\n\r\nexport class UploadQueueItem {\r\n    id: string;\r\n    canceled$: Subject<boolean> = new Subject();\r\n    processing$ = new BehaviorSubject<boolean>(false);\r\n\r\n    // file info (static)\r\n    uploadedFile: UploadedFile;\r\n\r\n    // backend response once file is uploaded\r\n    uploadedResponse$ = new ReplaySubject<UploadFileResponse>(1);\r\n\r\n    // uploaded file entry (only available on completed uploads)\r\n    fileEntry: FileEntry;\r\n\r\n    // upload progress information (will change)\r\n    progress$ = new BehaviorSubject<UploadQueueItemProgress>({percentage: 0});\r\n\r\n    error$ = new BehaviorSubject<string>(null);\r\n\r\n    // custom data that can be attached to queue item\r\n    public customData: object = {};\r\n\r\n    get completed(): boolean {\r\n        return !this.processing$.value && this.progress$.value.percentage === 100;\r\n    }\r\n\r\n    get inProgress(): boolean {\r\n        return !this.error$.value && !this.completed;\r\n    }\r\n\r\n    constructor(file: UploadedFile, queueId?: string) {\r\n        this.uploadedFile = file;\r\n        this.id = queueId || randomString();\r\n    }\r\n\r\n    public cancel() {\r\n        // cancelling before finalizing might cause infinite loop\r\n        this.canceled$.next(true);\r\n        this.finalize();\r\n    }\r\n\r\n    public complete() {\r\n        this.setProgress({percentage: 100, eta: null});\r\n        this.finalize();\r\n    }\r\n\r\n    public finalize() {\r\n        this.uploadedResponse$.complete();\r\n        this.canceled$.complete();\r\n        this.progress$.complete();\r\n    }\r\n\r\n    public finishProcessing() {\r\n        this.processing$.next(false);\r\n        this.processing$.complete();\r\n    }\r\n\r\n    public addError(message: string) {\r\n        this.error$.next(message);\r\n    }\r\n\r\n    public setProgress(data: Partial<UploadQueueItemProgress>) {\r\n        this.progress$.next({\r\n            ...this.progress$.value,\r\n            ...data,\r\n        });\r\n    }\r\n}\r\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","import {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Pipe({\r\n    name: 'formattedDate'\r\n})\r\nexport class FormattedDatePipe implements PipeTransform {\r\n    private readonly format: string;\r\n    private angularPipe: DatePipe;\r\n\r\n    constructor(private settings: Settings, @Inject(LOCALE_ID) private _locale: string) {\r\n        this.format = this.settings.get('dates.format', 'yyyy-MM-dd');\r\n        this.angularPipe = new DatePipe(_locale);\r\n    }\r\n\r\n    transform(value: any, format?: string, timezone?: string, locale?: string): string | null {\r\n        // slash as separator for date will cause parse errors\r\n        value = (value && typeof value === 'string') ? value.replace(/\\//g, '-') : value;\r\n        return this.angularPipe.transform(value, format || this.format, timezone, locale);\r\n    }\r\n}\r\n","import {ConfirmModalData} from '../core/ui/confirm-modal/confirm-modal.component';\r\n\r\nexport const DELETE_RESOURCE_MESSAGE: ConfirmModalData = {\r\n    title: `Delete :resource`,\r\n    body:  `Are you sure you want to delete selected :resource?`,\r\n    ok:    'Delete'\r\n};\r\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormattedDatePipe} from '@common/core/ui/format-pipes/formatted-date.pipe';\nimport {FormattedFileSizePipe} from '@common/uploads/formatted-file-size.pipe';\nimport { FaviconPipe } from './favicon.pipe';\n\n\n@NgModule({\n    declarations: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n        FaviconPipe,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n        FaviconPipe,\n    ]\n})\nexport class FormatPipesModule {\n}\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SkeletonComponent} from './skeleton.component';\n\n@NgModule({\n    declarations: [\n        SkeletonComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        SkeletonComponent,\n    ]\n})\nexport class SkeletonModule {\n}\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy } from '@angular/core';\r\nimport { UploadQueueService } from '../upload-queue/upload-queue.service';\r\nimport { animationFrameScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'upload-progress-bar',\r\n    templateUrl: './upload-progress-bar.component.html',\r\n    styleUrls: ['./upload-progress-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadProgressBarComponent implements OnDestroy {\r\n    @HostBinding('class.hidden') hidden = true;\r\n    private subscription: Subscription;\r\n    public progress: number;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        public uploadQueue: UploadQueueService,\r\n        private cd: ChangeDetectorRef,\r\n    ) {\r\n        this.subscription = this.uploadQueue.totalProgress()\r\n            // material progress bar animation lasts 250ms\r\n            .pipe(throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}))\r\n            .subscribe(progress => {\r\n                this.progress = progress;\r\n                this.hidden = progress === 100 || this.uploadQueue.count$.value.pending === 0;\r\n                this.cd.markForCheck();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}\r\n\r\n","<mat-progress-bar mode=\"determinate\" [value]=\"progress\" color=\"accent\"></mat-progress-bar>\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\n@Component({\n    selector: 'datatable-footer',\n    templateUrl: './datatable-footer.component.html',\n    styleUrls: ['./datatable-footer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableFooterComponent implements OnInit, OnDestroy {\n    @Input() hidePerPage = false;\n    public perPageControl = new FormControl(15);\n    public from: number;\n    public to: number;\n    public totalRecords: number;\n    public havePrevious: boolean;\n    public haveNext: boolean;\n    private changeRef: Subscription;\n\n    constructor(\n        public datable: DatatableService<any>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datable.paginator.response$\n            .pipe(filter(r => !!r?.pagination), map(r => r.pagination))\n            .subscribe(pagination => {\n                this.to = pagination.per_page * pagination.current_page;\n                this.from = (this.to - pagination.per_page) || 1;\n                this.totalRecords = pagination.total;\n                this.havePrevious = pagination.current_page > 1;\n                this.haveNext = pagination.current_page < pagination.last_page;\n                this.perPageControl.setValue(parseInt('' + pagination.per_page), {emitEvent: false});\n                this.cd.markForCheck();\n            });\n\n        this.perPageControl.valueChanges\n            .subscribe(perPage => {\n                this.datable.paginator.changePerPage(perPage);\n            });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n        this.datable.destroy();\n    }\n\n    public previousPage() {\n        this.datable.paginator.previousPage();\n    }\n\n    public nextPage() {\n        this.datable.paginator.nextPage();\n    }\n}\n","<div class=\"page-size\" *ngIf=\"!hidePerPage\">\n    <div class=\"page-size-label\" trans>Items per page</div>\n    <div class=\"input-container\">\n        <select class=\"page-size-input\" [formControl]=\"perPageControl\">\n            <option [ngValue]=\"10\">10</option>\n            <option [ngValue]=\"15\">15</option>\n            <option [ngValue]=\"20\">20</option>\n            <option [ngValue]=\"50\">50</option>\n            <option [ngValue]=\"100\">100</option>\n        </select>\n    </div>\n</div>\n<div class=\"range-actions\">\n    <div class=\"range-label\" *ngIf=\"from && to && totalRecords\">\n        {{from}} - {{to}} {{'of' | trans}} {{totalRecords}}\n    </div>\n    <button type=\"button\" [disabled]=\"!havePrevious || (datable.paginator.loading$ | async)\" class=\"range-button\" (click)=\"previousPage()\" mat-icon-button>\n        <mat-icon svgIcon=\"chevron-left\"></mat-icon>\n    </button>\n    <button type=\"button\" [disabled]=\"!haveNext || (datable.paginator.loading$ | async)\" class=\"range-button\" (click)=\"nextPage()\" mat-icon-button>\n        <mat-icon svgIcon=\"chevron-right\"></mat-icon>\n    </button>\n</div>\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {getFaviconFromUrl} from '@common/core/utils/get-favicon-from-url';\n\n@Pipe({\n    name: 'favicon'\n})\nexport class FaviconPipe implements PipeTransform {\n    transform(url: string): string {\n        if (!url) {\n            return null;\n        }\n        if (url.includes('youtube')) {\n            return 'https://www.youtube.com/s/desktop/ca54e1bd/img/favicon.ico';\n        } else {\n            return getFaviconFromUrl(url);\n        }\n    }\n}\n","import {isAbsoluteUrl} from '@common/core/utils/is-absolute-url';\r\n\r\nexport function getFaviconFromUrl(url: string) {\r\n    if ( ! url) {\r\n        return null;\r\n    }\r\n    // relative url to current site\r\n    if ( ! isAbsoluteUrl(url)) {\r\n        url = window.location.protocol + '//' + window.location.host;\r\n    }\r\n    const domain = new URL(url).origin;\r\n    return 'https://www.google.com/s2/favicons?domain=' + domain;\r\n}\r\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","import { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { SortColumn } from '../../entries/available-sorts';\r\nimport {\r\n    DrivePage,\r\n    FolderPage,\r\n    RECENT_PAGE,\r\n    SEARCH_PAGE,\r\n    SHARES_PAGE,\r\n    STARRED_PAGE,\r\n    TRASH_PAGE,\r\n    WORKSPACE_INDEX_PAGE,\r\n} from '../models/drive-page';\r\n\r\nexport interface LoadEntriesAction {\r\n    queryParams: DriveApiIndexParams;\r\n    page?: DrivePage;\r\n    folder?: DriveFolder;\r\n    loadMore?: boolean;\r\n}\r\n\r\nexport class RecentEntriesPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Recent Entries Page Opened';\r\n    public page = RECENT_PAGE;\r\n    public queryParams = {orderBy: 'created_at' as SortColumn, recentOnly: true};\r\n}\r\n\r\nexport class FolderPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Folder Page Opened';\r\n    public page: DrivePage;\r\n    public queryParams = {};\r\n    constructor(folderHash: string|null) {\r\n        this.page = new FolderPage({hash: folderHash} as DriveFolder);\r\n    }\r\n}\r\n\r\nexport class SharesFolderOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Shared folder opened';\r\n    public page = SHARES_PAGE;\r\n    public queryParams = {sharedOnly: true};\r\n}\r\n\r\nexport class TrashPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Trash Page Opened';\r\n    public page = TRASH_PAGE;\r\n    public queryParams = {deletedOnly: true};\r\n}\r\n\r\nexport class WorkspacesIndexPageOpened {\r\n    static readonly type = '[Drive] Workspaces Index Page Opened';\r\n    public page = WORKSPACE_INDEX_PAGE;\r\n}\r\n\r\nexport class SearchPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Search Page Opened';\r\n    public page = SEARCH_PAGE;\r\n    constructor(public queryParams: {\r\n        type?: string;\r\n        query?: string;\r\n    } = {}) {}\r\n}\r\n\r\nexport class StarredPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Starred Entries Page Opened';\r\n    public page = STARRED_PAGE;\r\n    public queryParams = {starredOnly: true};\r\n}\r\n\r\nexport class EntriesSelectedViaDrag {\r\n    static readonly type = '[Drive] Entries Selected Via Drag';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntrySelectedViaContextMenu {\r\n    static readonly type = '[Drive] File Selected Via ContextMenu';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryTapped {\r\n    static readonly type = '[Drive] User Tapped File';\r\n    constructor(public entry: DriveEntry, public ctrlKey = false) {}\r\n}\r\n\r\nexport class EntryDoubleTapped {\r\n    static readonly type = '[Drive] User Double Tapped Entry';\r\n    constructor(public entry: DriveEntry) {}\r\n}\r\n\r\nexport class FileDeleteSuccess {\r\n    static readonly type = '[Drive] Successfully Deleted Files';\r\n    constructor(public deletedFiles: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryContextMenuOpened {\r\n    static readonly type = '[Drive] Entry Context Menu Opened';\r\n    constructor(public entry: DriveEntry) {}\r\n}\r\n\r\nexport class NewFolderCreated {\r\n    static readonly type = '[Drive] New Folder Created';\r\n    constructor(public folder: DriveFolder) {}\r\n}\r\n\r\nexport class EntryRenamed {\r\n    static readonly type = '[Drive] Entry Renamed';\r\n    constructor(public entry: DriveEntry, public newName: string) {}\r\n}\r\n\r\nexport class StartedDragging {\r\n    static readonly type = '[Drive] Started Dragging';\r\n}\r\n\r\nexport class StoppedDragging {\r\n    static readonly type = '[Drive] Stopped Dragging';\r\n}\r\n\r\nexport class MoveEntriesSuccess {\r\n    static readonly type = '[Drive API] Move Entries Success';\r\n    constructor(\r\n        public destination: number,\r\n        public oldLocation: number,\r\n        public entries: DriveEntry[]\r\n    ) {}\r\n}\r\n\r\nexport class MoveEntriesFailed {\r\n    static readonly type = '[Drive API] Move Entries Failed';\r\n    constructor(public messages: object) {}\r\n}\r\n\r\nexport class TrashedEntriesDeleteSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Delete Forever Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class TrashedEntriesRestoreSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Restore Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class NotEnoughSpaceError {\r\n    static readonly type = '[Drive] Not Enough Space Error';\r\n}\r\n\r\nexport class UserSpaceUsageChanged {\r\n    static readonly type = '[Drive] User Space Usage Changed';\r\n}\r\n\r\nexport class BreakpointChanged {\r\n    static readonly type = '[Drive] BreakpointChanged';\r\n    constructor(public status: {isMobile: boolean}) {}\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { DriveFolder } from './folders/models/driveFolder';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUrlsService {\n    public driveRoot() {\n        return '/drive';\n    }\n\n    public folder(folder: DriveFolder) {\n        if ( ! folder?.id) {\n            return this.driveRoot();\n        } else {\n            return `/drive/folders/${(folder as DriveFolder).hash}`;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { DriveEntry } from './files/models/drive-entry';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { DriveFolder } from './folders/models/driveFolder';\nimport { Observable } from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { Tag } from '@common/core/types/models/Tag';\nimport { SortColumn, SortDirection } from './entries/available-sorts';\nimport { UserSpaceUsage } from './state/models/user-space-usage';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\n\nexport interface DriveApiIndexParams {\n    orderBy?: SortColumn;\n    orderDir?: SortDirection;\n    folderId?: number;\n    userId?: number;\n    query?: string;\n    type?: string;\n    deletedOnly?: boolean;\n    starredOnly?: boolean;\n    sharedOnly?: boolean;\n    per_page?: number;\n    page?: number;\n    recentOnly?: boolean;\n}\n\nexport interface DriveEntriesPaginationResponse extends PaginationResponse<DriveFolder> {\n    folder: DriveFolder;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveEntryApiService {\n    constructor(private http: AppHttpClient, private currentUser: CurrentUser) {}\n\n    public getEntriesForFolder(params: DriveApiIndexParams = {}): Observable<DriveEntriesPaginationResponse> {\n        return this.http.get('drive/entries', params);\n    }\n\n    public getCurrentUserEntries(params: DriveApiIndexParams): Observable<DriveEntriesPaginationResponse> {\n        params.userId = this.currentUser.get('id');\n        return this.http.get('drive/entries', params);\n    }\n\n    public update(entryId: number, params: {name?: string, description?: string}): BackendResponse<{fileEntry: DriveEntry}> {\n        return this.http.put('uploads/' + entryId, params);\n    }\n\n    public delete(params: {entryIds?: number[], deleteForever?: boolean, emptyTrash?: boolean}): BackendResponse<void> {\n        return this.http.delete('drive/entries', params);\n    }\n\n    public copy(params: {entryIds: number[]}): BackendResponse<{entries: DriveEntry[]}> {\n        return this.http.post('drive/entries/copy', params);\n    }\n\n    public restore(params: {entryIds: number[]}): BackendResponse<void> {\n        return this.http.post('drive/entries/restore', params);\n    }\n\n    public emptyTrash(): BackendResponse<void> {\n        return this.delete({emptyTrash: true});\n    }\n\n    public moveEntries(params: {entryIds: number[], destination: number}): BackendResponse<{entries: DriveEntry[]}> {\n        return this.http.post('drive/entries/move', params);\n    }\n\n    public addStar(ids: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/star', {ids});\n    }\n\n    public removeStar(ids: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/unstar', {ids});\n    }\n\n    public getSpaceUsage(): BackendResponse<UserSpaceUsage> {\n        return this.http.get('drive/user/space-usage');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {FOLDERS_API_ROUTES} from './folders-api-routes.enum';\nimport {DriveFolder} from '../models/driveFolder';\nimport {CurrentUser} from '@common/auth/current-user';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { PaginatedBackendResponse } from '@common/core/types/pagination/paginated-backend-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersApiService {\n\n    constructor(\n        private http: AppHttpClient,\n        private currentUser: CurrentUser\n    ) {}\n\n    public getAll(params?: {userId?: number}): PaginatedBackendResponse<DriveFolder> {\n        return this.http.get(FOLDERS_API_ROUTES.GET_ALL, params);\n    }\n\n    public getAllForCurrentUser(): BackendResponse<{folders: DriveFolder[], rootFolder: DriveFolder}> {\n        return this.http.get('drive/users/' + this.currentUser.get('id') + '/folders');\n    }\n\n    public create(params: {name: string, parentId: number|null}): BackendResponse<{folder: DriveFolder}> {\n        return this.http.post(FOLDERS_API_ROUTES.CREATE, params);\n    }\n\n    public getByHash(hash: string): BackendResponse<{folder: DriveFolder}> {\n        return this.http.get('drive/folders/find', {hash});\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { UploadValidator } from '@common/uploads/validation/upload-validator';\nimport { FileSizeValidation } from '@common/uploads/validation/validations/file-size-validation';\nimport { convertToBytes } from '@common/core/utils/convertToBytes';\nimport { AllowedExtensionsValidation } from '@common/uploads/validation/validations/allowed-extensions-validation';\nimport { BlockedExtensionsValidation } from '@common/uploads/validation/validations/blocked-extensions-validation';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUploadValidator extends UploadValidator {\n    protected readonly DEFAULT_MAX_FILE_SIZE_MB = 8;\n\n    protected initValidations() {\n        this.validations.push(\n            new FileSizeValidation(\n                {maxSize: this.getMaxFileSize()},\n                this.i18n\n            )\n        );\n\n        const allowedExtensions = this.getAllowedExtensions(),\n            blockedExtensions = this.getBlockedExtensions();\n\n        if (allowedExtensions && allowedExtensions.length) {\n            this.validations.push(new AllowedExtensionsValidation(\n                {extensions: allowedExtensions}, this.i18n\n            ));\n        }\n\n        if (blockedExtensions && blockedExtensions.length) {\n            this.validations.push(new BlockedExtensionsValidation(\n                {extensions: blockedExtensions}, this.i18n\n            ));\n        }\n    }\n\n    protected getMaxFileSize(): number {\n        return this.settings.get(\n            'uploads.max_size',\n            convertToBytes(this.DEFAULT_MAX_FILE_SIZE_MB, 'MB')\n        );\n    }\n\n    protected getAllowedExtensions() {\n        return this.settings.getJson('uploads.allowed_extensions');\n    }\n\n    protected getBlockedExtensions() {\n        return this.settings.getJson('uploads.blocked_extensions');\n    }\n}\n","import { DriveFolder } from '../folders/models/driveFolder';\r\nimport { DriveEntry } from '../files/models/drive-entry';\r\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { FoldersApiService } from '../folders/api/folders-api.service';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveApiIndexParams, DriveEntryApiService } from '../drive-entry-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { DriveUrlsService } from '../drive-urls.service';\r\nimport { RouterState } from '@ngxs/router-plugin';\r\nimport isEqual from 'lodash/isEqual';\r\nimport {\r\n    AddEntries,\r\n    AddStar,\r\n    BuildFolderTree,\r\n    CopySelectedEntries,\r\n    DeleteSelectedEntries,\r\n    DeleteTrashedEntriesForever,\r\n    DeselectAllEntries,\r\n    EmptyTrash,\r\n    HideLoadingToast,\r\n    LoadMoreEntries,\r\n    LoadUserFolders,\r\n    LoadUserSpaceUsage,\r\n    MoveEntries,\r\n    OpenConfirmDialog,\r\n    OpenFilePreview,\r\n    OpenFolder,\r\n    OpenSearchPage,\r\n    OpenUploadsPanel,\r\n    OpenUploadWindow,\r\n    ReloadPageEntries,\r\n    RemoveEntries,\r\n    RemoveStar,\r\n    ResetState,\r\n    RestoreTrashedEntries,\r\n    SelectAllEntries,\r\n    SelectEntries,\r\n    SetCurrentUser,\r\n    SetViewMode,\r\n    SetWorkspace,\r\n    ShowLoadingToast,\r\n    ToggleDetailsSidebar,\r\n    ToggleSidebar,\r\n    UpdateEntries,\r\n    UpdateEntryDescription,\r\n    UploadFiles,\r\n} from './actions/commands';\r\nimport {\r\n    BreakpointChanged,\r\n    EntriesSelectedViaDrag,\r\n    EntryContextMenuOpened,\r\n    EntryDoubleTapped,\r\n    EntryRenamed,\r\n    EntrySelectedViaContextMenu,\r\n    EntryTapped,\r\n    FileDeleteSuccess,\r\n    FolderPageOpened,\r\n    LoadEntriesAction,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated,\r\n    NotEnoughSpaceError,\r\n    RecentEntriesPageOpened,\r\n    SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    StartedDragging,\r\n    StoppedDragging,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess,\r\n    TrashPageOpened,\r\n    UserSpaceUsageChanged,\r\n    WorkspacesIndexPageOpened,\r\n} from './actions/events';\r\nimport { DriveStateModel, VIEW_MODE_KEY } from './models/drive-state-model';\r\nimport { DRIVE_STATE_MODEL_DEFAULTS } from './models/drive-state-model-defaults';\r\nimport { LocalStorage } from '@common/core/services/local-storage.service';\r\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\r\nimport { DriveUploadValidator } from '../uploads/drive-upload-validator';\r\nimport { openUploadWindow } from '@common/uploads/utils/open-upload-window';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\nimport { UploadedFile } from '@common/uploads/uploaded-file';\r\nimport { UserSpaceUsage } from './models/user-space-usage';\r\nimport { LoadingToastMessages } from '../messages/loading-toast/loading-toast-messages';\r\nimport { User } from '@common/core/types/models/User';\r\nimport { DRIVE_PAGE_NAMES, DrivePage, TRASH_PAGE } from './models/drive-page';\r\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../upload-input-config';\r\nimport { Tag } from '@common/core/types/models/Tag';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { hasKey } from '@common/core/utils/has-key';\r\nimport { BackendErrorResponse } from '../../../common/core/types/backend-error-response';\r\nimport { buildFolderTree } from '../sidebar/folders-tree/build-folder-tree';\r\nimport { WorkspacesService } from '../../../common/workspaces/workspaces.service';\r\nimport { Workspace } from '../../../common/workspaces/types/workspace';\r\nimport { Toast } from '../../../common/core/ui/toast.service';\r\n\r\n@State<DriveStateModel>({\r\n    name: 'drive',\r\n    defaults: DRIVE_STATE_MODEL_DEFAULTS,\r\n})\r\n@Injectable()\r\nexport class DriveState {\r\n    constructor(\r\n        private foldersApi: FoldersApiService,\r\n        private entriesApi: DriveEntryApiService,\r\n        private router: Router,\r\n        private driveUrls: DriveUrlsService,\r\n        private uploads: UploadQueueService,\r\n        private store: Store,\r\n        private localStore: LocalStorage,\r\n        private validator: DriveUploadValidator,\r\n        private workspaces: WorkspacesService,\r\n        private toast: Toast,\r\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadInputConfig: UploadInputConfig,\r\n    ) {}\r\n\r\n    @Selector()\r\n    static flatFolders(state: DriveStateModel) {\r\n        return state.flatFolders;\r\n    }\r\n\r\n    @Selector()\r\n    static userFoldersLoaded(state: DriveStateModel) {\r\n        return state.userFoldersLoaded;\r\n    }\r\n\r\n    @Selector()\r\n    static activePage(state: DriveStateModel) {\r\n        return state.activePage;\r\n    }\r\n\r\n    @Selector()\r\n    static activePageName(state: DriveStateModel) {\r\n        return state.activePage.name;\r\n    }\r\n\r\n    @Selector()\r\n    static userFolders(state: DriveStateModel) {\r\n        return state.folderTree;\r\n    }\r\n\r\n    @Selector()\r\n    static selectedEntries(state: DriveStateModel) {\r\n        return state.selectedEntries;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntryIds(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.map(entry => entry.id);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntry(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected ? selected[selected.length - 1] : null;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntry])\r\n    static selectedEntryOrActiveFolder(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected || state.activePage.folder;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntryOrActiveFolder, DriveState.flatFolders])\r\n    static selectedEntryParent(state: DriveStateModel, selected: DriveFolder, folders: DriveFolder[]) {\r\n        if ( ! selected || ! folders || ! selected.parent_id) {\r\n            return state.rootFolder;\r\n        }\r\n        return folders.find(f => f.id === selected.parent_id);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static anythingSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static allSelectedEntriesStarred(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => !!entry.tags.find(tag => tag.name === 'starred'));\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static onlyFoldersSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => entry.type === 'folder');\r\n    }\r\n\r\n    @Selector()\r\n    static entries(state: DriveStateModel) {\r\n        return state.entries;\r\n    }\r\n\r\n    @Selector()\r\n    static entriesEmpty(state: DriveStateModel) {\r\n        // only return true if entries have already loaded\r\n        return state.meta.currentPage && ! state.loading && state.entries.length === 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static multipleEntriesSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 1;\r\n    }\r\n\r\n    @Selector()\r\n    static activeFolder(state: DriveStateModel) {\r\n        return state.activePage.folder;\r\n    }\r\n\r\n    @Selector()\r\n    static rootFolder(state: DriveStateModel) {\r\n        return state.rootFolder;\r\n    }\r\n\r\n    @Selector()\r\n    static meta(state: DriveStateModel) {\r\n        return state.meta;\r\n    }\r\n\r\n    @Selector()\r\n    static dragging(state: DriveStateModel) {\r\n        return state.dragging;\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: DriveStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static currentPage(state: DriveStateModel) {\r\n        return state.meta.currentPage;\r\n    }\r\n\r\n    @Selector()\r\n    static viewMode(state: DriveStateModel) {\r\n        return state.viewMode;\r\n    }\r\n\r\n    @Selector()\r\n    static detailsOpen(state: DriveStateModel) {\r\n        return state.detailsVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static sidebarOpen(state: DriveStateModel) {\r\n        return state.sidebarOpen;\r\n    }\r\n\r\n    @Selector()\r\n    static sortColumn(state: DriveStateModel) {\r\n        return state.meta.sortColumn;\r\n    }\r\n\r\n    @Selector()\r\n    static sortDirection(state: DriveStateModel) {\r\n        return state.meta.sortDirection;\r\n    }\r\n\r\n    @Selector()\r\n    static canLoadMoreEntries(state: DriveStateModel) {\r\n        return state.meta.currentPage < state.meta.lastPage;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceUsed(state: DriveStateModel) {\r\n        return state.spaceUsage.used;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceAvailable(state: DriveStateModel) {\r\n        return state.spaceUsage.available;\r\n    }\r\n\r\n    @Selector([DriveState.userSpaceUsed, DriveState.userSpaceAvailable])\r\n    static spaceUsedPercent(state: DriveStateModel, spaceUsed: number, spaceAvail: number) {\r\n        // null means that user has unlimited space available\r\n        return spaceAvail === null ? 0 : ((spaceUsed * 100) / spaceAvail);\r\n    }\r\n\r\n    @Selector()\r\n    static isMobile(state: DriveStateModel) {\r\n        return state.isMobile;\r\n    }\r\n\r\n    static userHasPermission(permission: 'edit'|'owner', folder: DriveEntry, user: User) {\r\n        // we are not in a folder view, can bail\r\n        if ( ! folder || ! user) return false;\r\n\r\n        // check if user is the owner of currently open folder\r\n        const folderUser = (folder as DriveEntry).users.find(u => u.id === user.id);\r\n        if (folderUser.owns_entry || folderUser.entry_permissions[permission]) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    @Selector()\r\n    static currentUser(state: DriveStateModel) {\r\n        return state.currentUser;\r\n    }\r\n\r\n    @Selector()\r\n    static activeWorkspace(state: DriveStateModel) {\r\n        return state.activeWorkspace;\r\n    }\r\n\r\n    @Selector([DriveState.activeFolder, DriveState.currentUser])\r\n    static userOwnsActiveFolder(state: DriveStateModel, activeFolder: DriveEntry, currentUser: User) {\r\n       return DriveState.userHasPermission('owner', activeFolder, currentUser);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries, DriveState.currentUser])\r\n    static userCanEditSelectedEntries(state: DriveStateModel, entries: DriveEntry[], currentUser: User) {\r\n        return entries.every(entry => {\r\n            const user = entry.users.find(u => u.id === currentUser.id);\r\n            return user && (user.owns_entry || user.entry_permissions.edit);\r\n        });\r\n    }\r\n\r\n    @Selector([DriveState.activePage, DriveState.currentUser, DriveState.activeWorkspace])\r\n    static canUpload(state: DriveStateModel, page: DrivePage, currentUser: User, workspace: Workspace) {\r\n        if (!page.folder || !currentUser || !workspace) {\r\n            return false;\r\n        }\r\n\r\n        // check if user can create files in this workspace\r\n        if (workspace?.id && page.folder.workspace_id === workspace.id) {\r\n            const member = workspace.currentUser;\r\n            return member && (member.is_owner || member.permissions.findIndex(p => p.name === 'files.create') > -1);\r\n\r\n        // check if user has \"edit\" permission for folder if it's not part of workspace\r\n        } else {\r\n            return DriveState.userHasPermission('edit', page.folder, currentUser);\r\n        }\r\n    }\r\n\r\n    @Action(LoadUserFolders)\r\n    loadUserFolders(ctx: StateContext<DriveStateModel>) {\r\n        return this.foldersApi.getAllForCurrentUser().pipe(tap(response => {\r\n            ctx.patchState({rootFolder: response.rootFolder});\r\n            return ctx.dispatch(new BuildFolderTree(response.folders));\r\n        }));\r\n    }\r\n\r\n    @Action(BuildFolderTree)\r\n    buildFolderTree(ctx: StateContext<DriveStateModel>, action: BuildFolderTree) {\r\n        const flatFolders = action.folders || ctx.getState().flatFolders;\r\n        const tree = buildFolderTree(flatFolders);\r\n        ctx.patchState({\r\n            folderTree: tree,\r\n            flatFolders,\r\n            userFoldersLoaded: true,\r\n        });\r\n    }\r\n\r\n    @Action(WorkspacesIndexPageOpened)\r\n    workspacesIndexPageOpened(ctx: StateContext<DriveStateModel>, action: WorkspacesIndexPageOpened) {\r\n        ctx.patchState({activePage: action.page});\r\n    }\r\n\r\n    @Action(FolderPageOpened)\r\n    @Action(RecentEntriesPageOpened)\r\n    @Action(TrashPageOpened)\r\n    @Action(StarredPageOpened)\r\n    @Action(SearchPageOpened)\r\n    @Action(SharesFolderOpened)\r\n    @Action(ReloadPageEntries)\r\n    @Action(LoadMoreEntries)\r\n    loadDriveEntries(ctx: StateContext<DriveStateModel>, action: LoadEntriesAction) {\r\n        const oldState = ctx.getState();\r\n        const newState = {loading: true, meta: {...oldState.meta}} as Partial<DriveStateModel>;\r\n\r\n        // only replace active page if it's actually specified, this way\r\n        // \"Reload\" and \"LoadMore\" actions will not remove active page\r\n        newState.activePage = action.page ? action.page : oldState.activePage;\r\n\r\n        // set sorting from specified query params or specified page or currently active page\r\n        newState.meta.sortColumn = action.queryParams.orderBy || oldState.meta.sortColumn || newState.activePage.sortColumn;\r\n        newState.meta.sortDirection = action.queryParams.orderDir || oldState.meta.sortDirection || newState.activePage.sortDirection;\r\n\r\n        // if it's not search page, clear type and query\r\n        if (newState.activePage.name !== 'search') {\r\n            newState.meta.query = null;\r\n            newState.meta.type = null;\r\n        }\r\n\r\n        newState.meta.query = action.queryParams.query || newState.meta.query;\r\n        newState.meta.type = action.queryParams.type || newState.meta.type;\r\n\r\n        ctx.patchState(newState);\r\n        const params = this.transformQueryParams({\r\n            ...action.queryParams,\r\n            ...newState.activePage.queryParams,\r\n        });\r\n\r\n        return this.entriesApi.getEntriesForFolder(params).pipe(tap(response => {\r\n            const entries = action.loadMore ? oldState.entries : [];\r\n\r\n            const state = {\r\n                entries: entries.concat(response.data),\r\n                meta: {\r\n                    ...newState.meta,\r\n                    lastPage: response.last_page,\r\n                    currentPage: response.current_page\r\n                },\r\n                loading: false\r\n            } as Partial<DriveStateModel>;\r\n\r\n            state.activePage = {\r\n                ...newState.activePage,\r\n                folder: response.folder,\r\n            };\r\n\r\n            return ctx.patchState(state);\r\n        }, () => {\r\n            return ctx.patchState({loading: false});\r\n        }));\r\n    }\r\n\r\n    @Action(OpenFolder, {cancelUncompleted: true})\r\n    openFolder(ctx: StateContext<DriveStateModel>, action: OpenFolder) {\r\n        const currentFolder = ctx.getState().activePage.folder;\r\n        if (currentFolder && action.folder.id === currentFolder.id) return;\r\n\r\n        if (action.folder && action.folder.deleted_at) {\r\n            return ctx.dispatch(new OpenConfirmDialog({\r\n                title: 'Folder is in trash',\r\n                body: 'To view this folder, you need to restore it first.',\r\n                ok: 'Restore'\r\n            }, new RestoreTrashedEntries([action.folder as DriveFolder])));\r\n        } else {\r\n            ctx.patchState({loading: true});\r\n            return this.router.navigate([this.driveUrls.folder(action.folder)]);\r\n        }\r\n    }\r\n\r\n    @Action(OpenSearchPage, {cancelUncompleted: true})\r\n    openSearchPage(ctx: StateContext<DriveStateModel>, action: OpenSearchPage) {\r\n        const oldParams = this.store.selectSnapshot(RouterState.state).root.queryParams;\r\n        if (isEqual(oldParams, action.queryParams)) return;\r\n        ctx.patchState({loading: true});\r\n        return this.router.navigate(['/drive/search'], {queryParams: action.queryParams});\r\n    }\r\n\r\n    @Action(EntriesSelectedViaDrag)\r\n    @Action(EntrySelectedViaContextMenu)\r\n    @Action(SelectEntries)\r\n    selectEntries(ctx: StateContext<DriveStateModel>, action: EntriesSelectedViaDrag | EntrySelectedViaContextMenu | SelectEntries) {\r\n        ctx.patchState({selectedEntries: action.entries});\r\n    }\r\n\r\n    @Action(DeselectAllEntries)\r\n    deselectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        if ( ! ctx.getState().selectedEntries.length) return;\r\n        ctx.patchState({selectedEntries: []});\r\n    }\r\n\r\n    @Action(SelectAllEntries)\r\n    SelectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({selectedEntries: ctx.getState().entries.slice()});\r\n    }\r\n\r\n    @Action(EntryTapped)\r\n    entryTapped(ctx: StateContext<DriveStateModel>, action: EntryTapped) {\r\n        const current = ctx.getState().selectedEntries.slice();\r\n        let alreadySelected = false;\r\n\r\n        // remove entry with matching ID (if exists) to avoid duplicates\r\n        const i = current.findIndex(curr => curr.id === action.entry.id);\r\n        if (i > -1) {\r\n            current.splice(i, 1);\r\n            alreadySelected = true;\r\n        }\r\n\r\n        if (action.ctrlKey) {\r\n            if (alreadySelected) {\r\n                ctx.patchState({selectedEntries: current});\r\n            } else {\r\n                ctx.patchState({selectedEntries: [...current, action.entry]});\r\n            }\r\n        } else {\r\n            ctx.patchState({selectedEntries: [action.entry]});\r\n        }\r\n\r\n        if (ctx.getState().isMobile) {\r\n            this.entryDoubleTapped(ctx, action);\r\n        }\r\n    }\r\n\r\n    @Action(EntryDoubleTapped)\r\n    entryDoubleTapped(ctx: StateContext<DriveStateModel>, action: EntryDoubleTapped) {\r\n        if (action.entry.type === 'folder') {\r\n            return ctx.dispatch(new OpenFolder(action.entry as DriveFolder));\r\n        } else {\r\n            return ctx.dispatch(new OpenFilePreview([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(DeleteSelectedEntries)\r\n    deleteSelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = this.store.selectSnapshot(DriveState.selectedEntryIds),\r\n            flatFolders = this.store.selectSnapshot(DriveState.flatFolders),\r\n            activePage = ctx.getState().activePage;\r\n\r\n        return this.entriesApi.delete({entryIds}).pipe(tap(() => {\r\n            // filter out deleted entries\r\n            const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n            const newState = {entries: newEntries} as Partial<DriveStateModel>,\r\n                actions = [new FileDeleteSuccess(entries)] as any[];\r\n\r\n            // clear selected entries\r\n            newState.selectedEntries = [];\r\n\r\n            // if selected folder was active, navigate to its parent\r\n            if (activePage.folder && entryIds.indexOf(activePage.folder.id) > -1) {\r\n                this.store.dispatch(new OpenFolder(this.store.selectSnapshot(DriveState.selectedEntryParent)));\r\n            }\r\n\r\n            // rebuild folders tree\r\n            const folders = entries.filter(entry => entry.type === 'folder');\r\n            if (folders.length) {\r\n                folders.forEach(folder => delete flatFolders[folder.id]);\r\n                newState.flatFolders = flatFolders;\r\n                actions.push(new BuildFolderTree());\r\n            }\r\n\r\n            ctx.patchState(newState);\r\n            return ctx.dispatch(actions);\r\n        }));\r\n    }\r\n\r\n    @Action(EntryContextMenuOpened)\r\n    fileContextMenuOpened(ctx: StateContext<DriveStateModel>, action: EntryContextMenuOpened) {\r\n        if ( ! action?.entry?.id) return;\r\n\r\n        const fileAlreadySelected = ctx.getState().selectedEntries\r\n            .find(entry => entry.id === action.entry.id);\r\n\r\n        if ( ! fileAlreadySelected) {\r\n            return ctx.dispatch(new EntrySelectedViaContextMenu([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(NewFolderCreated)\r\n    newFolderCreated(ctx: StateContext<DriveStateModel>, action: NewFolderCreated) {\r\n        const state = ctx.getState();\r\n        const parentFolderId = action.folder.parent_id;\r\n\r\n        // start new folder into user folders cache\r\n        const newState: Partial<DriveStateModel> = {\r\n            flatFolders: [...state.flatFolders, action.folder]\r\n        };\r\n\r\n        // push new folder into parent folder entries, if parent is currently open\r\n        if (parentFolderId === state.activePage.folder.id) {\r\n            newState.entries = [action.folder, ...state.entries];\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n\r\n        // rebuild folder tree\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(EntryRenamed)\r\n    entryRenamed(ctx: StateContext<DriveStateModel>, action: EntryRenamed) {\r\n        const state = ctx.getState(),\r\n            newState = {entries: state.entries.slice()} as Partial<DriveStateModel>,\r\n            i = newState.entries.findIndex(curr => curr.id === action.entry.id);\r\n\r\n        // rename entry inside main entries array\r\n        if (i > -1) {\r\n            newState.entries[i] = {...newState.entries[i], name: action.newName};\r\n        }\r\n\r\n        // rename entry inside selected entries array\r\n        newState.selectedEntries = [{...state.selectedEntries[0], name: action.newName}];\r\n\r\n        // rename active folder\r\n        if (state.activePage.folder && state.activePage.folder.id === action.entry.id) {\r\n            newState.activePage = {...state.activePage, folder: action.entry};\r\n        }\r\n\r\n        // rebuild folder tree\r\n        if (action.entry.type === 'folder') {\r\n            const flatFolders = {...state.flatFolders};\r\n            flatFolders[action.entry.id] = {...flatFolders[action.entry.id], name: action.newName};\r\n            newState.flatFolders = flatFolders;\r\n            ctx.dispatch(new BuildFolderTree());\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n    }\r\n\r\n    @Action(StartedDragging)\r\n    startedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: true});\r\n    }\r\n\r\n    @Action(StoppedDragging)\r\n    stoppedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: false});\r\n    }\r\n\r\n    @Action(MoveEntries)\r\n    movieEntries(ctx: StateContext<DriveStateModel>, action: MoveEntries) {\r\n        const entries = action.entries || ctx.getState().selectedEntries;\r\n\r\n        if ( ! DriveState.canMoveEntriesTo(entries, action.destination)) return;\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.moveEntries));\r\n\r\n        const oldLocation = entries[0].parent_id;\r\n\r\n        return this.entriesApi.moveEntries({entryIds: entries.map(entry => entry.id), destination: action.destination.id}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                return ctx.dispatch(new MoveEntriesSuccess(action.destination.id, oldLocation, response.entries));\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                return ctx.dispatch(new MoveEntriesFailed(errResponse.errors));\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(MoveEntriesSuccess)\r\n    moveEntriesSuccess(ctx: StateContext<DriveStateModel>, action: MoveEntriesSuccess) {\r\n        const state = ctx.getState(),\r\n            entryIds = action.entries.map(entry => entry.id),\r\n            folders = action.entries.filter(entry => entry.type === 'folder');\r\n\r\n        // remove moved entries from old folder\r\n        const newState = {\r\n            selectedEntries: [],\r\n            entries: state.entries.filter(entry => entryIds.indexOf(entry.id) === -1)\r\n        } as Partial<DriveStateModel>;\r\n\r\n        // rebuild folder tree\r\n        if (folders.length) {\r\n            newState.flatFolders = {...state.flatFolders};\r\n            action.entries\r\n                .filter(entry => entry.type === 'folder')\r\n                .forEach(entry => newState.flatFolders[entry.id] = entry as DriveFolder);\r\n        }\r\n\r\n        // update active folder\r\n        if (state.activePage.folder) {\r\n            const folder = action.entries.find(entry => state.activePage.folder.id === entry.id);\r\n            if (folder) newState.activePage = {...state.activePage, folder};\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(SetViewMode)\r\n    setViewMode(ctx: StateContext<DriveStateModel>, action: SetViewMode) {\r\n        this.localStore.set(VIEW_MODE_KEY, action.mode);\r\n        ctx.patchState({viewMode: action.mode});\r\n    }\r\n\r\n    @Action(ToggleDetailsSidebar)\r\n    toggleDetailsSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            detailsVisible: !ctx.getState().detailsVisible\r\n        });\r\n    }\r\n\r\n    @Action(ToggleSidebar)\r\n    toggleSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            sidebarOpen: !ctx.getState().sidebarOpen\r\n        });\r\n    }\r\n\r\n    @Action(AddEntries)\r\n    addEntries(ctx: StateContext<DriveStateModel>, action: AddEntries) {\r\n        const currentEntries = ctx.getState().entries,\r\n            spaceUsage = ctx.getState().spaceUsage;\r\n\r\n        const newEntries = action.entries\r\n            .filter(entry => !currentEntries.find(curr => curr.id === entry.id));\r\n\r\n        const newSize = newEntries.filter(entry => entry.type !== 'folder')\r\n            .reduce((sum, entry) => sum + entry.file_size, 0);\r\n\r\n        ctx.patchState({\r\n            entries: [...newEntries, ...currentEntries],\r\n            spaceUsage: {...spaceUsage, used: spaceUsage.used + newSize}\r\n        });\r\n    }\r\n\r\n    @Action(UploadFiles)\r\n    uploadFiles(ctx: StateContext<DriveStateModel>, action: UploadFiles) {\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, action.files)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        if ( ! action.files.length) return;\r\n\r\n        ctx.dispatch(new OpenUploadsPanel());\r\n\r\n        const state = ctx.getState(),\r\n            folder = state.activePage.folder,\r\n            parentId = folder.id || null;\r\n\r\n        const config = {\r\n            httpParams: {parentId},\r\n            validator: this.validator,\r\n        };\r\n\r\n        return this.uploads.start(action.files, config).pipe(\r\n            tap(response => {\r\n                // get parent folders, if user has uploaded folders and not single files\r\n                const entries = [response.fileEntry.parent, response.fileEntry];\r\n\r\n                // remove all entries that are not direct child of currently open folder\r\n                const newEntries = entries\r\n                    .filter(newEntry => newEntry && newEntry.parent_id === parentId);\r\n\r\n                // add newly uploaded files and created folders\r\n                ctx.dispatch(new AddEntries(newEntries as DriveEntry[]));\r\n\r\n                // rebuild folder tree, if there are any folders\r\n                const folders = entries.filter(entry => entry && entry.type === 'folder');\r\n                if (folders.length) {\r\n                    const flatFolders = [...ctx.getState().flatFolders, ...folders] as DriveFolder[];\r\n                    ctx.patchState({flatFolders});\r\n                    ctx.dispatch(new BuildFolderTree());\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(DeleteTrashedEntriesForever)\r\n    deleteTrashedEntriesForever(ctx: StateContext<DriveStateModel>) {\r\n        const selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = selectedEntries.map(entry => entry.id);\r\n\r\n        const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n        return this.entriesApi.delete({entryIds, deleteForever: true}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch([\r\n                new TrashedEntriesDeleteSuccess(selectedEntries),\r\n                new UserSpaceUsageChanged(),\r\n            ]);\r\n        }));\r\n    }\r\n\r\n    @Action(RestoreTrashedEntries)\r\n    restoreTrashedEntries(ctx: StateContext<DriveStateModel>, action: RestoreTrashedEntries) {\r\n        const activePage = this.store.selectSnapshot(DriveState.activePage);\r\n        const restoredEntries = action.entries || this.store.selectSnapshot(DriveState.selectedEntries);\r\n        const entryIds = restoredEntries.map(entry => entry.id);\r\n        let newEntries: DriveEntry[];\r\n\r\n        if (activePage.name === TRASH_PAGE.name) {\r\n            newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n        } else {\r\n            newEntries = [...ctx.getState().entries, ...action.entries];\r\n        }\r\n\r\n        return this.entriesApi.restore({entryIds}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch(new TrashedEntriesRestoreSuccess(restoredEntries));\r\n        }));\r\n    }\r\n\r\n    @Action(EmptyTrash, {cancelUncompleted: true})\r\n    emptyTrash(ctx: StateContext<DriveStateModel>) {\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.emptyTrash));\r\n\r\n        return this.entriesApi.emptyTrash().pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(() => {\r\n                ctx.patchState({\r\n                    entries: [],\r\n                    selectedEntries: [],\r\n                });\r\n\r\n                return ctx.dispatch(new UserSpaceUsageChanged());\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(AddStar, {cancelUncompleted: true})\r\n    addStar(ctx: StateContext<DriveStateModel>, action: AddStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.addStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) {\r\n                    if ( ! entry.tags) entry.tags = [];\r\n                    entry.tags.push(response.tag);\r\n                }\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries.map(entry => {\r\n                entry.tags.push(response.tag);\r\n                return entry;\r\n            });\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries,\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveStar, {cancelUncompleted: true})\r\n    removeStar(ctx: StateContext<DriveStateModel>, action: RemoveStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.removeStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) this.removeTag(entry, response.tag);\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries\r\n                .map(entry => this.removeTag(entry, response.tag));\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveEntries)\r\n    removeEntries(ctx: StateContext<DriveStateModel>, action: RemoveEntries) {\r\n        const ids = action.entries.map(entry => entry.id);\r\n        const newEntries = ctx.getState().entries\r\n            .filter(entry => ids.indexOf(entry.id) === -1);\r\n        ctx.patchState({\r\n            entries: newEntries\r\n        });\r\n        this.toast.open({message: 'Removed :count items.', replacements: {count: ids.length}});\r\n    }\r\n\r\n    @Action(CopySelectedEntries)\r\n    copySelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = entries.map(entry => entry.id),\r\n            folders = entries.filter(entry => entry.type === 'folder'),\r\n            oldState = ctx.getState();\r\n\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, entries)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.copyEntries));\r\n\r\n        return this.entriesApi.copy({entryIds}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                const newState = {} as Partial<DriveStateModel>;\r\n\r\n                // show copied entries, if we are in a folder view\r\n                if (ctx.getState().activePage.folder) {\r\n                    newState.entries = oldState.entries.concat(response.entries);\r\n                }\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) {\r\n                    newState.flatFolders = {...oldState.flatFolders};\r\n                    response.entries\r\n                        .filter(folder => folder.type === 'folder')\r\n                        .forEach(folder => newState.flatFolders.push(folder as DriveFolder));\r\n                }\r\n\r\n                ctx.patchState(newState);\r\n\r\n                // update user space usage\r\n                ctx.dispatch(new UserSpaceUsageChanged());\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) ctx.dispatch(new BuildFolderTree());\r\n\r\n                const activePage = this.store.selectSnapshot(DriveState.activePage);\r\n                const location = activePage.name === DRIVE_PAGE_NAMES.SHARES ? `${this.workspaces.activeWorkspace$.value.name} workspace` : activePage.folder.name;\r\n                this.toast.open({message: `Copied :count file(s) into :location.`, replacements: {count: entryIds.length, location}});\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(OpenUploadWindow)\r\n    openUploadWindow(ctx: StateContext<DriveStateModel>, action: OpenUploadWindow) {\r\n        const config = {\r\n            ...this.uploadInputConfig,\r\n            directory: action.type === 'directory'\r\n        };\r\n\r\n        openUploadWindow(config).then(files => {\r\n            if ( ! files || ! files.length) return;\r\n            ctx.dispatch(new UploadFiles(files));\r\n        });\r\n    }\r\n\r\n    @Action(LoadUserSpaceUsage)\r\n    @Action(UserSpaceUsageChanged)\r\n    loadUserSpaceUsage(ctx: StateContext<DriveStateModel>) {\r\n        return this.entriesApi.getSpaceUsage().pipe(tap(spaceUsage => {\r\n            ctx.patchState({spaceUsage: {used: spaceUsage.used, available: spaceUsage.available}});\r\n        }));\r\n    }\r\n\r\n    @Action(UpdateEntries)\r\n    updateEntries(ctx: StateContext<DriveStateModel>, action: UpdateEntries) {\r\n        const mainEntries = ctx.getState().entries.slice(),\r\n            selectedEntries = ctx.getState().selectedEntries.slice();\r\n\r\n        action.entries.forEach(updatedEntry => {\r\n            // update main entries\r\n            const mainIndex = mainEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            mainEntries[mainIndex] = {...mainEntries[mainIndex], ...updatedEntry};\r\n\r\n            // update selected entries\r\n            const selectedIndex = selectedEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            if (selectedIndex > -1) {\r\n                selectedEntries[selectedIndex] = {...selectedEntries[selectedIndex], ...updatedEntry};\r\n            }\r\n        });\r\n\r\n        ctx.patchState({entries: mainEntries, selectedEntries});\r\n    }\r\n\r\n    @Action(UpdateEntryDescription)\r\n    updateEntryDescription(ctx: StateContext<DriveStateModel>, {entry, description}: UpdateEntryDescription) {\r\n        return this.entriesApi.update(entry.id, {description})\r\n            .pipe(tap(response => {\r\n                ctx.dispatch(new UpdateEntries([response.fileEntry]));\r\n            }));\r\n    }\r\n\r\n    @Action(BreakpointChanged)\r\n    breakpointChanged(ctx: StateContext<DriveStateModel>, action: BreakpointChanged) {\r\n        ctx.patchState({\r\n            isMobile: action.status.isMobile,\r\n            sidebarOpen: !action.status.isMobile,\r\n            detailsVisible: !action.status.isMobile,\r\n        });\r\n    }\r\n\r\n    @Action(SetCurrentUser)\r\n    setCurrentUser(ctx: StateContext<DriveStateModel>, action: SetCurrentUser) {\r\n        ctx.patchState({currentUser: action.user});\r\n    }\r\n\r\n    @Action(SetWorkspace)\r\n    setWorkspace(ctx: StateContext<DriveStateModel>, action: SetWorkspace) {\r\n        ctx.patchState({activeWorkspace: action.workspace});\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<DriveStateModel>) {\r\n        ctx.setState({...DRIVE_STATE_MODEL_DEFAULTS, viewMode: ctx.getState().viewMode});\r\n    }\r\n\r\n    private transformQueryParams(params: DriveApiIndexParams): DriveApiIndexParams {\r\n        const page = this.store.selectSnapshot(DriveState.activePage),\r\n            meta = this.store.selectSnapshot(DriveState.meta);\r\n\r\n        const queryParams = {\r\n            orderBy: meta.sortColumn,\r\n            orderDir: meta.sortDirection,\r\n            ...params\r\n        };\r\n\r\n        if (page.name === DRIVE_PAGE_NAMES.FOLDER) {\r\n            queryParams.folderId = page.folderHash;\r\n        }\r\n        if (meta.query) queryParams.query = meta.query;\r\n        if (meta.type) queryParams.type = meta.type;\r\n\r\n        return queryParams;\r\n    }\r\n\r\n    /**\r\n     * Check if user has enough space left to upload all specified files.\r\n     */\r\n    private enoughSpaceLeftToUpload(spaceUsage: UserSpaceUsage, files: (UploadedFile|FileEntry)[]) {\r\n        const newSize = files.reduce((sum, file) => {\r\n            const size = hasKey('size', file) ? file.size : file.file_size;\r\n            return sum + size;\r\n        }, 0);\r\n        const currentlyUsing = spaceUsage.used;\r\n        const availableSpace = spaceUsage.available;\r\n        return (newSize + currentlyUsing) < availableSpace;\r\n    }\r\n\r\n    private removeTag(entry: DriveEntry, tag: Tag) {\r\n        entry.tags = entry.tags.filter(t => t.id !== tag.id);\r\n        return entry;\r\n    }\r\n\r\n    static canMoveEntriesTo(movingEntries: DriveEntry[], destination: DriveFolder) {\r\n        if ( ! destination || destination.type !== 'folder') return false;\r\n\r\n        // should not be able to move folder into it's\r\n        // own child or same folder it's already in\r\n        return movingEntries.every(entry => {\r\n            // entry is already in this folder\r\n            if (destination.id === entry.parent_id) return false;\r\n\r\n            // trying to move folder into it's own child\r\n            if (destination.path.startsWith(entry.path)) return false;\r\n\r\n            return true;\r\n        });\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\nimport { SUPPORTED_ENTRY_TYPES } from '../../../entries/supported-entry-types';\nimport { kebabCase } from '@common/core/utils/kebab-case';\n\n@Component({\n    selector: 'file-icon',\n    templateUrl: './file-icon.component.html',\n    styleUrls: ['./file-icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileIconComponent implements OnChanges {\n    @Input() type: string;\n    @Input() mime: string;\n\n    ngOnChanges() {\n        if ( ! this.type && this.mime) {\n            this.type = this.mime.split('/')[0];\n        }\n        if ( ! SUPPORTED_ENTRY_TYPES.includes(this.type)) {\n            this.type = 'default';\n        }\n    }\n\n    public getType() {\n        return kebabCase(this.type);\n    }\n}\n","import { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { ConfirmModalData } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { ComponentType } from '@angular/cdk/portal';\r\nimport { UploadedFile } from '@common/uploads/uploaded-file';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { LoadEntriesAction } from './events';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\r\nimport { MatDialogConfig } from '@angular/material/dialog';\r\nimport { User } from '../../../../common/core/types/models/User';\r\nimport { Workspace } from '../../../../common/workspaces/types/workspace';\r\nimport { DrivePage } from '../models/drive-page';\r\n\r\nexport class LoadUserFolders {\r\n    static readonly type = '[Drive] Load User Folders';\r\n}\r\n\r\nexport class LoadUserSpaceUsage {\r\n    static readonly type = '[Drive] Load User Space Usage';\r\n}\r\n\r\nexport class BuildFolderTree {\r\n    static readonly type = '[Drive] Build Folder Tree';\r\n    constructor(public folders?: DriveFolder[]) {}\r\n}\r\n\r\nexport class OpenFolder {\r\n    static readonly type = '[Drive] Open Folder';\r\n    constructor(public folder?: DriveFolder) {}\r\n}\r\n\r\nexport class OpenSearchPage {\r\n    static readonly type = '[Drive] Open Search Page';\r\n    constructor(public queryParams: {\r\n        type?: string,\r\n        query?: string,\r\n    }) {}\r\n}\r\n\r\nexport class SelectEntries {\r\n    static readonly type = '[Drive] Select Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SelectAllEntries {\r\n    static readonly type = '[Drive] Select All Entries';\r\n}\r\n\r\nexport class DeselectAllEntries {\r\n    static readonly type = '[Drive] Deselect All Entries';\r\n}\r\n\r\nexport class DeleteSelectedEntries {\r\n    static readonly type = '[Drive] Delete Selected Entries';\r\n}\r\n\r\nexport class OpenUploadsPanel {\r\n    static readonly type = '[Drive] Open UploadsApiService Panel';\r\n}\r\n\r\nexport class CloseUploadsPanel {\r\n    static readonly type = '[Drive] Close UploadsApiService Panel';\r\n}\r\n\r\nexport class AddEntries {\r\n    static readonly type = '[Drive] Add Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class MoveEntries {\r\n    static readonly type = '[Drive API] Move Entries';\r\n    constructor(public destination: DriveFolder, public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class OpenDialog {\r\n    static readonly type = '[Drive] Open Dialog';\r\n    constructor(public dialog: ComponentType<any>, public data?: object, public config?: MatDialogConfig) {}\r\n}\r\n\r\nexport class OpenConfirmDialog {\r\n    static readonly type = '[Drive] Open Confirm Dialog';\r\n    constructor(public data: ConfirmModalData, public confirmAction: any) {}\r\n}\r\n\r\nexport class SetViewMode {\r\n    static readonly type = '[Drive] Set View Mode';\r\n    constructor(public mode: 'list'|'grid') {}\r\n}\r\n\r\nexport class ToggleDetailsSidebar {\r\n    static readonly type = '[Drive] Toggle Details';\r\n}\r\n\r\nexport class ToggleSidebar {\r\n    static readonly type = '[Drive] Toggle Sidebar';\r\n}\r\n\r\nexport class UploadFiles {\r\n    static readonly type = '[Drive] Upload Files';\r\n    constructor(public files: UploadedFile[]) {}\r\n}\r\n\r\nexport class RestoreTrashedEntries {\r\n    static readonly type = '[Drive] Restore Trashed Entries';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DeleteTrashedEntriesForever {\r\n    static readonly type = '[Drive] Delete Trashed Entries Forever';\r\n}\r\n\r\nexport class EmptyTrash {\r\n    static readonly type = '[Drive] Empty Trash';\r\n}\r\n\r\nexport class OpenFilePreview {\r\n    static readonly type = '[Drive] Open File Preview Overlay';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DownloadEntries {\r\n    static readonly type = '[Drive] Download Files';\r\n    constructor(public entries?: FileEntry[], public link?: ShareableLink, public password?: string) {}\r\n}\r\n\r\nexport class AddStar {\r\n    static readonly type = '[Drive] Add a Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveStar {\r\n    static readonly type = '[Drive] Remove Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveEntries {\r\n    static readonly type = '[Drive] Remove Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class ChangeSort {\r\n    static readonly type = '[Drive] Change Sort';\r\n    constructor(public sort: SortColumn, public direction: SortDirection = 'desc') {}\r\n}\r\n\r\nexport class LoadMoreEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive Infinite Scroll] Load More Entries';\r\n    public loadMore = true;\r\n    constructor(public queryParams: DriveApiIndexParams = {}) {}\r\n}\r\n\r\nexport class ReloadPageEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Reload Page Entries';\r\n    constructor(public queryParams: DriveApiIndexParams = {}, public page?: DrivePage) {}\r\n}\r\n\r\nexport class CopySelectedEntries {\r\n    static readonly type = '[Drive] Copy Selected Entries';\r\n}\r\n\r\nexport class OpenUploadWindow {\r\n    static readonly type = '[Drive] Open Upload Window';\r\n    constructor(public type: 'file'|'directory') {}\r\n}\r\n\r\nexport class ShowLoadingToast {\r\n    static readonly type = '[Drive] Show Loading Toast';\r\n    constructor(public message: string) {}\r\n}\r\n\r\nexport class HideLoadingToast {\r\n    static readonly type = '[Drive] Hide Loading Toast';\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[Drive] Reset State';\r\n}\r\n\r\nexport class UpdateEntries {\r\n    static readonly type = '[Drive] Update Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SetCurrentUser {\r\n    static readonly type = '[Drive] Set Current User';\r\n    constructor(public user: User) {}\r\n}\r\n\r\nexport class SetWorkspace {\r\n    static readonly type = '[Drive] Set Workspace';\r\n    constructor(public workspace: Workspace) {}\r\n}\r\n\r\nexport class UpdateEntryDescription {\r\n    static readonly type = '[Drive] Update Entry Description';\r\n    constructor(public entry: FileEntry, public description: string) {}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { DrivePageType } from './available-pages';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\n\r\nexport const DRIVE_PAGE_NAMES: {[key: string]: DrivePageType} = {\r\n    FOLDER: 'folder',\r\n    RECENT: 'recent',\r\n    TRASH: 'trash',\r\n    SHARES: 'shares',\r\n    STARRED: 'starred',\r\n    SEARCH: 'search',\r\n    WORKSPACES: 'workspaces',\r\n};\r\n\r\nexport interface DrivePageParams {\r\n    name: DrivePageType;\r\n    viewName: string;\r\n    folder?: DriveFolder;\r\n    folderHash?: string;\r\n    hasActions?: boolean;\r\n    disableSort?: boolean;\r\n    sortColumn?: SortColumn;\r\n    queryParams?: object;\r\n    sortDirection?: SortDirection;\r\n}\r\n\r\nexport class DrivePage implements DrivePageParams {\r\n    name = null;\r\n    viewName = null;\r\n    folder = null;\r\n    folderHash = null;\r\n    hasActions = false;\r\n    sortColumn = 'updated_at' as SortColumn;\r\n    sortDirection = 'desc' as SortDirection;\r\n    queryParams = {};\r\n\r\n    constructor(params: DrivePageParams) {\r\n        Object.keys(params).forEach(key => {\r\n            this[key] = params[key];\r\n        });\r\n    }\r\n}\r\n\r\nexport const RECENT_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.RECENT,\r\n    viewName: 'Recent',\r\n    disableSort: true,\r\n    sortColumn: 'created_at',\r\n    sortDirection: 'desc',\r\n    queryParams: {\r\n        recentOnly: true,\r\n    }\r\n});\r\n\r\nexport const SEARCH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SEARCH,\r\n    viewName: 'Search results',\r\n});\r\n\r\nexport const SHARES_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SHARES,\r\n    viewName: 'Shared',\r\n    queryParams: {\r\n        sharedOnly: true,\r\n    }\r\n});\r\n\r\nexport const TRASH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.TRASH,\r\n    viewName: 'Trash',\r\n    hasActions: true,\r\n    queryParams: {\r\n        deletedOnly: true,\r\n    }\r\n});\r\n\r\nexport const WORKSPACE_INDEX_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.WORKSPACES,\r\n    viewName: 'Workspaces',\r\n});\r\n\r\nexport const STARRED_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.STARRED,\r\n    viewName: 'Starred',\r\n    queryParams: {\r\n        starredOnly: true,\r\n    }\r\n});\r\n\r\nexport class FolderPage extends DrivePage {\r\n    constructor(folder?: DriveFolder) {\r\n        super({\r\n            name: DRIVE_PAGE_NAMES.FOLDER,\r\n            viewName: folder?.name,\r\n            folder,\r\n            folderHash: folder?.hash,\r\n            hasActions: true\r\n        });\r\n    }\r\n}\r\n","import { DriveStateModel } from './drive-state-model';\r\n\r\nexport const DRIVE_STATE_MODEL_DEFAULTS: DriveStateModel = {\r\n    isMobile: false,\r\n    activePage: null,\r\n    folderTree: [],\r\n    flatFolders: [],\r\n    userFoldersLoaded: false,\r\n    entries: [],\r\n    selectedEntries: [],\r\n    dragging: false,\r\n    loading: false,\r\n    uploadsPanelOpen: false,\r\n    viewMode: 'grid' as 'grid'|'list',\r\n    detailsVisible: true,\r\n    sidebarOpen: true,\r\n    currentUser: null,\r\n    activeWorkspace: null,\r\n    spaceUsage: {\r\n        available: null,\r\n        used: null,\r\n    },\r\n    meta: {\r\n        sortColumn: 'updated_at',\r\n        sortDirection: 'desc',\r\n        currentPage: 0,\r\n        lastPage: 0,\r\n    },\r\n};\r\n","import { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DrivePage } from './drive-page';\r\nimport { UserSpaceUsage } from './user-space-usage';\r\nimport { User } from '@common/core/types/models/User';\r\nimport { Workspace } from '../../../../common/workspaces/types/workspace';\r\n\r\nexport interface DriveStateModel {\r\n    isMobile: boolean;\r\n    activePage: DrivePage;\r\n    folderTree: DriveFolder[];\r\n    flatFolders: DriveFolder[];\r\n    userFoldersLoaded: boolean;\r\n    entries: DriveEntry[];\r\n    selectedEntries: DriveEntry[];\r\n    spaceUsage: UserSpaceUsage;\r\n    rootFolder?: DriveFolder;\r\n    meta: {\r\n        currentPage: number;\r\n        lastPage: number;\r\n        sortColumn: SortColumn;\r\n        sortDirection: SortDirection;\r\n        type?: string|null,\r\n        query?: string|null\r\n    };\r\n    dragging: boolean;\r\n    loading: boolean;\r\n    uploadsPanelOpen: boolean;\r\n    viewMode: 'list'|'grid';\r\n    detailsVisible: boolean;\r\n    sidebarOpen: boolean;\r\n    currentUser: User|null;\r\n    activeWorkspace: Workspace|null;\r\n}\r\n\r\nexport const VIEW_MODE_KEY = 'bedrive.viewMode';\r\n","export enum LoadingToastMessages {\r\n    copyEntries =  'Copying items...',\r\n    emptyTrash = 'Emptying trash...',\r\n    moveEntries = 'Moving items...',\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { UploadInputConfig } from '../../common/uploads/upload-input-config';\r\n\r\nexport const DRIVE_UPLOAD_INPUT_CONFIG = new InjectionToken<UploadInputConfig>('DRIVE_UPLOAD_INPUT_CONFIG');","export enum FOLDERS_API_ROUTES {\r\n    GET_ALL = 'drive/folders',\r\n    CREATE = 'drive/folders',\r\n}\r\n","import { DriveFolder } from '../../folders/models/driveFolder';\r\n\r\nexport function buildFolderTree(folders: DriveFolder[]) {\r\n    const hashTable = {}; const tree = [];\r\n\r\n    for (let i = 0, len = folders.length; i < len; i++) {\r\n        const folder = folders[i];\r\n        // clear children from previous builds, to prevent duplicates\r\n        folder.children = [];\r\n        hashTable[folder.id] = folder;\r\n    }\r\n\r\n    for (const treeHash in hashTable) {\r\n        if ( ! hashTable.hasOwnProperty(treeHash)) continue;\r\n        const folder = hashTable[treeHash];\r\n        if (folder.parent_id) {\r\n            const parent = hashTable[folder.parent_id];\r\n            if (parent) {\r\n                parent.children.push(folder);\r\n            }\r\n        } else {\r\n            tree.push(folder);\r\n        }\r\n    }\r\n\r\n    return tree;\r\n}\r\n","export const SUPPORTED_ENTRY_TYPES = [\r\n    'audio',\r\n    'video',\r\n    'text',\r\n    'pdf',\r\n    'archive',\r\n    'folder',\r\n    'shared-folder',\r\n    'image',\r\n    'powerPoint',\r\n    'word',\r\n    'spreadsheet',\r\n];\r\n","import { snakeCase } from './snake-case';\r\n\r\nexport function kebabCase(text: string) {\r\n    return snakeCase(text).replace('_', '-');\r\n}\r\n","<mat-icon\n        [svgIcon]=\"getType() + '-file-custom'\"\n        class=\"file-color\"\n        [ngClass]=\"getType() + '-file'\"\n></mat-icon>","<ng-container *ngIf=\"entries | async as selectedEntries\">\n    <ng-container *ngIf=\"selectedEntries[0]\">\n        <file-icon [type]=\"selectedEntries[0].type\"></file-icon>\n        <div class=\"text\">{{selectedEntries[0].name}}</div>\n        <div class=\"selected-entry-count\" *ngIf=\"selectedEntries.length > 1\">{{selectedEntries.length}}</div>\n    </ng-container>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\n\n@Component({\n    selector: 'entry-drag-preview',\n    templateUrl: './entry-drag-preview.component.html',\n    styleUrls: ['./entry-drag-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDragPreviewComponent {\n    @Select(DriveState.selectedEntries) entries: Observable<DriveEntry[]>;\n    @HostBinding('class') className = 'files-grid-item-footer';\n    @HostBinding('class.hidden') get dragging() {\n        return !this.store.selectSnapshot(DriveState.dragging);\n    }\n\n    constructor(private store: Store) {}\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { DriveEntryUser } from '../../files/models/drive-entry';\r\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { SharesApiService } from '../shares-api.service';\r\nimport isEqual from 'lodash/isEqual';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport {\r\n    BackendErrorMessages, BackendErrorResponse\r\n} from '@common/core/types/backend-error-response';\r\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\r\nimport { UpdateEntries } from '../../state/actions/commands';\r\nimport { Inject, Injectable } from '@angular/core';\r\n\r\nexport class SetInitialUsers {\r\n    static readonly type = '[ShareDialog] Set Initial Users';\r\n}\r\n\r\nexport class UpdateUserPermissions {\r\n    static readonly type = '[ShareDialog] Update User Permissions';\r\n    constructor(public user: DriveEntryUser, public permissions: DriveEntryPermissions) {}\r\n}\r\n\r\nexport class RemoveUser {\r\n    static readonly type = '[ShareDialog] Remove User';\r\n    constructor(public user: DriveEntryUser) {}\r\n}\r\n\r\nexport class SetUsers {\r\n    static readonly type = '[ShareDialog] Set Users';\r\n    constructor(public users: DriveEntryUser[]) {}\r\n}\r\n\r\nexport class SaveChanges {\r\n    static readonly type = '[ShareDialog] Save Changes';\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[ShareDialog] Reset';\r\n}\r\n\r\nexport class ShareEntries {\r\n    static readonly type = '[ShareDialog] Share Entries';\r\n    constructor(public payload: {emails: string[], permissions: DriveEntryPermissions}) {}\r\n}\r\n\r\nexport class ShareEntriesFailed {\r\n    static readonly type = '[ShareDialog] Share Entries Failed';\r\n    constructor(public messages: BackendErrorMessages) {}\r\n}\r\n\r\nexport interface ShareDialogEntryUser extends DriveEntryUser {\r\n    removed?: boolean;\r\n    entry_permissions: ShareDialogEntryPermissions;\r\n}\r\n\r\nexport interface ShareDialogStateModel {\r\n    loading: boolean;\r\n    original: ShareDialogEntryUser[];\r\n    usersWithAccess: ShareDialogEntryUser[];\r\n}\r\n\r\n@State<ShareDialogStateModel>({\r\n    name: 'shareDialog',\r\n    defaults: {\r\n        usersWithAccess: [],\r\n        original: [],\r\n        loading: false,\r\n    }\r\n})\r\n@Injectable()\r\nexport class ShareDialogState {\r\n    constructor(\r\n        private store: Store,\r\n        private sharesApi: SharesApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static usersWithAccess(state: ShareDialogStateModel) {\r\n        return state.usersWithAccess;\r\n    }\r\n\r\n    @Selector()\r\n    static dirty(state: ShareDialogStateModel) {\r\n        return !isEqual(state.original, state.usersWithAccess);\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: ShareDialogStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Action(SetInitialUsers)\r\n    setInitialUsers(ctx: StateContext<ShareDialogStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        let users = entries\r\n            .map(entry => entry.users)\r\n            .reduce((all, curr) => all.concat(curr), []);\r\n\r\n        // make sure we don't override anything in main drive store\r\n        users = cloneDeep(users);\r\n        users = users.filter(user => !!user);\r\n\r\n        // multiple entries might contain same users\r\n        const uniqueUsers = uniqBy(users, user => user.id) as ShareDialogEntryUser[];\r\n\r\n        // if permissions for same user are not same on\r\n        // all selected entries, show \"varies\" permission\r\n        if (entries.length > 1) {\r\n            uniqueUsers.forEach(user => {\r\n                const permissions = entries\r\n                    .map(entry => entry.users.find(u => u.id === user.id))\r\n                    .filter(u => !!u)\r\n                    .map(u => Object.assign({}, u.entry_permissions));\r\n\r\n                if (entries.length !== permissions.length || permissions.some(p => !isEqual(p, permissions[0]))) {\r\n                    user.entry_permissions = {varies: true};\r\n                }\r\n            });\r\n        }\r\n\r\n        ctx.patchState({\r\n            usersWithAccess: cloneDeep(uniqueUsers),\r\n            original: uniqueUsers,\r\n        });\r\n    }\r\n\r\n    @Action(SetUsers)\r\n    setUsers(ctx: StateContext<ShareDialogStateModel>, action: SetUsers) {\r\n        ctx.patchState({\r\n            usersWithAccess: action.users,\r\n            original: cloneDeep(action.users)\r\n        });\r\n    }\r\n\r\n    @Action(UpdateUserPermissions)\r\n    updateUserPermissions(ctx: StateContext<ShareDialogStateModel>, action: UpdateUserPermissions) {\r\n        const users = ctx.getState().usersWithAccess;\r\n\r\n        // update user permissions\r\n        users.find(curr => curr.id === action.user.id).entry_permissions = action.permissions;\r\n\r\n        ctx.patchState({usersWithAccess: users});\r\n    }\r\n\r\n    @Action(RemoveUser)\r\n    removeUser(ctx: StateContext<ShareDialogStateModel>, action: UpdateUserPermissions) {\r\n        const users = ctx.getState().usersWithAccess;\r\n\r\n        // mark user as \"removed\"\r\n        users.find(curr => curr.id === action.user.id).removed = true;\r\n\r\n        ctx.patchState({usersWithAccess: users});\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<ShareDialogStateModel>) {\r\n       ctx.setState({\r\n           loading: false,\r\n           usersWithAccess: [],\r\n           original: [],\r\n       });\r\n    }\r\n\r\n    @Action(SaveChanges, {cancelUncompleted: true})\r\n    saveChanges(ctx: StateContext<ShareDialogStateModel>) {\r\n        ctx.patchState({loading: true});\r\n\r\n        const state = ctx.getState();\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        const users = state.usersWithAccess\r\n            // filter out entry owner\r\n            .filter(user => !user.owns_entry)\r\n            // filter out users if they do not have same permissions for\r\n            // all selected entries (except for users that are being removed)\r\n            .filter(user => !user.entry_permissions.varies || user.removed)\r\n            .map(user => {\r\n                return {id: user.id, removed: user.removed, permissions: user.entry_permissions};\r\n            });\r\n\r\n        return this.sharesApi.updateUsers({entries: entries.map(e => e.id), users}).pipe(\r\n            finalize(() => ctx.patchState({loading: false})),\r\n            tap(response => {\r\n                const newUsers = response.users;\r\n\r\n                // update permissions in share dialog store\r\n                ctx.patchState({\r\n                    usersWithAccess: newUsers,\r\n                    original: cloneDeep(newUsers),\r\n                });\r\n\r\n                this.updateEntriesInDriveStore(newUsers);\r\n            }\r\n        ));\r\n    }\r\n\r\n    @Action(ShareEntries, {cancelUncompleted: true})\r\n    shareEntries(ctx: StateContext<ShareDialogStateModel>, action: ShareEntries) {\r\n        ctx.patchState({loading: true});\r\n\r\n        const payload = {\r\n            ...action.payload,\r\n            entries: this.store.selectSnapshot(DriveState.selectedEntries)\r\n        };\r\n\r\n        return this.sharesApi.shareEntries(payload)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => {\r\n                    ctx.dispatch(new SetUsers(response.users));\r\n                    this.updateEntriesInDriveStore(response.users);\r\n                }, (errorResponse: BackendErrorResponse) => {\r\n                    ctx.dispatch(new ShareEntriesFailed(errorResponse.errors));\r\n                })\r\n            );\r\n    }\r\n\r\n    private updateEntriesInDriveStore(newUsers: DriveEntryUser[]) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        // update permissions in main drive store, otherwise we'll get old\r\n        // permissions if user re-opens share dialog without page reload\r\n        const updatedEntries = entries.map(entry => {\r\n            entry.users = newUsers;\r\n            return entry;\r\n        });\r\n\r\n        this.store.dispatch(new UpdateEntries(updatedEntries));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { DriveEntryUser } from '../files/models/drive-entry';\nimport { DriveEntryPermissions } from '../permissions/drive-entry-permissions';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\ninterface UserChangeParams {\n    users: {id: number, permissions: DriveEntryPermissions}[];\n    entries: number[];\n}\n\nexport interface DriveEntryApiParams {\n    entries: FileEntry[];\n    emails: string[];\n    permissions: DriveEntryPermissions;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharesApiService {\n    constructor(private http: AppHttpClient) {}\n\n    /**\n     * Update users and permissions on specified entries.\n     */\n    public updateUsers(params: UserChangeParams): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.put('drive/shares/update-users', params);\n    }\n\n    /**\n     * Attach specified users to entries.\n     */\n    public shareEntries(params: DriveEntryApiParams): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.post('drive/shares/add-users', {\n            ...params,\n            entries: params.entries.map(entry => entry.id)\n        });\n    }\n\n    /**\n     * Detach specified user from entries.\n     */\n    public detachUser(userId: number, entryIds: number[]): BackendResponse<void> {\n        return this.http.delete('drive/shares/remove-user/' + userId, {entries: entryIds});\n    }\n}\n","export interface DriveEntryPermissions {\r\n    edit?: boolean;\r\n    view?: boolean;\r\n    download?: boolean;\r\n}\r\n\r\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\r\n    edit: true,\r\n    view: true,\r\n    download: true,\r\n};\r\n","<button mat-flat-button color=\"gray\" [matMenuTriggerFor]=\"shareMenu\">\n    <ng-container *ngIf=\"overallPermission() === 'varies'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"priority-high\"></mat-icon>\n        <span class=\"button-text\" trans>Varies</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'edit'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"edit\"></mat-icon>\n        <span class=\"button-text\" trans>Can edit</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'view'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"remove-red-eye\"></mat-icon>\n        <span class=\"button-text\" trans>Can View</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'download'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"file-download\"></mat-icon>\n        <span class=\"button-text\" trans>Can Download</span>\n    </ng-container>\n\n    <mat-icon class=\"dropdown-icon\" svgIcon=\"arrow-drop-down\"></mat-icon>\n</button>\n\n<mat-menu #shareMenu=\"matMenu\" classList=\"mat-menu-with-description\">\n    <div mat-menu-item (click)=\"selectPermission('edit')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'edit'\"></mat-icon>\n        <div>\n            <div trans>Can edit</div>\n            <div class=\"description\" trans>People can edit, delete and copy the item to their own drive.</div>\n        </div>\n    </div>\n    <div mat-menu-item (click)=\"selectPermission('download')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'download'\"></mat-icon>\n        <div>\n            <div trans>Can download</div>\n            <div class=\"description\" trans>People can view and download the item.</div>\n        </div>\n    </div>\n\n    <div mat-menu-item (click)=\"selectPermission('view')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'view'\"></mat-icon>\n        <div>\n            <div trans>Can view</div>\n            <div class=\"description\" trans>People can view the item.</div>\n        </div>\n    </div>\n</mat-menu>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, HostBinding } from '@angular/core';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\n\n@Component({\n    selector: 'sharing-permissions-button',\n    templateUrl: './sharing-permissions-button.component.html',\n    styleUrls: ['./sharing-permissions-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SharingPermissionsButtonComponent {\n    @Input() permissions: ShareDialogEntryPermissions = DRIVE_ENTRY_FULL_PERMISSIONS;\n    @Output() change: EventEmitter<DriveEntryPermissions> = new EventEmitter();\n    @Input() @HostBinding('class.compact') compact = false;\n\n    public overallPermission(): keyof ShareDialogEntryPermissions {\n        if (this.permissions.varies) {\n            return 'varies';\n        } else if (this.permissions.edit) {\n            return 'edit';\n        } else if (this.permissions.download) {\n            return 'download';\n        } {\n            return 'view';\n        }\n    }\n\n    public selectPermission(permission: keyof ShareDialogEntryPermissions) {\n        if (permission === 'edit') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS};\n        } else if (permission === 'download') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false};\n        } else {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false, download: false};\n        }\n\n        this.change.emit(this.permissions);\n    }\n}\n","<div class=\"header\" trans>Who has access</div>\n<div class=\"users-list\">\n    <div class=\"list-item\" *ngIf=\"activeWorkspace$ | async as workspace\">\n        <mat-icon svgIcon=\"groups\" class=\"list-item-img\"></mat-icon>\n        <div class=\"text\">\n            <div class=\"display_name\" [transValues]=\"{workspace: workspace.name}\" trans>Everyone at \":workspace\" workspace</div>\n            <div class=\"email\">{{workspace.members_count}} {{ 'members' | trans }}</div>\n        </div>\n    </div>\n    <div class=\"list-item\" *ngFor=\"let user of users | async; trackBy: trackByUser\" [class.removed]=\"user.removed\" [@flyInOut]=\"'in'\">\n        <img [src]=\"user.avatar\" class=\"list-item-img\" alt=\"\">\n        <div class=\"text\">\n            <div class=\"display_name\">{{user.display_name}}</div>\n            <div class=\"email\">{{user.email}}</div>\n        </div>\n        <div class=\"actions\">\n            <span class=\"owner-label\" *ngIf=\"user.owns_entry || (currentUser.getModel().id === user.id); else permissionSelector\" trans>\n                {{ user.owns_entry ? 'Owner' : 'You' }}\n            </span>\n\n            <ng-template #permissionSelector>\n                <sharing-permissions-button [permissions]=\"user.entry_permissions\" (change)=\"updateUserPermissions(user, $event)\"></sharing-permissions-button>\n                <button mat-icon-button [disabled]=\"loading$ | async\" (click)=\"removeUser(user)\">\n                    <mat-icon svgIcon=\"close\"></mat-icon>\n                </button>\n            </ng-template>\n        </div>\n    </div>\n</div>\n<div class=\"actions\">\n    <button mat-flat-button color=\"accent\" (click)=\"saveChanges()\" [disabled]=\"loading$ | async\" [class.visually-hidden]=\"!(dirty | async)\" trans>Save Changes</button>\n</div>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { DriveEntryUser } from '../../files/models/drive-entry';\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport {\n    RemoveUser, SaveChanges, ShareDialogEntryUser, ShareDialogState, UpdateUserPermissions\n} from '../state/share-dialog.state';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { CurrentUser } from '../../../../common/auth/current-user';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\nimport { DriveState } from '../../state/drive-state';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'entries-access-table',\n    templateUrl: './entries-access-table.component.html',\n    styleUrls: ['./entries-access-table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('flyInOut', [\n            state('in', style({transform: 'translateX(0)'})),\n            transition('void => *', [\n                style({transform: 'translateX(-100%)'}),\n                animate(100)\n            ]),\n            transition('* => void', [\n                animate(100, style({transform: 'translateX(100%)'}))\n            ])\n        ])\n    ]\n})\nexport class EntriesAccessTableComponent {\n    @Select(ShareDialogState.usersWithAccess) users: Observable<ShareDialogEntryUser[]>;\n    @Select(ShareDialogState.dirty) dirty: Observable<boolean>;\n    @Select(ShareDialogState.loading) loading$: Observable<boolean>;\n    public activeWorkspace$ = this.store.select(DriveState.selectedEntries)\n        .pipe(\n            map(entries => entries.every(e => e.workspace_id)),\n            filter(x => !!x),\n            switchMap(() => this.workspaces.activeWorkspace$)\n        );\n\n    constructor(\n        private store: Store,\n        public currentUser: CurrentUser,\n        public workspaces: WorkspacesService,\n    ) {}\n\n    public updateUserPermissions(user: DriveEntryUser, newPermissions: DriveEntryPermissions) {\n        this.store.dispatch(new UpdateUserPermissions(user, newPermissions));\n    }\n\n    public removeUser(user: DriveEntryUser) {\n        this.store.dispatch(new RemoveUser(user));\n    }\n\n    public saveChanges() {\n        this.store.dispatch(new SaveChanges());\n    }\n\n    trackByUser(index: number, user: DriveEntryUser): number { return user.id; }\n}\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title trans>Add people</h2>\r\n    <button type=\"button\" mat-icon-button (click)=\"dialogRef.close()\" class=\"close-button\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n    <div class=\"emails-container\">\r\n        <chip-input [formControl]=\"shareModel.emails\" [emailsInput]=\"true\" [suggestFn]=\"settings.get('share.suggest_emails') ? suggestUserEmails : null\" placeholder=\"Enter email addresses...\" email required></chip-input>\r\n        <sharing-permissions-button [compact]=\"true\" (change)=\"shareModel.permissions = $event\"></sharing-permissions-button>\r\n    </div>\r\n\r\n    <div class=\"errors\">\r\n        <div class=\"error\" *ngFor=\"let error of errors | async | keyvalue\">{{error.value}}</div>\r\n    </div>\r\n\r\n    <entries-access-table></entries-access-table>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button type=\"button\" mat-button (click)=\"dialogRef.close()\" [disabled]=\"loading$ | async\" trans>Close</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" (click)=\"share()\" [disabled]=\"(loading$ | async)\" *ngIf=\"shareModel.emails.value?.length\" trans>Share</button>\r\n</mat-dialog-actions>\r\n\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ResetState, SetInitialUsers, ShareDialogState, ShareEntries, ShareEntriesFailed } from '../state/share-dialog.state';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorMessages } from '@common/core/types/backend-error-response';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Users } from '@common/auth/users.service';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'share-dialog',\n    templateUrl: './share-dialog.component.html',\n    styleUrls: ['./share-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareDialogComponent implements OnDestroy {\n    @Select(ShareDialogState.loading) loading$: Observable<boolean>;\n\n    private destroyed$ = new Subject();\n    public errors: BehaviorSubject<BackendErrorMessages> = new BehaviorSubject({});\n    public shareModel: { emails: FormControl, permissions: DriveEntryPermissions};\n\n    constructor(\n        public dialogRef: MatDialogRef<ShareDialogComponent>,\n        public settings: Settings,\n        private store: Store,\n        private actions$: Actions,\n        private users: Users,\n    ) {\n        this.resetModel();\n        this.store.dispatch(new SetInitialUsers());\n\n        this.bindToShareError();\n        this.bindToShareModel();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetState());\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    public share() {\n        const payload = {\n            emails: this.shareModel.emails.value,\n            permissions: this.shareModel.permissions,\n        };\n\n        this.store.dispatch(new ShareEntries(payload)).subscribe(() => {\n            this.setErrorMessages();\n            this.resetModel();\n        });\n    }\n\n    private resetModel() {\n        this.shareModel = {\n            emails: new FormControl([]),\n            permissions: DRIVE_ENTRY_FULL_PERMISSIONS\n        };\n    }\n\n    private setErrorMessages(messages?: BackendErrorMessages) {\n        this.errors.next(messages || {});\n    }\n\n    private bindToShareModel() {\n        this.shareModel.emails.valueChanges\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(() => this.setErrorMessages());\n    }\n\n    private bindToShareError() {\n        this.actions$.pipe(\n            takeUntil(this.destroyed$),\n            ofActionDispatched(ShareEntriesFailed)\n        ).subscribe((action: ShareEntriesFailed) => {\n            this.setErrorMessages(action.messages);\n        });\n    }\n\n    suggestUserEmails = (query: string): Observable<string[]> => {\n        return this.users.getAll({query, perPage: 7})\n            .pipe(map(users => users.map(u => u.email)));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { ShareableLink } from './models/shareable-link';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { ShareableLinkOptions } from './models/shareable-link-options';\nimport { User } from '@common/core/types/models/User';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\nexport interface GetLinkData {\n    link: ShareableLink;\n    folderChildren: PaginationResponse<FileEntry>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ShareableLinksApiService {\n    constructor(private http: AppHttpClient) {}\n\n    public findByEntryId(entryId: number, params: {autoCreate?: boolean}): BackendResponse<{ link: ShareableLink }> {\n        return this.http.get(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public findByHash(hash: string, params?: {withEntries?: boolean, page?: number, order?: string}): BackendResponse<GetLinkData> {\n        return this.http.get(`drive/shareable-links/${hash}`, params);\n    }\n\n    public create(entryId: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.post(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public update(id: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.put(`drive/shareable-links/${id}`, params);\n    }\n\n    public delete(id: number): BackendResponse<void> {\n        return this.http.delete(`drive/shareable-links/${id})`);\n    }\n\n    public checkPassword(linkId: number, password: string): BackendResponse<{matches: boolean}> {\n        return this.http.post(`drive/shareable-links/${linkId}/check-password`, {password});\n    }\n\n    /**\n     * Import shareable link entry into current user's drive.\n     */\n    public importEntry(linkId: number, password?: string): BackendResponse<{users: User[]}> {\n        return this.http.post(`drive/shareable-links/${linkId}/import`, {password});\n    }\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { ShareableLinkOptions } from './models/shareable-link-options';\r\nimport { ShareableLinksApiService } from './shareable-links-api.service';\r\nimport { ShareableLink } from './models/shareable-link';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport {\r\n    BackendErrorMessages, BackendErrorResponse\r\n} from '@common/core/types/backend-error-response';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface ShareLinkStateModel {\r\n    cache: {[key: number]: ShareableLink};\r\n    backendErrors: BackendErrorMessages;\r\n    link: ShareableLink;\r\n    loading: boolean;\r\n    linkOptions: ShareableLinkOptions;\r\n    optionsPanelVisible: boolean;\r\n}\r\n\r\nexport class LoadShareableLink {\r\n    static readonly type = '[Shareable Link] Load From Backend';\r\n    constructor(public options: {autoCreate?: boolean} = {}) {}\r\n}\r\n\r\nexport class UpdateShareableLink {\r\n    static readonly type = '[Shareable Link] Update';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class CreateShareableLink {\r\n    static readonly type = '[Shareable Link] Create';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class DeleteShareableLink {\r\n    static readonly type = '[Shareable Link] Delete';\r\n}\r\n\r\nexport class ToggleOptionsPanel {\r\n    static readonly type = '[Shareable Link] Toggle Options Panel Visibility';\r\n}\r\n\r\nexport class LinkCopySuccess {\r\n    static readonly type = '[Shareable Link] Copy To Clipboard Success';\r\n}\r\n\r\nexport class ResetShareLinkState {\r\n    static readonly type = '[Shareable Link] Reset State';\r\n}\r\n\r\nconst defaultState = {\r\n    link: null,\r\n    loading: false,\r\n    optionsPanelVisible: true,\r\n    backendErrors: {},\r\n    cache: {},\r\n    linkOptions: {\r\n        allowDownload: false,\r\n        allowEdit: false,\r\n        expiresAt: null,\r\n        password: null,\r\n    }\r\n};\r\n\r\n@State<ShareLinkStateModel>({\r\n    name: 'shareLink',\r\n    defaults: defaultState\r\n})\r\n@Injectable()\r\nexport class ShareLinkState {\r\n    constructor(\r\n        private store: Store,\r\n        private settings: Settings,\r\n        private linksApi: ShareableLinksApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static loading(state: ShareLinkStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static link(state: ShareLinkStateModel) {\r\n        return state.link;\r\n    }\r\n\r\n    @Selector()\r\n    static optionsVisible(state: ShareLinkStateModel) {\r\n        return ! state.loading && state.optionsPanelVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static backendErrors(state: ShareLinkStateModel) {\r\n        return state.backendErrors;\r\n    }\r\n\r\n    @Action(CreateShareableLink)\r\n    createShareableLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0];\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.create(entryId, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => {\r\n                    const link = response.link;\r\n                    ctx.patchState({\r\n                        cache: {...ctx.getState().cache, [link.entry_id]: link},\r\n                        link: response.link,\r\n                        optionsPanelVisible: false\r\n                    });\r\n                }, (errorResponse: BackendErrorResponse) => {\r\n                    ctx.patchState({backendErrors: errorResponse.errors});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(UpdateShareableLink)\r\n    updateLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.update(link.id, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    cache: {...ctx.getState().cache, [link.entry_id]: response.link},\r\n                    optionsPanelVisible: false\r\n                }), (errorResponse: BackendErrorResponse) => {\r\n                    ctx.patchState({backendErrors: errorResponse.errors});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(LoadShareableLink)\r\n    loadShareableLink(ctx: StateContext<ShareLinkStateModel>, action: LoadShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0],\r\n            cachedLink = ctx.getState().cache[entryId];\r\n\r\n        if (cachedLink) {\r\n            return ctx.patchState({link: cachedLink, optionsPanelVisible: false});\r\n        }\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.findByEntryId(entryId, {autoCreate: action.options.autoCreate})\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    optionsPanelVisible: false,\r\n                    cache: {...ctx.getState().cache, [response.link.entry_id]: response.link},\r\n                }), () => {})\r\n            );\r\n    }\r\n\r\n    @Action(DeleteShareableLink)\r\n    deleteShareableLink(ctx: StateContext<ShareLinkStateModel>) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.delete(link.id)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(() => {\r\n                    const cache = ctx.getState().cache;\r\n                    delete cache[link.entry_id];\r\n\r\n                    ctx.patchState({\r\n                        link: null,\r\n                        cache: cache,\r\n                    });\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(ToggleOptionsPanel)\r\n    toggleOptionsPanel(ctx: StateContext<ShareLinkStateModel>) {\r\n        ctx.patchState({\r\n           optionsPanelVisible: !ctx.getState().optionsPanelVisible\r\n        });\r\n    }\r\n\r\n    @Action(ResetShareLinkState, {cancelUncompleted: true})\r\n    resetShareLinkState(ctx: StateContext<ShareLinkStateModel>) {\r\n        return ctx.patchState({...ctx.getState(), ...defaultState});\r\n    }\r\n}\r\n","<form class=\"update-link-panel\" [formGroup]=\"form\" (ngSubmit)=\"saveChanges()\">\n    <div class=\"link-options\">\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Link expiration</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"expirationVisible\" trans>Link is valid until:</mat-checkbox>\n                <div class=\"input-container expiration-input-container\" formGroupName=\"expiresAt\"  [class.hidden]=\"!expirationVisible.value\">\n                    <div class=\"date-input-container\">\n                        <input type=\"date\" formControlName=\"date\" class=\"date-input\" placeholder=\"Expiration date...\" trans-placeholder [min]=\"getMinDate()\">\n                    </div>\n                    <input type=\"time\" class=\"time-input\" formControlName=\"time\" placeholder=\"Expiration time...\" trans-placeholder>\n                </div>\n                <div class=\"error\" *ngIf=\"(backendErrors$ | async)?.expiresAt as error\">{{error}}</div>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Password Protect</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"passwordVisible\" trans>Require password:</mat-checkbox>\n                <ng-container *ngIf=\"passwordVisible.value\">\n                    <div class=\"input-container password-input-container\">\n                        <input type=\"password\" formControlName=\"password\" placeholder=\"Enter new password...\" trans-placeholder>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow editing</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowEdit\" trans>Users with link can modify this item.</mat-checkbox>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow download</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowDownload\" trans>Users with link can download this item.</mat-checkbox>\n        </div>\n    </div>\n\n    <button type=\"button\" (click)=\"toggleOptionsPanel()\" mat-button trans>Cancel</button>\n\n    <button type=\"submit\" class=\"update-button\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n        {{ ((link$ | async) ? 'Update Link' : 'Create Link') | trans }}\n    </button>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { CreateShareableLink, ShareLinkState, ToggleOptionsPanel, UpdateShareableLink } from '../share-link.state';\nimport { Observable } from 'rxjs';\nimport { ShareableLink } from '../models/shareable-link';\nimport { filter } from 'rxjs/operators';\nimport { ShareableLinkOptions } from '../models/shareable-link-options';\nimport { BackendErrorMessages } from '@common/core/types/backend-error-response';\n\n@Component({\n    selector: 'link-options',\n    templateUrl: './link-options.component.html',\n    styleUrls: ['./link-options.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkOptionsComponent implements OnInit {\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.backendErrors) backendErrors$: Observable<BackendErrorMessages>;\n\n    public form = new FormGroup({\n        password: new FormControl(),\n        expiresAt: new FormGroup({\n            date: new FormControl(),\n            time: new FormControl(),\n        }),\n        allowEdit: new FormControl(false),\n        allowDownload: new FormControl(true)\n    });\n\n    public passwordVisible = new FormControl(false);\n    public expirationVisible = new FormControl(false);\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        this.bindToLinkChange();\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public saveChanges() {\n        if (this.store.selectSnapshot(ShareLinkState.link)) {\n            this.store.dispatch(new UpdateShareableLink(this.getPayload()));\n        } else {\n            this.store.dispatch(new CreateShareableLink(this.getPayload()));\n        }\n    }\n\n    private getPayload() {\n        const payload = {\n            allowEdit: this.form.get('allowEdit').value,\n            allowDownload: this.form.get('allowDownload').value,\n        } as ShareableLinkOptions;\n\n        if (this.expirationVisible.value) {\n            payload.expiresAt = this.form.get('expiresAt.date').value;\n            if (this.form.get('expiresAt.time').value) {\n                payload.expiresAt += ' ' + this.form.get('expiresAt.time').value;\n            }\n        }\n\n        // not sending \"password\" with request will remove it from link\n        if (this.passwordVisible.value) {\n            payload.password = this.form.get('password').value;\n        }\n\n        return payload;\n    }\n\n    private bindToLinkChange() {\n        this.link$.pipe(filter(link => !!link))\n            .subscribe(link => {\n                this.hydrateExpirationForm(link);\n\n                // show or hide password form field\n                this.passwordVisible.setValue(!!link.password);\n                this.expirationVisible.setValue(!!link.expires_at);\n\n                this.form.patchValue({\n                    allowEdit: link.allow_edit,\n                    allowDownload: link.allow_download\n                });\n            });\n    }\n\n    private hydrateExpirationForm(link: ShareableLink) {\n        if ( ! link || ! link.expires_at) return;\n\n        const parts = link.expires_at.split(' ');\n\n        this.form.get('expiresAt').setValue({\n            date: parts[0],\n            time: parts[1]\n        });\n    }\n\n    public getMinDate(): string {\n        return new Date().toJSON().split('T')[0];\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Shareable link</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content>\n    <ng-container *ngIf=\"link$ | async\">\n        <div class=\"title\">\n            <div class=\"left\">\n                {{ 'Link sharing is' | trans}} <span class=\"state on\"><button class=\"on-text text no-style\" (click)=\"deleteLink()\" trans>on</button></span>\n            </div>\n            <div class=\"right\">\n                <button type=\"button\" mat-icon-button (click)=\"deleteLink()\">\n                    <mat-icon svgIcon=\"delete\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button (click)=\"toggleOptionsPanel()\">\n                    <mat-icon svgIcon=\"settings\"></mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"link-container\">\n            <div class=\"link-input-container input-container\">\n                <input type=\"text\" id=\"link-input\" readonly (click)=\"focusInput()\" (change)=\"focusInput()\" [value]=\"shareableLink$ | async\" tabindex=\"1\">\n                <button mat-flat-button color=\"accent\" (click)=\"copyLinkToClipboard()\" trans>Copy</button>\n            </div>\n            <div class=\"social-icons\">\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style facebook\" (click)=\"shareLink('facebook')\">\n                    <mat-icon svgIcon=\"facebook\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style twitter\" (click)=\"shareLink('twitter')\">\n                    <mat-icon svgIcon=\"twitter\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style mail\" (click)=\"shareLink('mail')\">\n                    <mat-icon svgIcon=\"mail\"></mat-icon>\n                </button>\n            </div>\n        </div>\n    </ng-container>\n\n    <link-options [@visibility]=\"optionsVisible$ | async\"></link-options>\n    <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay-transparent\"></loading-indicator>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button type=\"button\" mat-button class=\"submit-button\" (click)=\"close()\" [disabled]=\"loading$ | async\" trans>Close</button>\n</mat-dialog-actions>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport {\n    DeleteShareableLink,\n    LinkCopySuccess,\n    LoadShareableLink, ResetShareLinkState,\n    ShareLinkState,\n    ToggleOptionsPanel\n} from '../links/share-link.state';\nimport { Settings } from '@common/core/config/settings.service';\nimport { ShareableLink } from '../links/models/shareable-link';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport copy from 'copy-to-clipboard';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { ShareableNetworks, shareLinkSocially } from '@common/core/utils/share-link-socially';\n\n@Component({\n    selector: 'share-link-dialog',\n    templateUrl: './share-link-dialog.component.html',\n    styleUrls: ['./share-link-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('visibility', [\n            state('true', style({\n                height: '*',\n                padding: '*',\n                opacity: '1',\n                overflow: '*',\n            })),\n            state('false', style({\n                height: '0',\n                padding: '0',\n                opacity: '0',\n                overflow: 'hidden',\n            })),\n            transition('true <=> false', animate('225ms cubic-bezier(.4,0,.2,1)'))\n        ]),\n    ],\n})\nexport class ShareLinkDialogComponent implements AfterViewInit, OnInit, OnDestroy {\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.optionsVisible) optionsVisible$: Observable<boolean>;\n    public shareableLink$ = new BehaviorSubject(null);\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        protected store: Store,\n        protected toast: Toast,\n        protected actions$: Actions,\n        protected settings: Settings,\n        protected dialogRef: MatDialogRef<ShareLinkDialogComponent>,\n    ) {}\n\n    ngOnInit() {\n        this.store.dispatch(new LoadShareableLink());\n        this.bindToOptionsPanelToggle();\n    }\n\n    ngAfterViewInit() {\n        this.bindToLinkChange();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetShareLinkState());\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public deleteLink() {\n        this.store.dispatch(new DeleteShareableLink()).subscribe(() => {\n            this.toast.open('Link deleted.');\n            this.dialogRef.close();\n        });\n    }\n\n    public copyLinkToClipboard() {\n        this.focusInput();\n        const success = copy(this.shareableLink$.value);\n\n        if (success) {\n            this.store.dispatch(new LinkCopySuccess());\n        }\n    }\n\n    private bindToLinkChange() {\n        this.link$.subscribe(link => {\n            if ( ! link) return;\n            this.shareableLink$.next(this.settings.getBaseUrl() + 'drive/s/' + link.hash);\n            setTimeout(() => this.focusInput());\n        });\n    }\n\n    private bindToOptionsPanelToggle() {\n        const sub = this.actions$.pipe(ofActionDispatched(ToggleOptionsPanel))\n            .subscribe(() => {\n                // close dialog if user canceled link creation\n                if ( ! this.store.selectSnapshot(ShareLinkState.optionsVisible) && ! this.shareableLink$.value) {\n                    this.close();\n                }\n            });\n        this.subscriptions.push(sub);\n    }\n\n    public shareLink(network: ShareableNetworks) {\n        shareLinkSocially(network, this.shareableLink$.value);\n    }\n\n    public focusInput() {\n        const input = document.getElementById('link-input') as HTMLInputElement;\n        input.focus();\n        input.select();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","export type ShareableNetworks = 'facebook'|'twitter'|'pinterest'|'tumblr'|'blogger'|'mail';\r\n\r\nexport function shareLinkSocially(network: ShareableNetworks, link: string, name?: string, image?: string) {\r\n    const url = generateShareUrl(network, link, name, image);\r\n\r\n    if (network === 'mail') {\r\n        window.location.href = url;\r\n    } else {\r\n        openNewWindow(url);\r\n    }\r\n}\r\n\r\nfunction openNewWindow(url: string) {\r\n    const width  = 575,\r\n        height = 400,\r\n        left   = (window.innerWidth  - width)  / 2,\r\n        top    = (window.innerHeight - height) / 2,\r\n        opts   = 'status=1, scrollbars=1' + ',width=' + width + ',height=' + height + ',top=' + top + ',left=' + left;\r\n\r\n    window.open(url, 'share', opts);\r\n}\r\n\r\nfunction generateShareUrl(type: string, link: string, name?: string, image?: string) {\r\n    switch (type) {\r\n        case 'facebook':\r\n            return 'https://www.facebook.com/sharer/sharer.php?u=' + link ;\r\n        case 'twitter':\r\n            return `https://twitter.com/intent/tweet?text=${name}&url=${link}`;\r\n        case 'google-plus':\r\n            return 'https://plus.google.com/share?url=' + link ;\r\n        case 'pinterest':\r\n            return 'https://pinterest.com/pin/create/button/?url=' + link + '&media=' + image;\r\n        case 'tumblr':\r\n            const base = 'https://www.tumblr.com/widgets/share/tool?shareSource=legacy&canonicalUrl=&posttype=photo&title=&caption=';\r\n            return base + name + '&content=' + image + '&url=' + link ;\r\n        case 'blogger':\r\n            return 'https://www.blogger.com/blog_this.pyra?t&u=' + link + '&n=' + name;\r\n        case 'mail':\r\n            return `mailto:?subject=Check out this link.&body=${link}`;\r\n    }\r\n}\r\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>New Folder</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"folderName\" placeholder=\"Folder name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Create</button>\n    </mat-dialog-actions>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DriveFolder } from '../../models/driveFolder';\nimport { FoldersApiService } from '../../api/folders-api.service';\nimport { Store } from '@ngxs/store';\nimport { BackendErrorResponse } from '@common/core/types/backend-error-response';\nimport { DriveState } from '../../../state/drive-state';\nimport { finalize } from 'rxjs/operators';\nimport { NewFolderCreated } from '../../../state/actions/events';\n\nexport interface CrupdateFolderDialogData {\n    folder?: DriveFolder;\n}\n\nexport interface CrupdateFolderErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'crupdate-folder-dialog',\n    templateUrl: './crupdate-folder-dialog.component.html',\n    styleUrls: ['./crupdate-folder-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateFolderDialogComponent {\n    public folderName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: CrupdateFolderErrors = {};\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateFolderDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateFolderDialogData,\n        private store: Store,\n        private foldersApi: FoldersApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    public confirm() {\n        this.loading.next(true);\n\n        const activeFolder = this.data.folder || this.store.selectSnapshot(DriveState.activeFolder);\n        const params = {\n            name: this.folderName.value,\n            parentId: activeFolder?.id || null,\n        };\n\n        return this.foldersApi.create(params)\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(response => {\n                this.setErrors();\n                this.store.dispatch(new NewFolderCreated(response.folder));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<CrupdateFolderErrors>) {\n        this.errors = response ? response.errors : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport { InjectionToken, Directive, ViewContainerRef, Inject, Optional, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, IterableDiffers, ChangeDetectorRef, Input, ViewChild, ContentChildren, ElementRef, Renderer2, HostListener, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base tree control. It has basic toggle/expand/collapse operations on a single data node. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nclass BaseTreeControl {\n    constructor() {\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode)) ?\n            this.collapseDescendants(dataNode) :\n            this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\nclass FlatTreeControl extends BaseTreeControl {\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type. */\nclass NestedTreeControl extends BaseTreeControl {\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean))\n                .subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.ɵfac = function CdkTreeNodeOutlet_Factory(t) { return new (t || CdkTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nCdkTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeOutlet, selectors: [[\"\", \"cdkTreeNodeOutlet\", \"\"]] });\nCdkTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeOutlet]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.ɵfac = function CdkTreeNodeDef_Factory(t) { return new (t || CdkTreeNodeDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeDef, selectors: [[\"\", \"cdkTreeNodeDef\", \"\"]], inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] } });\nCdkTreeNodeDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeDef]',\n                inputs: [\n                    'when: cdkTreeNodeDefWhen'\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * @docs-private\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /** Level of nodes */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() { return this._dataSource; }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlMissingError();\n        }\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    ngAfterContentChecked() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n                .subscribe(data => this.renderNodeChanges(data));\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n                this._levels.delete(item.item);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = this._levels.get(parentData) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.ɵfac = function CdkTree_Factory(t) { return new (t || CdkTree)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTree, selectors: [[\"cdk-tree\"]], contentQueries: function CdkTree_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeDefs = _t);\n    } }, viewQuery: function CdkTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"cdk-tree\"], inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, exportAs: [\"cdkTree\"], decls: 1, vars: 0, consts: [[\"cdkTreeNodeOutlet\", \"\"]], template: function CdkTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkTreeNodeOutlet], encapsulation: 2 });\nCdkTree.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef }\n];\nCdkTree.propDecorators = {\n    dataSource: [{ type: Input }],\n    treeControl: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    _nodeOutlet: [{ type: ViewChild, args: [CdkTreeNodeOutlet, { static: true },] }],\n    _nodeDefs: [{ type: ContentChildren, args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTree, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-tree',\n                exportAs: 'cdkTree',\n                template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'cdk-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }]; }, { dataSource: [{\n            type: Input\n        }], treeControl: [{\n            type: Input\n        }], trackBy: [{\n            type: Input\n        }], _nodeOutlet: [{\n            type: ViewChild,\n            args: [CdkTreeNodeOutlet, { static: true }]\n        }], _nodeDefs: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Emits when the node's data has changed. */\n        this._dataChanges = new Subject();\n        /**\n         * The role of the node should always be 'treeitem'.\n         */\n        // TODO: mark as deprecated\n        this.role = 'treeitem';\n        CdkTreeNode.mostRecentTreeNode = this;\n    }\n    /** The tree node's data. */\n    get data() { return this._data; }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    get level() {\n        return this._tree.treeControl.getLevel ? this._tree.treeControl.getLevel(this._data) : 0;\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Focuses the menu item. Implements for FocusableOption. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    // TODO: role should eventually just be set in the component host\n    _setRoleFromData() {\n        if (!this._tree.treeControl.isExpandable && !this._tree.treeControl.getChildren &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        this.role = 'treeitem';\n    }\n}\nCdkTreeNode.ɵfac = function CdkTreeNode_Factory(t) { return new (t || CdkTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree)); };\nCdkTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNode, selectors: [[\"cdk-tree-node\"]], hostAttrs: [1, \"cdk-tree-node\"], hostVars: 3, hostBindings: function CdkTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.level + 1)(\"role\", ctx.role);\n    } }, inputs: { role: \"role\" }, exportAs: [\"cdkTreeNode\"] });\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\nCdkTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree }\n];\nCdkTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-tree-node',\n                exportAs: 'cdkTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'level + 1',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }]; }, { role: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    constructor(_elementRef, _tree, _differs) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes(childrenNodes);\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes.pipe(takeUntil(this._destroyed))\n                .subscribe(result => this.updateChildrenNodes(result));\n        }\n        this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n}\nCdkNestedTreeNode.ɵfac = function CdkNestedTreeNode_Factory(t) { return new (t || CdkNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkNestedTreeNode, selectors: [[\"cdk-nested-tree-node\"]], contentQueries: function CdkNestedTreeNode_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nodeOutlet = _t);\n    } }, hostAttrs: [1, \"cdk-tree-node\", \"cdk-nested-tree-node\"], hostVars: 2, hostBindings: function CdkNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, exportAs: [\"cdkNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers }\n];\nCdkNestedTreeNode.propDecorators = {\n    nodeOutlet: [{ type: ContentChildren, args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-nested-tree-node',\n                exportAs: 'cdkNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node cdk-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }, { type: ɵngcc0.IterableDiffers }]; }, { nodeOutlet: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    constructor(_treeNode, _tree, \n    /**\n     * @deprecated _renderer parameter no longer being used. To be removed.\n     * @breaking-change 11.0.0\n     */\n    _renderer, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** CSS units used for the indentation value. */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() { return this._level; }\n    set level(value) { this._setLevelInput(value); }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() { return this._indent; }\n    set indent(indent) { this._setIndentInput(indent); }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = coerceNumberProperty(value, null);\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n}\nCdkTreeNodePadding.ɵfac = function CdkTreeNodePadding_Factory(t) { return new (t || CdkTreeNodePadding)(ɵngcc0.ɵɵdirectiveInject(CdkTreeNode), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nCdkTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodePadding, selectors: [[\"\", \"cdkTreeNodePadding\", \"\"]], inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] } });\nCdkTreeNodePadding.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['cdkTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['cdkTreeNodePaddingIndent',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodePadding]'\n            }]\n    }], function () { return [{ type: CdkTreeNode }, { type: CdkTree }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { level: [{\n            type: Input,\n            args: ['cdkTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['cdkTreeNodePaddingIndent']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Node toggle to expand/collapse the node.\n */\nclass CdkTreeNodeToggle {\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /** Whether expand/collapse the node recursively. */\n    get recursive() { return this._recursive; }\n    set recursive(value) { this._recursive = coerceBooleanProperty(value); }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.ɵfac = function CdkTreeNodeToggle_Factory(t) { return new (t || CdkTreeNodeToggle)(ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(CdkTreeNode)); };\nCdkTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeToggle, selectors: [[\"\", \"cdkTreeNodeToggle\", \"\"]], hostBindings: function CdkTreeNodeToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkTreeNodeToggle_click_HostBindingHandler($event) { return ctx._toggle($event); });\n    } }, inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] } });\nCdkTreeNodeToggle.ctorParameters = () => [\n    { type: CdkTree },\n    { type: CdkTreeNode }\n];\nCdkTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['cdkTreeNodeToggleRecursive',] }],\n    _toggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeToggle, [{\n        type: Directive,\n        args: [{ selector: '[cdkTreeNodeToggle]' }]\n    }], function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, { recursive: [{\n            type: Input,\n            args: ['cdkTreeNodeToggleRecursive']\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _toggle: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTreeModule });\nCdkTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTreeModule_Factory(t) { return new (t || CdkTreeModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTreeModule, { declarations: [CdkNestedTreeNode, CdkTreeNodeDef, CdkTreeNodePadding, CdkTreeNodeToggle, CdkTree, CdkTreeNode, CdkTreeNodeOutlet], exports: [CdkNestedTreeNode, CdkTreeNodeDef, CdkTreeNodePadding, CdkTreeNodeToggle, CdkTree, CdkTreeNode, CdkTreeNodeOutlet] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n\n//# sourceMappingURL=tree.js.map","import { CdkTreeNode, CdkTree, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport { Directive, ElementRef, Attribute, Input, IterableDiffers, ViewContainerRef, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/tree';\nconst _MatTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nclass MatTreeNode extends _MatTreeNodeMixinBase {\n    constructor(_elementRef, _tree, tabIndex) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this.role = 'treeitem';\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n}\nMatTreeNode.ɵfac = function MatTreeNode_Factory(t) { return new (t || MatTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNode, selectors: [[\"mat-tree-node\"]], hostAttrs: [1, \"mat-tree-node\"], hostVars: 3, hostBindings: function MatTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.level + 1)(\"role\", ctx.role);\n    } }, inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", role: \"role\" }, exportAs: [\"matTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNode, useExisting: MatTreeNode }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-tree-node',\n                exportAs: 'matTreeNode',\n                inputs: ['disabled', 'tabIndex'],\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'level + 1',\n                    '[attr.role]': 'role',\n                    'class': 'mat-tree-node'\n                },\n                providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { role: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n}\nMatTreeNodeDef.ɵfac = function MatTreeNodeDef_Factory(t) { return ɵMatTreeNodeDef_BaseFactory(t || MatTreeNodeDef); };\nMatTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeDef, selectors: [[\"\", \"matTreeNodeDef\", \"\"]], inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeDef.propDecorators = {\n    data: [{ type: Input, args: ['matTreeNode',] }]\n};\nconst ɵMatTreeNodeDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeDef]',\n                inputs: [\n                    'when: matTreeNodeDefWhen'\n                ],\n                providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]\n            }]\n    }], null, { data: [{\n            type: Input,\n            args: ['matTreeNode']\n        }] }); })();\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    constructor(_elementRef, _tree, _differs, tabIndex) {\n        super(_elementRef, _tree, _differs);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n        this._disabled = false;\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    /** Whether the node is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Tabindex for the node. */\n    get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatNestedTreeNode.ɵfac = function MatNestedTreeNode_Factory(t) { return new (t || MatNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatNestedTreeNode, selectors: [[\"mat-nested-tree-node\"]], hostAttrs: [1, \"mat-nested-tree-node\"], hostVars: 2, hostBindings: function MatNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", node: [\"matNestedTreeNode\", \"node\"] }, exportAs: [\"matNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatNestedTreeNode.propDecorators = {\n    node: [{ type: Input, args: ['matNestedTreeNode',] }],\n    disabled: [{ type: Input }],\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-nested-tree-node',\n                exportAs: 'matNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'mat-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: ɵngcc0.IterableDiffers }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], node: [{\n            type: Input,\n            args: ['matNestedTreeNode']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() { return this._level; }\n    set level(value) { this._setLevelInput(value); }\n    /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n    get indent() { return this._indent; }\n    set indent(indent) { this._setIndentInput(indent); }\n}\nMatTreeNodePadding.ɵfac = function MatTreeNodePadding_Factory(t) { return ɵMatTreeNodePadding_BaseFactory(t || MatTreeNodePadding); };\nMatTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodePadding, selectors: [[\"\", \"matTreeNodePadding\", \"\"]], inputs: { level: [\"matTreeNodePadding\", \"level\"], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['matTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['matTreeNodePaddingIndent',] }]\n};\nconst ɵMatTreeNodePadding_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodePadding);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodePadding]',\n                providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]\n            }]\n    }], null, { level: [{\n            type: Input,\n            args: ['matTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['matTreeNodePaddingIndent']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nMatTreeNodeOutlet.ɵfac = function MatTreeNodeOutlet_Factory(t) { return new (t || MatTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nMatTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeOutlet, selectors: [[\"\", \"matTreeNodeOutlet\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkTreeNodeOutlet,\n                useExisting: MatTreeNodeOutlet\n            }])] });\nMatTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeOutlet]',\n                providers: [{\n                        provide: CdkTreeNodeOutlet,\n                        useExisting: MatTreeNodeOutlet\n                    }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTree extends CdkTree {\n}\nMatTree.ɵfac = function MatTree_Factory(t) { return ɵMatTree_BaseFactory(t || MatTree); };\nMatTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTree, selectors: [[\"mat-tree\"]], viewQuery: function MatTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"mat-tree\"], exportAs: [\"matTree\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTree, useExisting: MatTree }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"matTreeNodeOutlet\", \"\"]], template: function MatTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [MatTreeNodeOutlet], styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"], encapsulation: 2 });\nMatTree.propDecorators = {\n    _nodeOutlet: [{ type: ViewChild, args: [MatTreeNodeOutlet, { static: true },] }]\n};\nconst ɵMatTree_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTree);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTree, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tree',\n                exportAs: 'matTree',\n                template: `<ng-container matTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'mat-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTree for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CdkTree, useExisting: MatTree }],\n                styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"]\n            }]\n    }], null, { _nodeOutlet: [{\n            type: ViewChild,\n            args: [MatTreeNodeOutlet, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\n// tslint:disable-next-line: coercion-types\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    get recursive() { return this._recursive; }\n    set recursive(value) {\n        // TODO: when we remove support for ViewEngine, change this setter to an input\n        // alias in the decorator metadata.\n        this._recursive = coerceBooleanProperty(value);\n    }\n}\nMatTreeNodeToggle.ɵfac = function MatTreeNodeToggle_Factory(t) { return ɵMatTreeNodeToggle_BaseFactory(t || MatTreeNodeToggle); };\nMatTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeToggle, selectors: [[\"\", \"matTreeNodeToggle\", \"\"]], inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['matTreeNodeToggleRecursive',] }]\n};\nconst ɵMatTreeNodeToggle_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeToggle);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeToggle, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeToggle]',\n                providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]\n            }]\n    }], null, { recursive: [{\n            type: Input,\n            args: ['matTreeNodeToggleRecursive']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet\n];\nclass MatTreeModule {\n}\nMatTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTreeModule });\nMatTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTreeModule_Factory(t) { return new (t || MatTreeModule)(); }, imports: [[CdkTreeModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTreeModule, { declarations: function () { return [MatNestedTreeNode, MatTreeNodeDef, MatTreeNodePadding, MatTreeNodeToggle, MatTree, MatTreeNode, MatTreeNodeOutlet]; }, imports: function () { return [CdkTreeModule, MatCommonModule]; }, exports: function () { return [MatCommonModule, MatNestedTreeNode, MatTreeNodeDef, MatTreeNodePadding, MatTreeNodeToggle, MatTree, MatTreeNode, MatTreeNodeOutlet]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CdkTreeModule, MatCommonModule],\n                exports: [MatCommonModule, MAT_TREE_DIRECTIVES],\n                declarations: MAT_TREE_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nclass MatTreeFlattener {\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    _flattenNode(node, level, resultNodes, parentMap) {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe(children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    });\n                }\n            }\n        }\n        return resultNodes;\n    }\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((child, index) => {\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        });\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData) {\n        let resultNodes = [];\n        structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        let results = [];\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach(node => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n        return results;\n    }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n */\nclass MatTreeFlatDataSource extends DataSource {\n    constructor(_treeControl, _treeFlattener, initialData = []) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject(initialData);\n    }\n    get data() { return this._data.value; }\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    connect(collectionViewer) {\n        const changes = [\n            collectionViewer.viewChange,\n            this._treeControl.expansionModel.changed,\n            this._flattenedData\n        ];\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     */\n    get data() { return this._data.value; }\n    set data(value) { this._data.next(value); }\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => {\n            return this.data;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n\n//# sourceMappingURL=tree.js.map","import { Injectable } from '@angular/core';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Observable, of as observableOf } from 'rxjs';\n\n/** Flat node with expandable and level information */\nexport interface FolderFlatNode extends DriveFolder {\n    level: number;\n    expandable: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersTreeService {\n    public control: FlatTreeControl<FolderFlatNode>;\n    public flattener: MatTreeFlattener<DriveFolder, FolderFlatNode>;\n    public dataSource: MatTreeFlatDataSource<DriveFolder, FolderFlatNode>;\n    public set data(items: DriveFolder[]) {\n        this.dataSource.data = items;\n    }\n\n    constructor() {\n        this.createTreeFlattener();\n        this.createTreeControl();\n        this.createTreeDataSource();\n    }\n\n    private createTreeFlattener() {\n        this.flattener = new MatTreeFlattener(\n            this.transformer,\n            this.getLevel,\n            this.isExpandable, this.getChildren\n        );\n    }\n\n    private createTreeControl() {\n        this.control = new FlatTreeControl<FolderFlatNode>(\n            this.getLevel,\n            this.isExpandable\n        );\n    }\n\n    private createTreeDataSource() {\n        this.dataSource = new MatTreeFlatDataSource(\n            this.control,\n            this.flattener\n        );\n    }\n\n    public transformer(node: DriveFolder, level: number) {\n        const flatNode = Object.assign({}, node) as FolderFlatNode;\n        flatNode.level = level;\n        flatNode.expandable = !!node.children;\n        return flatNode;\n    }\n\n    private getLevel(node: FolderFlatNode): number {\n        return node.level;\n    }\n\n    private isExpandable(node: FolderFlatNode): boolean {\n        return node.expandable;\n    }\n\n    private getChildren(node: DriveFolder): Observable<DriveFolder[]> {\n        return observableOf(node.children);\n    }\n}\n","import {Directive, ElementRef, Inject, Input, OnInit} from '@angular/core';\r\nimport {ContextMenu} from './context-menu.service';\r\nimport { AVAILABLE_CONTEXT_MENUS } from './available-context-menus';\r\n\r\n@Directive({\r\n    selector: '[contextMenu]'\r\n})\r\nexport class ContextMenuDirective implements OnInit {\r\n    @Input('contextMenu') params: string|{type: string, [key: string]: any};\r\n    @Input('disableContextMenu') disableContextMenu = false;\r\n\r\n    public availableMenus: object = {};\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private contextMenu: ContextMenu,\r\n        @Inject(AVAILABLE_CONTEXT_MENUS) _availableMenus: object[]\r\n    ) {\r\n        _availableMenus.forEach(config => {\r\n            Object.assign(this.availableMenus, config);\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (this.disableContextMenu) return;\r\n\r\n            this.contextMenu.open(\r\n                this.getMenuComponent(),\r\n                e,\r\n                {\r\n                    overlayX: 'start',\r\n                    overlayY: 'top',\r\n                    data: this.getMenuData()\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    private getMenuComponent() {\r\n        if (typeof this.params === 'string') {\r\n            return this.availableMenus[this.params];\r\n        } else {\r\n            return this.availableMenus[this.params.type];\r\n        }\r\n    }\r\n\r\n    private getMenuData() {\r\n        return (typeof this.params === 'string') ? {type: this.params} : this.params;\r\n    }\r\n}\r\n","import {ComponentFactoryResolver, ElementRef, Injectable, Injector, NgZone} from '@angular/core';\r\nimport {NavigationStart, Router} from '@angular/router';\r\nimport {ComponentPortal, ComponentType, PortalInjector} from '@angular/cdk/portal';\r\nimport {Overlay, PositionStrategy} from '@angular/cdk/overlay';\r\nimport {filter} from 'rxjs/operators';\r\nimport {ContextMenuRef} from './context-menu-ref';\r\nimport {CONTEXT_MENU_DATA} from './context-menu-data';\r\n\r\nexport interface ContextMenuParams {\r\n    data?: { [key: string]: any };\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    originX?: 'start' | 'center' | 'end';\r\n    originY?: 'top' | 'center' | 'bottom';\r\n    overlayX?: 'start' | 'center' | 'end';\r\n    overlayY?: 'top' | 'center' | 'bottom';\r\n}\r\n\r\ntype MenuOrigin = MouseEvent | EventTarget | HTMLElement;\r\n\r\nconst ORIGIN_ID = 'dynamic-context-menu-origin';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContextMenu {\r\n    private lastOrigin: HTMLElement;\r\n    private openContextMenu: ContextMenuRef<any>|null;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private zone: NgZone,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private overlay: Overlay,\r\n    ) {\r\n        this.router.events\r\n            .pipe(filter(e => e instanceof NavigationStart))\r\n            .subscribe(() => this.close());\r\n    }\r\n\r\n    public open<T>(component: ComponentType<T>, e: MenuOrigin, params: ContextMenuParams = {}): ContextMenuRef<T> {\r\n        this.close();\r\n\r\n        if ( ! component) {\r\n            return;\r\n        }\r\n\r\n        const overlayRef = this.createOverlay(e, params);\r\n        this.openContextMenu = new ContextMenuRef(overlayRef);\r\n\r\n        const injector = new PortalInjector(this.injector, new WeakMap<any, any>([\r\n            [CONTEXT_MENU_DATA, params.data],\r\n            [ContextMenuRef, this.openContextMenu],\r\n        ]));\r\n\r\n        const portal = new ComponentPortal(component, null, injector);\r\n\r\n        overlayRef.attach(portal);\r\n        this.bindEventsToOverlay();\r\n\r\n        return this.openContextMenu;\r\n    }\r\n\r\n    /**\r\n     * Close currently open context menu.\r\n     */\r\n    public close() {\r\n        this.removeLastOrigin();\r\n\r\n        if (this.openContextMenu) {\r\n            this.openContextMenu.close();\r\n            this.openContextMenu = null;\r\n        }\r\n    }\r\n\r\n    private createOverlay(e: MenuOrigin, params: ContextMenuParams) {\r\n        return this.overlay.create({\r\n            positionStrategy: this.getMenuPositionStrategy(e, params),\r\n            scrollStrategy: this.overlay.scrollStrategies.close(),\r\n            hasBackdrop: true,\r\n            backdropClass: 'context-menu-backdrop',\r\n            panelClass: 'context-menu-overlay'\r\n        });\r\n    }\r\n\r\n    private bindEventsToOverlay() {\r\n        this.openContextMenu.contextMenuElement().addEventListener('click', () => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropClick().subscribe(() => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropElement().addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.detachments().subscribe(() => {\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    private getMenuPositionStrategy(e: MenuOrigin, params: ContextMenuParams): PositionStrategy {\r\n        this.createOriginFromEvent(e, params);\r\n\r\n        const primary = {\r\n            originX: params.originX || 'center',\r\n            originY: params.originY || 'bottom',\r\n            overlayX: params.overlayX || 'center',\r\n            overlayY: params.overlayY || 'top',\r\n        };\r\n\r\n        return this.overlay.position().flexibleConnectedTo(new ElementRef(this.lastOrigin))\r\n            .withPositions([\r\n                primary,\r\n                {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'}\r\n            ]);\r\n    }\r\n\r\n    private createOriginFromEvent(e: MenuOrigin, params: ContextMenuParams) {\r\n        this.removeLastOrigin();\r\n\r\n        if (e instanceof HTMLElement || e instanceof EventTarget) {\r\n            this.lastOrigin = e as HTMLElement;\r\n        } else {\r\n            this.lastOrigin = document.createElement('div');\r\n            this.lastOrigin.style.position = 'fixed';\r\n            this.lastOrigin.style.top = e.clientY + (params.offsetY || 0) + 'px';\r\n            this.lastOrigin.style.left = e.clientX + (params.offsetX || 0) + 'px';\r\n            this.lastOrigin.id = ORIGIN_ID;\r\n            document.body.appendChild(this.lastOrigin);\r\n        }\r\n    }\r\n\r\n    private removeLastOrigin() {\r\n        if (this.lastOrigin && this.lastOrigin.id === ORIGIN_ID) {\r\n            this.lastOrigin.remove();\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { BaseDropTarget } from './base-drop-target';\nimport { DriveState} from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { MoveEntries } from '../../state/actions/commands';\n\n@Directive({\n    selector: '[folderDropTarget]'\n})\nexport class FolderDropTargetDirective extends BaseDropTarget {\n    @Input('folderDropTarget') folder: DriveFolder;\n\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n    ) {\n      super();\n    }\n\n    protected canDrop(): boolean {\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\n            folder = this.folder as DriveFolder;\n\n        return DriveState.canMoveEntriesTo(entries, folder);\n    }\n\n    protected executeAction() {\n        return this.store.dispatch(new MoveEntries(this.folder));\n    }\n}\n","import { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\n\n@Directive()\nexport abstract class BaseDropTarget implements OnInit, OnDestroy {\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    protected subs: Subscription[] = [];\n    protected active: boolean;\n    protected abstract el: ElementRef<HTMLElement>;\n\n    ngOnInit() {\n        this.dragging.subscribe(dragging => {\n            if (dragging) {\n                this.onDragStart();\n            } else {\n                this.onDragEnd();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n\n    protected abstract canDrop();\n    protected abstract executeAction();\n\n    protected onDragStart() {\n        const enter = fromEvent(this.el.nativeElement, 'mouseenter')\n            .subscribe(() => this.onDragEnter());\n\n        const leave = fromEvent(this.el.nativeElement, 'mouseleave')\n            .subscribe(() => this.onDragLeave());\n\n        this.subs.push(enter, leave);\n    }\n\n    protected onDragEnter() {\n        const canDrop = this.canDrop(),\n            classes = ['drag-over'];\n        if (canDrop) {\n            this.active = true;\n            classes.push('can-drop');\n        }\n        this.el.nativeElement.classList.add(...classes);\n    }\n\n    protected onDragLeave() {\n        this.active = false;\n        this.removeDragOverClass();\n    }\n\n    protected onDragEnd() {\n        this.unsubscribe();\n        this.removeDragOverClass();\n\n        // pointer never left element before drag stop,\n        // we can assume that user dropped on this el\n        if (this.active && this.canDrop()) {\n            this.executeAction();\n            this.active = false;\n        }\n    }\n\n    protected unsubscribe() {\n        this.subs.forEach(sub => sub && sub.unsubscribe());\n    }\n\n    protected removeDragOverClass() {\n        this.el.nativeElement.classList.remove(...['drag-over', 'can-drop']);\n    }\n}\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const AVAILABLE_CONTEXT_MENUS = new InjectionToken<any>('AVAILABLE_CONTEXT_MENUS');\r\n","import {OverlayRef} from '@angular/cdk/overlay';\r\n\r\nexport class ContextMenuRef<T> {\r\n    constructor(private overlayRef: OverlayRef) {}\r\n\r\n    public close() {\r\n        if (this.overlayRef) {\r\n            this.overlayRef.dispose();\r\n        }\r\n    }\r\n\r\n    public backdropClick() {\r\n        return this.overlayRef.backdropClick();\r\n    }\r\n\r\n    public attachments() {\r\n        return this.overlayRef.attachments();\r\n    }\r\n\r\n    public detachments() {\r\n        return this.overlayRef.detachments();\r\n    }\r\n\r\n    public backdropElement() {\r\n        return this.overlayRef.backdropElement;\r\n    }\r\n\r\n    public contextMenuElement() {\r\n        return this.overlayRef.overlayElement;\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CONTEXT_MENU_DATA = new InjectionToken<{ [key: string]: any }>('CONTEXT_MENU_DATA');\r\n","<div class=\"mat-tree-node root-tree-node\" *ngIf=\"showRootNode\" (click)=\"selectFolder()\" [class.active]=\"!(selectedFolderId$ | async)\">\n    <mat-icon svgIcon=\"network-drive-custom\" class=\"folder-icon\"></mat-icon>\n    <span class=\"text\" trans>My Drive</span>\n</div>\n<mat-tree [dataSource]=\"tree.dataSource\" [treeControl]=\"tree.control\">\n    <mat-tree-node\n            *matTreeNodeDef=\"let node\"\n            matTreeNodePadding\n            [matTreeNodePaddingIndent]=\"showRootNode ? 40 : 24\"\n            [contextMenu]=\"{type: 'entry', entry: node}\"\n            [disableContextMenu]=\"disableContextMenu\"\n            [folderDropTarget]=\"node\"\n            [class.active]=\"(selectedFolderId$ | async) === node.hash\"\n            class=\"tree-node\"\n    >\n        <mat-icon class=\"toggle-expansion-icon\"\n                  matTreeNodeToggle\n                  [class.expanded]=\"tree.control.isExpanded(node)\"\n                  svgIcon=\"arrow-drop-down\"\n        ></mat-icon>\n        <button type=\"button\" class=\"no-style folder-button\" (click)=\"selectFolder(node)\">\n            <mat-icon svgIcon=\"folder\" class=\"folder-icon\"></mat-icon>\n            <span class=\"folder-name text\">{{node.name}}</span>\n        </button>\n    </mat-tree-node>\n</mat-tree>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FoldersTreeService } from './folders-tree.service';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'folders-tree',\n    templateUrl: './folders-tree.component.html',\n    styleUrls: ['./folders-tree.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [FoldersTreeService],\n})\nexport class FoldersTreeComponent implements OnInit, OnDestroy {\n    @HostBinding('class.expanded') @Input() expanded = false;\n    @HostBinding('class.has-root-node') @Input() showRootNode = false;\n    @Input() disableContextMenu = false;\n    @Output() folderSelected: EventEmitter<DriveFolder> = new EventEmitter();\n\n    // TODO: start trackBy function when it's fixed on angular material side\n    private subscriptions: Subscription[] = [];\n    public selectedFolderId$ = new BehaviorSubject<string>(null);\n    constructor(public tree: FoldersTreeService, private store: Store) {}\n\n    public selectFolder(folder?: DriveFolder) {\n        this.selectedFolderId$.next(folder.hash);\n        this.folderSelected.emit(folder);\n    }\n\n    public toggle() {\n        this.expanded = !this.expanded;\n    }\n\n    ngOnInit() {\n        const sub1 = this.store.select(DriveState.userFolders)\n            .pipe(filter(fs => !!fs))\n            .subscribe(folders => {\n                this.tree.data = folders;\n            });\n\n        const sub2 = this.store.select(DriveState.activePage).subscribe(page => {\n            this.selectedFolderId$.next(page.folderHash);\n        });\n\n        this.subscriptions.push(sub1, sub2);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\n","import {\n    ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofAction, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { DriveState } from '../../state/drive-state';\nimport { map, take } from 'rxjs/operators';\nimport { MoveEntries } from '../../state/actions/commands';\nimport { MoveEntriesFailed, MoveEntriesSuccess } from '../../state/actions/events';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { DriveFolder } from '../../folders/models/driveFolder';\n\n@Component({\n    selector: 'move-entries-dialog',\n    templateUrl: './move-entries-dialog.component.html',\n    styleUrls: ['./move-entries-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MoveEntriesDialogComponent implements OnInit, OnDestroy {\n    @Select(DriveState.selectedEntries) selectedEntries$: Observable<DriveEntry[]>;\n    public destination$ = new BehaviorSubject<DriveFolder>(this.store.selectSnapshot(DriveState.activePage).folder);\n    public loading$ = new BehaviorSubject<boolean>(false);\n    private subscriptions: Subscription[] = [];\n    public canMove$ = this.destination$.pipe(map(destination => {\n        const movingEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n        return DriveState.canMoveEntriesTo(movingEntries, destination);\n    }));\n\n    constructor(\n        protected dialogRef: MatDialogRef<MoveEntriesDialogComponent>,\n        protected store: Store,\n        protected actions: Actions,\n    ) {}\n\n    ngOnInit() {\n        const failure = this.actions.pipe(ofAction(MoveEntriesFailed)).subscribe(() => {\n            this.loading$.next(false);\n        });\n        const success = this.actions.pipe(ofAction(MoveEntriesSuccess), take(1))\n            .subscribe(() => {\n                this.close();\n            });\n        this.subscriptions.push(...[success, failure]);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        this.store.dispatch(new MoveEntries(this.destination$.value))\n            .subscribe(() => {\n                this.loading$.next(false);\n            });\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Move items</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content>\n        <folders-tree\n            [expanded]=\"true\"\n            [disableContextMenu]=\"true\"\n            [showRootNode]=\"true\"\n            (folderSelected)=\"destination$.next($event)\"\n        ></folders-tree>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"!(canMove$ | async) || (loading$ | async)\" trans>Move</button>\n    </mat-dialog-actions>\n</form>\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Rename</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"entryName\" placeholder=\"Enter a name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Rename</button>\n    </mat-dialog-actions>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorResponse } from '@common/core/types/backend-error-response';\nimport { DriveState } from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { finalize } from 'rxjs/operators';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { EntryRenamed } from '../../state/actions/events';\n\nexport interface RenameEntryDialogErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'rename-entry-dialog',\n    templateUrl: './rename-entry-dialog.component.html',\n    styleUrls: ['./rename-entry-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RenameEntryDialogComponent implements OnInit {\n    public entryName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: RenameEntryDialogErrors = {};\n    public entry: DriveEntry;\n\n    constructor(\n        private dialogRef: MatDialogRef<RenameEntryDialogComponent>,\n        private store: Store,\n        private toast: Toast,\n        private entriesApi: DriveEntryApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.entry = this.store.selectSnapshot(DriveState.selectedEntries)[0];\n        this.entryName.setValue(this.entry.name);\n    }\n\n    public confirm() {\n        const newName = this.entryName.value;\n\n        // entry name was not changed\n        if (newName === this.entry.name) {\n            return this.close();\n        }\n\n        this.loading.next(true);\n\n        return this.entriesApi.update(this.entry.id, {name: newName})\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(() => {\n                this.setErrors();\n                this.store.dispatch(new EntryRenamed(this.entry, newName));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<RenameEntryDialogErrors>) {\n        this.loading.next(false);\n        this.errors = response ? response.errors : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import {\r\n    AddStar,\r\n    CopySelectedEntries,\r\n    DeleteSelectedEntries,\r\n    DownloadEntries,\r\n    OpenDialog,\r\n    OpenFilePreview,\r\n    RemoveStar\r\n} from '../../state/actions/commands';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { MoveEntriesDialogComponent } from '../../entries/move-entries-dialog/move-entries-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { DriveState } from '../../state/drive-state';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EntryActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent));\r\n            },\r\n            visible: () => this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => !this.multipleEntriesSelected && this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Add a star',\r\n            icon: 'star',\r\n            execute: () => {\r\n                this.store.dispatch(new AddStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => !this.allStarred\r\n        },\r\n        {\r\n            viewName: 'Remove star',\r\n            icon: 'star-border',\r\n            execute: () => {\r\n                this.store.dispatch(new RemoveStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => this.allStarred\r\n        },\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            separatorBefore: this.store.selectSnapshot(DriveState.isMobile),\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(CrupdateFolderDialogComponent, {folder: this.getSelectedFolder()}));\r\n            },\r\n            visible: () => this.hasPermission('files.create')\r\n        },\r\n        {\r\n            viewName: 'Upload Files',\r\n            icon: 'cloud-upload',\r\n            execute: () => {\r\n                this.openUploadWindow('file');\r\n            },\r\n            visible: () => this.hasPermission('files.create') && this.store.selectSnapshot(DriveState.isMobile),\r\n        },\r\n        {\r\n            viewName: 'Upload Folder',\r\n            icon: 'upload-folder-custom',\r\n            execute: () => {\r\n                this.openUploadWindow('directory');\r\n            },\r\n            visible: () => this.hasPermission('files.create') && this.store.selectSnapshot(DriveState.isMobile),\r\n        },\r\n        {\r\n            viewName: 'Move to',\r\n            icon: 'subdirectory-arrow-right',\r\n            separatorBefore: this.store.selectSnapshot(DriveState.isMobile),\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(MoveEntriesDialogComponent, null, {panelClass: 'move-entries-dialog-container'}));\r\n            },\r\n            visible: () => this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.hasPermission('files.update');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.download'),\r\n        },\r\n        {\r\n            viewName: 'Delete',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            separatorBefore: true,\r\n            execute: () => {\r\n                this.store.dispatch(new DeleteSelectedEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.delete'),\r\n        },\r\n    ];\r\n}\r\n","import { Store } from '@ngxs/store';\r\nimport { DriveState } from '../state/drive-state';\r\nimport { DriveContextAction } from './types/drive-context-action';\r\nimport { Injectable } from '@angular/core';\r\nimport { WorkspacesService } from '../../../common/workspaces/workspaces.service';\r\nimport { OpenUploadWindow } from '../state/actions/commands';\r\nimport { CurrentUser } from '../../../common/auth/current-user';\r\nimport { DriveFolder } from '../folders/models/driveFolder';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport abstract class DriveContextActions {\r\n    protected multipleEntriesSelected: boolean;\r\n    protected allStarred: boolean;\r\n    protected onlyFoldersSelected: boolean;\r\n\r\n    protected abstract actions: DriveContextAction[];\r\n\r\n    constructor(\r\n        protected store: Store,\r\n        protected workspaces: WorkspacesService,\r\n        protected currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    public getActions() {\r\n        this.updateStatus();\r\n        return this.actions;\r\n    }\r\n\r\n    protected getSelectedEntries() {\r\n        return this.store.selectSnapshot(DriveState.selectedEntries);\r\n    }\r\n\r\n    protected updateStatus() {\r\n        this.multipleEntriesSelected = this.store.selectSnapshot(DriveState.multipleEntriesSelected);\r\n        this.allStarred = this.store.selectSnapshot(DriveState.allSelectedEntriesStarred);\r\n        this.onlyFoldersSelected = this.store.selectSnapshot(DriveState.onlyFoldersSelected);\r\n    }\r\n\r\n    protected hasPermission(permission: string): boolean {\r\n        if (permission === 'files.create') {\r\n            const activeFolder = this.store.selectSnapshot(DriveState.activePage).folder;\r\n\r\n            // upload either to the folder user right clicked on or the folder that is currently open\r\n            const target = (!this.multipleEntriesSelected && this.getSelectedFolder()) || activeFolder;\r\n            return (target?.permissions || [])['files.update'];\r\n        } else {\r\n            return this.getSelectedEntries().every(entry => {\r\n                return entry.permissions[permission];\r\n            });\r\n        }\r\n    }\r\n\r\n    protected getSelectedFolder(): DriveFolder {\r\n        return this.getSelectedEntries().find(f => f.type === 'folder') as DriveFolder;\r\n    }\r\n\r\n    protected openUploadWindow(type: 'file'|'directory') {\r\n        this.store.dispatch(new OpenUploadWindow(type));\r\n    }\r\n}\r\n","import { OpenDialog, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FolderActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(CrupdateFolderDialogComponent));\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n        {\r\n            viewName: 'Upload Files',\r\n            icon: 'cloud-upload',\r\n            separatorBefore: true,\r\n            execute: () => {\r\n                this.openUploadWindow('file');\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n        {\r\n            viewName: 'Upload Folder',\r\n            icon: 'upload-folder-custom',\r\n            execute: () => {\r\n                this.openUploadWindow('directory');\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n    ];\r\n}\r\n","import { DeleteTrashedEntriesForever, OpenConfirmDialog, RestoreTrashedEntries, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Restore',\r\n            icon: 'restore',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new RestoreTrashedEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Delete Forever',\r\n            icon: 'delete-forever',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.deleteForever();\r\n            },\r\n            visible: () => this.hasPermission('files.delete'),\r\n        },\r\n    ];\r\n\r\n    public deleteForever() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Delete Forever',\r\n            body: 'This will permanently delete selected items.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Delete Forever',\r\n        }, new DeleteTrashedEntriesForever()));\r\n    }\r\n}\r\n","import {\r\n    CopySelectedEntries, DownloadEntries, OpenDialog, OpenFilePreview, RemoveEntries,\r\n} from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { Store } from '@ngxs/store';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { SharesApiService } from '../../sharing/shares-api.service';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SharesActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent));\r\n            },\r\n            visible: () => {\r\n                return this.hasPermission('files.update');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.hasPermission('files.update');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.hasPermission('files.update');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => {\r\n                return this.hasPermission('files.download') && this.hasPermission('files.create');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: () => {\r\n                return this.hasPermission('files.download');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Remove',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                const entries = this.getSelectedEntries();\r\n                this.shares.detachUser(\r\n                    this.currentUser.get('id'),\r\n                    entries.map(e => e.id),\r\n                ).subscribe(() => {\r\n                    this.store.dispatch(new RemoveEntries(entries));\r\n                });\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    constructor(\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser,\r\n        protected shares: SharesApiService,\r\n        protected workspaces: WorkspacesService\r\n    ) {\r\n        super(store, workspaces, currentUser);\r\n    }\r\n}\r\n","import { EmptyTrash, OpenConfirmDialog, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashPageActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Empty Trash',\r\n            icon: 'delete-forever',\r\n            execute: () => {\r\n                this.emptyTrash();\r\n            },\r\n            visible: () => this.hasPermission('files.delete'),\r\n        },\r\n    ];\r\n\r\n    public emptyTrash() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Empty Trash',\r\n            body: 'All files and folders in your trash will be permanently deleted.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Empty Trash'\r\n        }, new EmptyTrash()));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveDomCacheService {\n    public scrollCont: HTMLElement;\n    public filesCont: HTMLElement;\n    public filesContRect: ClientRect;\n    public scrollContRect: ClientRect;\n    public dragPreview: HTMLElement;\n}\n","export const SEARCH_FILE_TYPES = [\r\n    {name: 'Folders', type: 'folder'},\r\n    {name: 'Images', type: 'image'},\r\n    {name: 'Text documents', type: 'text'},\r\n    {name: 'Video', type: 'video'},\r\n    {name: 'Audio', type: 'audio'},\r\n    {name: 'PDFs', type: 'pdf'},\r\n];\r\n","export interface PaginationResponse<T> {\r\n    data: T[];\r\n    from: number;\r\n    to: number;\r\n    total: number;\r\n    per_page: number;\r\n    current_page: number;\r\n    last_page: number;\r\n    path: string;\r\n    next_page_url: string|null;\r\n    prev_page_url: string|null;\r\n}\r\n\r\nexport const EMPTY_PAGINATION_RESPONSE = {\r\n    pagination: {data: []}\r\n};\r\n","<form class=\"input-container\" (ngSubmit)=\"openSearchPage({query: formControl.value})\">\n    <input type=\"text\" [matAutocomplete]=\"auto\" [formControl]=\"formControl\" placeholder=\"Search files and folders...\" #trigger trans-placeholder>\n    <button type=\"button\" mat-icon-button class=\"search-icon\">\n        <mat-icon svgIcon=\"search\"></mat-icon>\n    </button>\n    <button type=\"button\" mat-icon-button class=\"cancel-icon\" *ngIf=\"formControl.value\" (click)=\"resetForm()\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</form>\n\n<mat-autocomplete #auto=\"matAutocomplete\" class=\"file-types-autocomplete mat-elevation-z1\" (optionSelected)=\"executeAction($event)\" [displayWith]=\"displayFn\">\n    <ng-container *ngFor=\"let result of results$ | async\">\n        <mat-option [value]=\"result\">\n            <file-icon [type]=\"result.content.type\"></file-icon>\n            <div class=\"meta\">\n                <div class=\"name\">{{ result.type === 'entryType' ? (result.content.name | trans) : result.content.name}}</div>\n                <div class=\"owner\" *ngIf=\"result.content.users\">{{result.content.users[0]?.display_name}}</div>\n            </div>\n            <div class=\"date\" *ngIf=\"result.content.updated_at\">{{result.content.updated_at | formattedDate}}</div>\n        </mat-option>\n    </ng-container>\n</mat-autocomplete>\n","import {\n    ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SEARCH_FILE_TYPES } from '../search-file-types';\nimport {\n    MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger\n} from '@angular/material/autocomplete';\nimport { Store } from '@ngxs/store';\nimport { OpenSearchPage } from '../../state/actions/commands';\nimport { debounceTime, distinctUntilChanged, filter, switchMap } from 'rxjs/operators';\nimport {\n    DriveEntriesPaginationResponse, DriveEntryApiService\n} from '../../drive-entry-api.service';\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { EntryDoubleTapped } from '../../state/actions/events';\nimport { EMPTY_PAGINATION_RESPONSE } from '@common/core/types/pagination/pagination-response';\n\ninterface SearchResult {\n    type: 'entry'|'entryType';\n    content: DriveEntry|{name: string, type: string};\n}\n\n@Component({\n    selector: 'main-searchbar',\n    templateUrl: './main-searchbar.component.html',\n    styleUrls: ['./main-searchbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainSearchbarComponent implements OnInit {\n    @ViewChild('trigger', { read: MatAutocompleteTrigger }) trigger: MatAutocompleteTrigger;\n    @ViewChild('trigger', { read: ElementRef }) input: ElementRef<HTMLInputElement>;\n    @ViewChild('auto') autocomplete: MatAutocomplete;\n    private defaultResults: SearchResult[] = [];\n    public formControl = new FormControl();\n    public results$: BehaviorSubject<SearchResult[]> = new BehaviorSubject([]);\n    private lastQuery: string;\n\n    constructor(\n        private store: Store,\n        private driveApi: DriveEntryApiService,\n    ) {\n        this.setDefaultResults();\n    }\n\n    ngOnInit() {\n        this.formControl.valueChanges.pipe(\n            debounceTime(300),\n            distinctUntilChanged(),\n            filter(q => typeof q === 'string'),\n            switchMap(query => this.search(query))\n        ).subscribe(response => {\n            this.results$.next((response.data || []).map(entry => {\n                return {type: 'entry', content: entry} as SearchResult;\n            }));\n        });\n    }\n\n    public executeAction(e: MatAutocompleteSelectedEvent) {\n        const value = e.option.value as SearchResult;\n\n        if (value.type === 'entryType') {\n            this.openSearchPage({type: value.content.type});\n            this.resetForm();\n        } else {\n            this.store.dispatch(new EntryDoubleTapped(value.content as DriveEntry));\n        }\n\n        this.closePanelAndBlur();\n    }\n\n    public openSearchPage(params: {type?: string, query?: string}) {\n        this.store.dispatch(new OpenSearchPage(params)).subscribe(() => {\n            this.closePanelAndBlur();\n        });\n    }\n\n    private search(query: string): Observable<DriveEntriesPaginationResponse> {\n        this.lastQuery = query;\n        if ( ! query || query.length < 3) {\n            return observableOf(EMPTY_PAGINATION_RESPONSE) as any;\n        }\n        return this.driveApi.getCurrentUserEntries({query, per_page: 8});\n    }\n\n    private setDefaultResults() {\n        this.defaultResults = SEARCH_FILE_TYPES.map(entryType => {\n            return {type: 'entryType', content: entryType} as SearchResult;\n        });\n\n        this.results$.next(this.defaultResults);\n    }\n\n    public resetForm() {\n        this.formControl.reset();\n        this.setDefaultResults();\n        this.lastQuery = null;\n    }\n\n    private closePanelAndBlur() {\n        this.trigger.closePanel();\n        this.input.nativeElement.blur();\n    }\n\n    displayFn = () => {\n        // always show original user query when\n        // clicking on any autocomplete option\n        return this.lastQuery || '';\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { Select, Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { UploadedFile } from '@common/uploads/uploaded-file';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\n\n@Component({\n    selector: 'sidebar-action-buttons',\n    templateUrl: './sidebar-action-buttons.component.html',\n    styleUrls: ['./sidebar-action-buttons.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarActionButtonsComponent {\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n\n    constructor(\n        private dialog: Modal,\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) public uploadInputConfig: UploadInputConfig,\n    ) {}\n\n    public openNewFolderDialog() {\n        this.dialog.open(CrupdateFolderDialogComponent);\n    }\n\n    public openUploadsPanel(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n}\n","<button mat-raised-button color=\"accent\" class=\"upload-button\" [disabled]=\"!(canUpload$ | async)\" [uploadButton]=\"uploadInputConfig\" (filesSelected)=\"openUploadsPanel($event)\">\n    <mat-icon svgIcon=\"cloud-upload\"></mat-icon>\n    <span trans>Upload</span>\n</button>\n\n<button mat-raised-button color=\"accent\" class=\"new-folder-button\" [disabled]=\"!(canUpload$ | async)\" (click)=\"openNewFolderDialog()\">\n    <mat-icon svgIcon=\"create-new-folder\"></mat-icon>\n</button>\n","import {animate, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const SKELETON_ANIMATIONS = [\r\n    trigger('fadeIn', [\r\n        transition(':enter', [\r\n            style({opacity: 0}),\r\n            animate('325ms ease-in', style({\r\n                opacity: 1,\r\n            }))\r\n        ])\r\n    ]),\r\n    trigger('fadeOut', [\r\n        transition(':leave', [\r\n            style({opacity: 1, position: 'absolute', left: '0', right: '0'}),\r\n            animate('325ms ease-out', style({\r\n                opacity: 0\r\n            }))\r\n        ])\r\n    ])\r\n];\r\n","<mat-progress-bar mode=\"determinate\" color=\"accent\" [value]=\"spaceUsedPercent$ | async\"></mat-progress-bar>\r\n\r\n<div class=\"usage-info\" *ngIf=\"(spaceUsed$ | async) !== null; else skeleton\" @fadeIn>\r\n    {{spaceUsed$ | async | formattedFileSize}} {{'of' | trans}} {{spaceAvailable$ | async | formattedFileSize }} {{'used' | trans}}\r\n</div>\r\n<ng-template #skeleton>\r\n    <skeleton class=\"usage-info\" @fadeOut></skeleton>\r\n</ng-template>\r\n\r\n\r\n<div *ngIf=\"settings.get('billing.enable') && (!(workspaces.activeId$ | async) || (workspaces.activeWorkspace$ | async)?.currentUser?.is_owner)\">\r\n    <a class=\"upgrade-link\" mat-button routerLink=\"/billing/upgrade\" target=\"_blank\" trans>Upgrade Storage</a>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { Settings } from '@common/core/config/settings.service';\nimport { SKELETON_ANIMATIONS } from '../../../../common/core/ui/skeleton/skeleton-animations';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\n\n@Component({\n    selector: 'available-space-indicator',\n    templateUrl: './available-space-indicator.component.html',\n    styleUrls: ['./available-space-indicator.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [SKELETON_ANIMATIONS],\n})\nexport class AvailableSpaceIndicatorComponent {\n    @Select(DriveState.userSpaceUsed) spaceUsed$: Observable<number>;\n    @Select(DriveState.userSpaceAvailable) spaceAvailable$: Observable<number>;\n    @Select(DriveState.spaceUsedPercent) spaceUsedPercent$: Observable<number>;\n\n    constructor(public settings: Settings, public workspaces: WorkspacesService) {}\n}\n","<div [matMenuTriggerFor]=\"workspaceMenu\" *ngIf=\"workspaces.activeWorkspace$ | async as selected\">\n    <div class=\"left\">\n        <div class=\"role-name\">{{selected.name}}</div>\n        <div class=\"member-count\">\n            <span *ngIf=\"selected.default\" trans>Personal workspace</span>\n            <span *ngIf=\"!selected.default\" trans>{{ ':count members' | trans:{count: selected?.members_count || 0} }}</span>\n        </div>\n    </div>\n    <div class=\"right\">\n        <mat-icon svgIcon=\"unfold-more\"></mat-icon>\n    </div>\n</div>\n\n<mat-menu #workspaceMenu=\"matMenu\" class=\"workspace-menu\">\n    <div mat-menu-item class=\"workspace-menu-item\" [class.active]=\"(workspaces.activeId$ | async) === workspace.id\" *ngFor=\"let workspace of workspaces.available$ | async\" (click)=\"selectWorkspace(workspace)\">\n        <mat-icon svgIcon=\"check\" [class.visually-hidden]=\"(workspaces.activeId$ | async) !== workspace.id\"></mat-icon>\n        <div>\n            <div class=\"name\">{{workspace.name}}</div>\n            <div class=\"member-count\">\n                <span *ngIf=\"workspace.default\" trans>Personal workspace</span>\n                <span *ngIf=\"!workspace.default\" trans>{{ ':count members' | trans:{count: workspace?.members_count || 0} }}</span>\n            </div>\n        </div>\n        <button type=\"button\" class=\"settings-button\" mat-icon-button *ngIf=\"!workspace.default\" (click)=\"openWorkspaceMembersModal(workspace); $event.stopPropagation()\">\n            <mat-icon svgIcon=\"settings\"></mat-icon>\n        </button>\n    </div>\n    <div mat-menu-item class=\"new-workspace-menu-item\" (click)=\"openCrupdateWorkspaceModal()\" *ngIf=\"currentUser.hasPermission('workspaces.create')\">\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Create new workspace</span>\n    </div>\n</mat-menu>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Workspace } from '../types/workspace';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { WorkspacesService } from '../workspaces.service';\nimport { Modal } from '../../core/ui/dialogs/modal.service';\nimport { CurrentUser } from '../../auth/current-user';\nimport { BackendErrorResponse } from '../../core/types/backend-error-response';\nimport { HttpErrors } from '../../core/http/errors/http-errors.enum';\nimport { ConfirmModalComponent } from '../../core/ui/confirm-modal/confirm-modal.component';\nimport { filter } from 'rxjs/operators';\nimport { DELETE_RESOURCE_MESSAGE } from '../../datatable/delete-resource-message';\nimport { Toast } from '../../core/ui/toast.service';\n\n@Component({\n    selector: 'workspace-selector',\n    templateUrl: './workspace-selector.component.html',\n    styleUrls: ['./workspace-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WorkspaceSelectorComponent implements OnInit {\n    @ViewChild(MatMenuTrigger) menuTrigger: MatMenuTrigger;\n\n    constructor(\n        private modal: Modal,\n        public workspaces: WorkspacesService,\n        public currentUser: CurrentUser,\n        private toast: Toast,\n        private vcr: ViewContainerRef,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.workspaces.index({userId: this.currentUser.get('id'), withCount: ['members']})\n            .subscribe();\n    }\n\n    public openCrupdateWorkspaceModal(workspace?: Workspace) {\n        import('src/common/workspaces/workspace.module')\n            .then(m => {\n                // will have wrong WorkspacesService instance without passing viewContainerRef\n                this.modal.open(m.WorkspaceModule.components.crupdateModal, {workspace}, {viewContainerRef: this.vcr});\n                this.cd.markForCheck();\n            });\n    }\n\n    public openWorkspaceMembersModal(workspace: Workspace) {\n        import('src/common/workspaces/workspace.module')\n            .then(m => {\n                this.modal.open(m.WorkspaceModule.components.manageMembers, {workspace}, {viewContainerRef: this.vcr});\n                this.cd.markForCheck();\n                this.menuTrigger.closeMenu();\n            });\n\n    }\n\n    public maybeDeleteWorkspace(workspace: Workspace) {\n        const data = {...DELETE_RESOURCE_MESSAGE, replacements: {resource: 'workspace'}};\n        this.modal.open(ConfirmModalComponent, data)\n            .afterClosed()\n            .pipe(filter(confirmed => confirmed))\n            .subscribe(() => {\n                this.workspaces.delete([workspace.id]).subscribe(() => {\n                    this.toast.open('Workspace deleted.');\n                }, (errResponse: BackendErrorResponse) => {\n                    this.toast.open(errResponse.message || HttpErrors.Default);\n                });\n            });\n    }\n\n    public selectWorkspace(workspace: Workspace) {\n        this.workspaces.select(workspace.id);\n        this.menuTrigger.closeMenu();\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { DriveUrlsService } from '../drive-urls.service';\nimport { DriveState } from '../state/drive-state';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { OpenFolder } from '../state/actions/commands';\nimport { DrivePage } from '../state/models/drive-page';\nimport { DriveFolder } from '../folders/models/driveFolder';\n\n@Component({\n    selector: 'sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarComponent {\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n    @Select(DriveState.rootFolder) rootFolder$: Observable<DriveFolder>;\n\n    constructor(\n        public urls: DriveUrlsService,\n        private store: Store\n    ) {}\n\n    public openFolder(folder: DriveFolder) {\n        this.store.dispatch(new OpenFolder(folder));\n    }\n}\n","<div class=\"sidebar-body\">\r\n    <sidebar-action-buttons></sidebar-action-buttons>\r\n\r\n    <div class=\"drive-folders\">\r\n        <div class=\"sidebar-menu-item\" [routerLink]=\"urls.driveRoot()\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" [folderDropTarget]=\"rootFolder$ | async\">\r\n            <mat-icon svgIcon=\"arrow-drop-down\" class=\"toggle-expansion-icon\" [class.expanded]=\"driveTree.expanded\" (click)=\"driveTree.toggle(); $event.stopPropagation()\"></mat-icon>\r\n            <mat-icon svgIcon=\"network-drive-custom\"></mat-icon>\r\n            <span class=\"text\" trans>All Files</span>\r\n        </div>\r\n        <folders-tree (folderSelected)=\"openFolder($event)\" #driveTree></folders-tree>\r\n    </div>\r\n\r\n    <custom-menu class=\"sidebar-menu\" position=\"drive-sidebar\" itemClass=\"sidebar-menu-item\"></custom-menu>\r\n\r\n    <div class=\"usage-container\">\r\n        <mat-icon svgIcon=\"storage\"></mat-icon>\r\n        <available-space-indicator></available-space-indicator>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"sidebar-footer\">\r\n    <workspace-selector></workspace-selector>\r\n</div>\r\n\r\n\r\n","<ng-container *ngIf=\"entry$ | async as entry\">\n    <ng-container *ngIf=\"savingDescription$ | async; else descriptionSaved\">\n        <span trans>Saving...</span>\n    </ng-container>\n    <ng-template #descriptionSaved>\n        <div class=\"input-container\" *ngIf=\"editingDescription$ | async; else descriptionEl\">\n            <label for=\"description\" class=\"hidden\" trans>Description</label>\n            <textarea\n                    rows=\"4\"\n                    id=\"description\"\n                    #textArea\n                    [value]=\"entry.description\"\n                    (enterKeybind)=\"textArea.blur()\"\n                    (blur)=\"updateDescription(entry, textArea.value)\"\n            ></textarea>\n        </div>\n        <ng-template #descriptionEl>\n            <div class=\"description-text\" (click)=\"editDescription()\">{{entry.description || ('Add a description' | trans)}}</div>\n            <button mat-icon-button (click)=\"editDescription()\" [matTooltip]=\"'Edit description' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n        </ng-template>\n    </ng-template>\n</ng-container>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { UpdateEntryDescription } from '../../../state/actions/commands';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../../state/drive-state';\nimport { DriveEntry } from '../../../files/models/drive-entry';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'entry-description-panel',\n    templateUrl: './entry-description-panel.component.html',\n    styleUrls: ['./entry-description-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDescriptionPanelComponent implements AfterViewInit {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @ViewChildren('textArea') textArea: QueryList<ElementRef<HTMLTextAreaElement>>;\n    public editingDescription$ = new BehaviorSubject(false);\n    public savingDescription$ = new BehaviorSubject(false);\n\n    constructor(private store: Store) {}\n\n    public ngAfterViewInit() {\n        this.textArea.changes.subscribe(queryList => {\n            queryList.length && queryList.first.nativeElement.focus();\n        });\n    }\n\n    public editDescription() {\n        this.editingDescription$.next(true);\n    }\n\n    public updateDescription(entry: FileEntry, value: string) {\n        this.editingDescription$.next(false);\n        if (entry.description === value) return;\n        this.savingDescription$.next(true);\n        this.store.dispatch(new UpdateEntryDescription(entry, value))\n            .pipe(finalize(() => this.savingDescription$.next(false)))\n            .subscribe();\n    }\n}\n","<img [src]=\"getPreviewUrl()\"\r\n     *ngIf=\"file.type === 'image'\"\r\n     [ngClass]=\"file.type+'-file'\"\r\n     class=\"file-color\"\r\n     draggable=\"false\">\r\n\r\n<file-icon *ngIf=\"file.type !== 'image'\" [type]=\"file.type === 'folder' ? getFolderIcon() : file.type\"></file-icon>","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'file-thumbnail',\n    templateUrl: './file-thumbnail.component.html',\n    styleUrls: ['./file-thumbnail.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileThumbnailComponent {\n    @Input() file: DriveEntry;\n\n    public getPreviewUrl(): string {\n        let url = this.file.url;\n        if (this.file.thumbnail) {\n            const separator = url.includes('?') ? '&' : '?';\n            url += separator + 'thumbnail=true';\n        }\n        return url;\n    }\n\n    public getFolderIcon() {\n        if (this.file.users && this.file.users.length > 1) {\n            return 'shared-folder';\n        } else {\n            return 'folder';\n        }\n    }\n}\n","<ng-container *ngIf=\"entry$ | async as entry; else nothingSelected\">\n    <ng-container *ngIf=\"entry.updated_at; else nothingSelected\">\n        <file-thumbnail *ngIf=\"entry.type === 'image'\" class=\"preview\" [file]=\"entry\"></file-thumbnail>\n        <div class=\"users-list\">\n            <mat-icon class=\"users-list-img workspace-img\" svgIcon=\"groups\" *ngIf=\"entry.workspace_id\" [matTooltip]=\"'Everyone at :workspace workspace' | trans:{workspace: (workspaces.activeWorkspace$ | async)?.name}\"></mat-icon>\n            <img class=\"users-list-img\" *ngFor=\"let user of entry.users\" [src]=\"user.avatar\" [matTooltip]=\"user.display_name\">\n        </div>\n        <div class=\"details-list\">\n            <div class=\"item\">\n                <div class=\"name\" trans>Type</div>\n                <div class=\"value type-value\" trans>{{entry.type}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Size</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Storage Used</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item location-item\">\n                <div class=\"name\" trans>Location</div>\n                <div class=\"value\" (click)=\"openLocation()\">\n                    <mat-icon svgIcon=\"folder\"></mat-icon>\n                    <span class=\"text\">{{(parent$ | async)?.name || ('All Files') | trans}}</span>\n                </div>\n            </div>\n            <div class=\"item\" *ngIf=\"entry.users && entry.users.length\">\n                <div class=\"name\" trans>Owner</div>\n                <div class=\"value\">{{entry.users[0].display_name}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Last Updated</div>\n                <div class=\"value\">{{entry.updated_at | formattedDate}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Created</div>\n                <div class=\"value\">{{entry.created_at | formattedDate}}</div>\n            </div>\n            <entry-description-panel></entry-description-panel>\n        </div>\n    </ng-container>\n</ng-container>\n\n<ng-template #nothingSelected>\n    <div class=\"nothing-selected\">\n        <mat-icon svgIcon=\"selection-tool-custom\" class=\"icon\"></mat-icon>\n        <div class=\"text\" trans>Select file or folder to view its details.</div>\n    </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OpenFolder } from '../../state/actions/commands';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\n\n@Component({\n    selector: 'details-panel',\n    templateUrl: './details-panel.component.html',\n    styleUrls: ['./details-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsPanelComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.selectedEntryParent) parent$: Observable<DriveFolder>;\n\n    constructor(\n        private store: Store,\n        public workspaces: WorkspacesService,\n    ) {}\n\n    public openLocation() {\n        const parent = this.store.selectSnapshot(DriveState.selectedEntryParent);\n        this.store.dispatch(new OpenFolder(parent));\n    }\n}\n","<div class=\"header\">\n    <div class=\"title\">\n        <ng-container *ngIf=\"entry$ | async as entry; else defaultTitle\">\n            <ng-container *ngIf=\"entry.type; else defaultTitle\">\n                <file-icon [type]=\"entry.type\"></file-icon>\n                <div class=\"name\">{{entry.name}}</div>\n            </ng-container>\n        </ng-container>\n        <ng-template #defaultTitle>\n            <file-icon type=\"folder\"></file-icon>\n            <div class=\"name\">{{ ((activePage$ | async)?.viewName) | trans }}</div>\n        </ng-template>\n        <button mat-icon-button class=\"close-button\" (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n<details-panel></details-panel>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState} from '../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { ToggleDetailsSidebar } from '../state/actions/commands';\nimport { DrivePage } from '../state/models/drive-page';\n\n@Component({\n    selector: 'details-sidebar',\n    templateUrl: './details-sidebar.component.html',\n    styleUrls: ['./details-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsSidebarComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    constructor(private store: Store) {}\n\n    public close() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n}\n","import {\n    ContentChildren, Directive, ElementRef, NgZone, OnDestroy, OnInit, QueryList\n} from '@angular/core';\nimport { FilesGridItemComponent } from '../files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { Store } from '@ngxs/store';\nimport { EntryDoubleTapped, EntryTapped } from '../state/actions/events';\nimport { DragEntryService } from './drag-entry.service';\nimport { DeselectAllEntries, SelectEntries } from '../state/actions/commands';\nimport { DriveState } from '../state/drive-state';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { FilesDragSelectService } from './files-drag-select.service';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[driveHammerInteractions]'\n})\nexport class DriveHammerInteractionsDirective implements OnInit, OnDestroy {\n    @ContentChildren(FilesGridItemComponent, {descendants: true}) gridItems: QueryList<FilesGridItemComponent>;\n\n    private hammerManager: HammerManager;\n    private panService: FilesDragSelectService|DragEntryService|null;\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private zone: NgZone,\n        private el: ElementRef,\n        private store: Store,\n        private dragSelect: FilesDragSelectService,\n        private dragEntry: DragEntryService,\n        private domCache: DriveDomCacheService,\n    ) {}\n\n    ngOnInit() {\n        this.bindToHammer();\n\n        // disable \"pan\" on mobile as it will prevent scrolling\n        const sub = this.store.select(DriveState.isMobile).subscribe(isMobile => {\n            this.hammerManager.get('pan').set({\n                enable: !isMobile\n            });\n            this.hammerManager.get('doubletap').set({\n                enable: !isMobile\n            });\n        });\n\n        this.subscriptions.push(sub);\n    }\n\n    ngOnDestroy() {\n        this.dragSelect.removeSelectBox();\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n    private bindToHammer() {\n        this.createHammerManager();\n        this.onPanStart();\n        this.onPan();\n        this.onPanEnd();\n        this.onTap();\n        this.onDoubleTap();\n    }\n\n    private createHammerManager() {\n        this.zone.runOutsideAngular(() => {\n            this.hammerManager = new Hammer.Manager(this.domCache.filesCont);\n\n            const tap = new Hammer.Tap(),\n                pan = new Hammer.Pan(),\n                doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2 });\n\n            this.hammerManager.add([tap, doubleTap, pan]);\n            this.hammerManager.get('doubletap').recognizeWith('tap');\n        });\n    }\n\n    private onPanStart() {\n        this.hammerManager.on('panstart', e => {\n            const gridElement = this.getEntryEl(e);\n\n            if (gridElement) {\n                this.panService = this.dragEntry;\n                const entry = this.getEntryByEl(gridElement),\n                    selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n\n                // select entry, if not already selected\n                if ( ! selectedEntries.find(en => en.id === entry.id)) {\n                    this.store.dispatch(new SelectEntries([this.getEntryByEl(gridElement)]));\n                }\n            } else {\n                this.panService = this.dragSelect;\n            }\n\n            this.panService.start(e);\n        });\n    }\n\n    private onPan() {\n        this.hammerManager.on('pan', e => {\n            if (this.panService) this.panService.move(e);\n        });\n    }\n\n    private onPanEnd() {\n        this.hammerManager.on('panend', () => {\n            if (this.panService) this.panService.end();\n        });\n    }\n\n    private onTap() {\n        this.hammerManager.on('tap', e => {\n            const entryEl = this.getEntryEl(e);\n            this.dragSelect.removeSelectBox();\n\n            if (entryEl) {\n                this.store.dispatch(new EntryTapped(this.getEntryByEl(entryEl), e.srcEvent.ctrlKey || e.srcEvent.metaKey));\n            } else if (e.target.closest('.files-container')) {\n                this.store.dispatch(new DeselectAllEntries());\n            }\n        });\n    }\n\n    private onDoubleTap() {\n        this.hammerManager.on('doubletap', e => {\n            const gridElement = this.getEntryEl(e);\n            if ( ! gridElement) return;\n\n            this.store.dispatch(new EntryDoubleTapped(\n                this.getEntryByEl(gridElement)\n            ));\n        });\n    }\n\n    private getEntryEl(e: HammerInput) {\n        return e.target.closest('.drive-entry') as HTMLElement;\n    }\n\n    private getEntryByEl(el: HTMLElement): DriveEntry {\n        const id = +el.dataset.id;\n        return this.store.selectSnapshot(DriveState.entries)\n            .find(curr => curr.id === +id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Store } from '@ngxs/store';\nimport { StoppedDragging } from '../state/actions/events';\nimport { StartedDragging } from '../state/actions/events';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DragEntryService {\n    constructor(\n        private domCache: DriveDomCacheService,\n        private store: Store\n    ) {}\n\n    public start(e: HammerInput) {\n        this.store.dispatch(new StartedDragging());\n    }\n\n    public move(e: HammerInput) {\n        this.domCache.dragPreview.style.top = e.center.y + 'px';\n        this.domCache.dragPreview.style.left = e.center.x + 'px';\n    }\n\n    public end() {\n        this.store.dispatch(new StoppedDragging());\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { EntriesSelectedViaDrag } from '../state/actions/events';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveDomCacheService } from './drive-dom-cache.service';\r\nimport { DriveState } from '../state/drive-state';\r\n\r\nconst GRID_ITEM_SELECTOR = '.drive-entry';\r\n\r\ntype AreaEdge = 'top'|'left'|'right'|'bottom'|false;\r\n\r\ninterface SelectorRect extends ClientRect {\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FilesDragSelectService {\r\n    private selectBox: HTMLDivElement;\r\n    private initial = {x: 0, y: 0, scrollTop: 0};\r\n    private lastPanEvent: HammerInput|null;\r\n    private scrollListener: EventListener;\r\n    private gridElements: HTMLElement[];\r\n\r\n    constructor(\r\n        private store: Store,\r\n        private cache: DriveDomCacheService,\r\n    ) {}\r\n\r\n    public start(e: HammerInput) {\r\n        this.cacheClientRects();\r\n        this.createSelectBox();\r\n        this.bindScroll();\r\n        this.gridElements = this.getGridElements();\r\n\r\n        this.initial = {\r\n            ...this.hammerToRelative(e),\r\n            scrollTop: this.cache.scrollCont.scrollTop,\r\n        };\r\n\r\n        this.selectBox.style.top = this.initial.y + 'px';\r\n        this.selectBox.style.left = this.initial.x + 'px';\r\n\r\n\r\n    }\r\n\r\n    public move(e: HammerInput) {\r\n        this.lastPanEvent = e;\r\n        this.resizeBox(e);\r\n    }\r\n\r\n    public end() {\r\n        this.removeSelectBox();\r\n        this.dispatchSelectedAction();\r\n        this.unbindScroll();\r\n        this.gridElements = [];\r\n    }\r\n\r\n    public resizeBox(e?: HammerInput|null) {\r\n        if ( ! e) e = this.lastPanEvent;\r\n        if ( ! e || ! this.selectBox) return;\r\n        const newPos = this.getNewSelectorPosition(e);\r\n        this.scrollAndRepositionSelector(newPos);\r\n        this.selectIntersectingElements();\r\n    }\r\n\r\n    /**\r\n     * Calculate new position of selector box.\r\n     */\r\n    private getNewSelectorPosition(e: HammerInput): SelectorRect {\r\n        const current = this.hammerToRelative(e);\r\n\r\n        let tmp,\r\n            x1 = this.initial.x,\r\n            y1 = this.initial.y,\r\n            x2 = current.x,\r\n            y2 = current.y;\r\n\r\n        if (x1 > x2) { tmp = x2; x2 = x1; x1 = tmp; }\r\n        if (y1 > y2) { tmp = y2; y2 = y1; y1 = tmp; }\r\n\r\n        return {\r\n            width: x2 - x1,\r\n            height: y2 - y1,\r\n            top: y1,\r\n            right: x1 + (x2 - x1), // left + width\r\n            bottom: y1 + (y2 - y1), // top + height\r\n            left: x1,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Check if specified position intersects any container edge.\r\n     */\r\n    private reachedAreaEdge(newPos: ClientRect): AreaEdge {\r\n        const area = this.rectToRelative(this.cache.filesContRect);\r\n\r\n        if (newPos.left <= area.left) {\r\n            return 'left';\r\n        } else if (newPos.top <= area.top) {\r\n            return 'top';\r\n        } else if (newPos.right >= area.right) {\r\n            return 'right';\r\n        } else if (newPos.bottom >= area.bottom) {\r\n            return 'bottom';\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Auto scroll container (if needed) and reposition selector box.\r\n     */\r\n    private scrollAndRepositionSelector(newPos: SelectorRect) {\r\n        const area = this.cache.scrollCont,\r\n            edge = this.reachedAreaEdge(newPos);\r\n\r\n        // make sure top always starts at the same coordinates\r\n        // regardless of any scrolling done during dragging\r\n        newPos.top += this.initial.scrollTop;\r\n\r\n        // auto scroll when cursor reaches container edge\r\n        if (edge === 'bottom') {\r\n            area.scrollBy({top: 4});\r\n        } else if (edge === 'top') {\r\n            area.scrollBy({top: -4});\r\n        }\r\n\r\n        // scroll diff between drag start and now (auto scroll or mouse wheel)\r\n        const scrollDiff = this.cache.scrollCont.scrollTop - this.initial.scrollTop,\r\n            scrollValue = Math.abs(scrollDiff);\r\n\r\n        // top needs to be changed only if scroll direction is top\r\n        if (scrollDiff < 0) {\r\n            newPos.top -= scrollValue;\r\n        }\r\n\r\n        // height needs to be changed regardless of direction and method\r\n        newPos.height += scrollValue;\r\n\r\n        // check if we have reached bottom edge again, after scroll values are applied\r\n        const reachedBottom = (newPos.top + newPos.height) >= this.cache.scrollCont.scrollHeight;\r\n\r\n        // if any select area edge is reached, bail\r\n        if (edge === 'left' || edge === 'right' || reachedBottom) return;\r\n\r\n        // finally, reposition select box with scroll values applied\r\n        this.applyPosition(newPos);\r\n    }\r\n\r\n    /**\r\n     * Apply specified position to selector box.\r\n     */\r\n    private applyPosition(newPos: ClientRect) {\r\n        this.selectBox.style.width = newPos.width + 'px';\r\n        this.selectBox.style.height = newPos.height + 'px';\r\n        this.selectBox.style.left = newPos.left + 'px';\r\n        this.selectBox.style.top = newPos.top + 'px';\r\n    }\r\n\r\n    private selectIntersectingElements() {\r\n        const selectedBoxRect = this.selectBox.getBoundingClientRect();\r\n        this.gridElements.forEach((gridItem: HTMLElement) => {\r\n            const rect = gridItem.getBoundingClientRect();\r\n\r\n            // item intersects the select box\r\n            if (rect.top + rect.height > selectedBoxRect.top\r\n                && rect.left + rect.width > selectedBoxRect.left\r\n                && rect.bottom - rect.height < selectedBoxRect.bottom\r\n                && rect.right - rect.width < selectedBoxRect.right) {\r\n                gridItem.classList.add('selected');\r\n            } else {\r\n                gridItem.classList.remove('selected');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Transform absolute container client rect into relative.\r\n     */\r\n    private rectToRelative(rect: ClientRect): ClientRect {\r\n        return {\r\n            width: rect.width,\r\n            height: rect.height,\r\n            left: rect.left - this.cache.filesContRect.left,\r\n            top: rect.top - this.cache.filesContRect.top,\r\n            right: rect.right - this.cache.filesContRect.left,\r\n            bottom: rect.bottom - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Transform hammer absolute event to relative coordinates.\r\n     */\r\n    private hammerToRelative(e: HammerInput) {\r\n        return {\r\n            x: e.center.x - this.cache.filesContRect.left,\r\n            y: e.center.y - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    private dispatchSelectedAction() {\r\n        const ids = this.gridElements\r\n            .filter(el => el.classList.contains('selected'))\r\n            .map(el => +el.dataset.id);\r\n\r\n        const entries = this.store.selectSnapshot(DriveState.entries)\r\n            .filter(entry => ids.indexOf(entry.id) > -1);\r\n\r\n        this.store.dispatch(new EntriesSelectedViaDrag(entries));\r\n    }\r\n\r\n    private createSelectBox() {\r\n        this.selectBox = document.createElement('div');\r\n        this.selectBox.classList.add('files-select-box');\r\n        this.cache.filesCont.appendChild(this.selectBox);\r\n    }\r\n\r\n    public removeSelectBox() {\r\n        if ( ! this.selectBox) return;\r\n        this.selectBox.remove();\r\n        this.selectBox = null;\r\n    }\r\n\r\n    public dragging() {\r\n        return !!this.selectBox;\r\n    }\r\n\r\n    private cacheClientRects() {\r\n        this.cache.filesContRect = this.cache.filesCont.getBoundingClientRect();\r\n        this.cache.scrollContRect = this.cache.scrollCont.getBoundingClientRect();\r\n    }\r\n\r\n    private getGridElements(): HTMLElement[] {\r\n        return Array.from(this.cache.filesCont.querySelectorAll(GRID_ITEM_SELECTOR));\r\n    }\r\n\r\n    private bindScroll() {\r\n        this.scrollListener = () => this.resizeBox();\r\n        this.cache.scrollCont.addEventListener('scroll', this.scrollListener);\r\n    }\r\n\r\n    private unbindScroll() {\r\n        this.cache.scrollCont.removeEventListener('scroll', this.scrollListener);\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';\nimport { DriveEntry } from '../../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid-item',\n    templateUrl: './files-grid-item.component.html',\n    styleUrls: ['./files-grid-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridItemComponent {\n    @HostBinding('class.drive-entry') driveEntry = true;\n    @Input() entry: DriveEntry;\n\n    @HostBinding('attr.data-id') get fileId() {\n        return this.entry.id;\n    }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { Observable } from 'rxjs';\n\n@Directive({\n    selector: '[toggleSelectedClass]'\n})\nexport class ToggleSelectedClassDirective implements AfterViewInit {\n    @Select(DriveState.selectedEntryIds) selectedEntryIds: Observable<number[]>;\n\n    constructor(private el: ElementRef) {}\n\n    ngAfterViewInit() {\n        this.selectedEntryIds.subscribe(ids => {\n            const els = this.el.nativeElement.querySelectorAll('.drive-entry');\n            if ( ! els.length) return;\n\n            Array.from(els).forEach((el: HTMLElement) => {\n                const selected = ids.indexOf(parseInt(el.dataset.id, 10)) > -1;\n\n                if (selected) {\n                    el.classList.add('selected');\n                } else {\n                    el.classList.remove('selected');\n                }\n            });\n        });\n    }\n}\n","<div class=\"preview-container\">\n    <file-thumbnail class=\"preview\" [file]=\"entry\"></file-thumbnail>\n</div>\n<figcaption class=\"files-grid-item-footer\">\n    <file-icon [type]=\"entry.type\"></file-icon>\n    <div class=\"text\">{{entry.name}}</div>\n</figcaption>\n","import { UploadedFile } from '../uploaded-file';\r\n\r\nexport async function readUploadedFolders(entries: WebKitEntry[]): Promise<UploadedFile[]> {\r\n    let files = [];\r\n\r\n    for (const key in entries) {\r\n        const entry = entries[key];\r\n\r\n        if ( ! entry.isDirectory) {\r\n            files.push(await transformFileEntry(entry as WebKitFileEntry));\r\n        } else {\r\n            files = files.concat(await readDirRecursive(entry as WebKitDirectoryEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nasync function readDirRecursive(entry: WebKitDirectoryEntry, files = []) {\r\n    const entries = await readEntries(entry);\r\n\r\n    for (const key in entries) {\r\n        const childEntry = entries[key];\r\n\r\n        if (childEntry.isDirectory) {\r\n            await readDirRecursive(childEntry as WebKitDirectoryEntry, files);\r\n        } else {\r\n            files.push(await transformFileEntry(childEntry as WebKitFileEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nfunction readEntries(dir: WebKitDirectoryEntry): Promise<WebKitEntry[]> {\r\n    return new Promise(resolve => {\r\n        const reader = dir.createReader();\r\n        reader.readEntries(entries => resolve(entries as any));\r\n    });\r\n}\r\n\r\nfunction transformFileEntry(entry: WebKitFileEntry) {\r\n    return new Promise(resolve => {\r\n        entry.file((file: any) => {\r\n            resolve(new UploadedFile(file as File, entry.fullPath));\r\n        });\r\n    });\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { readUploadedFolders } from '../utils/read-uploaded-folders';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\n\r\n@Directive({\r\n    selector: '[fileDropzone]',\r\n})\r\nexport class UploadDropzoneDirective implements OnInit, OnDestroy {\r\n    @Input() disableDropzoneClick = false;\r\n    @Input() disableDropzone = false;\r\n    @Input() clickButton: ElementRef;\r\n    @Input('fileDropzone') uploadConfig: UploadInputConfig = {};\r\n    @Output() filesDropped: EventEmitter<UploadedFile[]> = new EventEmitter();\r\n\r\n    constructor(protected el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        const el = this.el.nativeElement;\r\n        el.addEventListener('dragenter', (e) => this.handleDragEnter(e));\r\n        el.addEventListener('dragover', (e) => this.handleDragOver(e));\r\n        el.addEventListener('dragleave', (e) => this.handleDragLeave(e));\r\n        el.addEventListener('drop', (e) => this.handleDrop(e));\r\n\r\n        if ( ! this.disableDropzoneClick) {\r\n            const trigger = this.clickButton ? this.clickButton.nativeElement : el;\r\n            trigger.addEventListener('click', () => this.handleClick());\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    protected handleClick() {\r\n        if (this.disableDropzone) return;\r\n        openUploadWindow(this.uploadConfig).then(files => {\r\n            this.emitUploadEvent(files);\r\n        });\r\n    }\r\n\r\n    public handleDragEnter(e) {\r\n        if (this.dropzoneDisabled(e)) return;\r\n        this.el.nativeElement.classList.add('file-over-dropzone');\r\n    }\r\n\r\n    public handleDragOver(e) {\r\n        if (e.preventDefault) e.preventDefault();\r\n        e.dataTransfer.dropEffect = this.dropzoneDisabled(e) ? 'none' : 'move';\r\n        return false;\r\n    }\r\n\r\n    public handleDragLeave(e: MouseEvent) {\r\n        const newEl = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (this.el.nativeElement.contains(newEl)) return;\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    public async handleDrop(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.removeClassesFromDropzone();\r\n        if (this.dropzoneDisabled(e) || !e.dataTransfer.items) return;\r\n\r\n        const items = Array.from(e.dataTransfer.items)\r\n            .filter((item: DataTransferItem) => item.kind === 'file')\r\n            .map((item: DataTransferItem) => {\r\n                return item.webkitGetAsEntry();\r\n            });\r\n\r\n        if (items.length) {\r\n            this.emitUploadEvent(await readUploadedFolders(items));\r\n        }\r\n    }\r\n\r\n    protected emitUploadEvent(files: UploadedFile[]) {\r\n        this.filesDropped.emit(files);\r\n    }\r\n\r\n    protected removeClassesFromDropzone() {\r\n        this.el.nativeElement.classList.remove('file-over-dropzone');\r\n    }\r\n\r\n    protected dropzoneDisabled(e: DragEvent) {\r\n        const hasFiles = e.dataTransfer.types.find(type => type.toLowerCase() === 'files');\r\n        return this.disableDropzone || ! hasFiles;\r\n    }\r\n}\r\n","import { Directive, ElementRef, NgZone } from '@angular/core';\nimport { LoadMoreEntries } from '../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { InfiniteScroll } from '@common/core/ui/infinite-scroll/infinite.scroll';\n\n@Directive({\n    selector: '[driveInfiniteScroll]'\n})\nexport class DriveInfiniteScrollDirective extends InfiniteScroll {\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n        protected zone: NgZone,\n    ) {\n        super();\n    }\n\n    protected loadMoreItems() {\n        const page = this.store.selectSnapshot(DriveState.currentPage) + 1;\n        this.store.dispatch(new LoadMoreEntries({page}));\n    }\n\n    protected isLoading(): boolean {\n        return this.store.selectSnapshot(DriveState.loading);\n    }\n\n    protected canLoadMore(): boolean {\n        return this.store.selectSnapshot(DriveState.canLoadMoreEntries);\n    }\n}\n","import {Directive, ElementRef, NgZone, OnDestroy, OnInit} from '@angular/core';\r\nimport {fromEvent, Subscription} from 'rxjs';\r\nimport {debounceTime} from 'rxjs/operators';\r\n\r\n@Directive()\r\nexport abstract class InfiniteScroll implements OnInit, OnDestroy {\r\n    protected scrollSub: Subscription;\r\n    protected el: ElementRef<HTMLElement|Document>;\r\n    protected abstract zone: NgZone;\r\n\r\n    public threshold: number | string = 50;\r\n\r\n    ngOnInit() {\r\n        if ( ! this.el) {\r\n            this.el = new ElementRef(document);\r\n        }\r\n        this.zone.runOutsideAngular(() => {\r\n            this.scrollSub = fromEvent(this.getScrollContainer(), 'scroll', {capture: true, passive: true})\r\n                .pipe(debounceTime(20))\r\n                .subscribe((e: Event) => this.onScroll(e.target as HTMLElement));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.scrollSub && this.scrollSub.unsubscribe();\r\n    }\r\n\r\n    protected getScrollContainer() {\r\n        return this.el ? this.el.nativeElement : document;\r\n    }\r\n\r\n    protected onScroll(target: HTMLElement) {\r\n        if (!target || (target !== this.el.nativeElement) || !this.canLoadMore() || this.isLoading()) return;\r\n\r\n        const offset = parseInt(this.threshold as string),\r\n            targetCanScroll = this.el && (typeof target.scrollTop !== 'undefined');\r\n\r\n        const currentScroll = targetCanScroll ?\r\n            target.scrollTop + target.offsetHeight :\r\n            window.scrollY + window.innerHeight;\r\n\r\n        const heightWithoutOffset = targetCanScroll ?\r\n            target.scrollHeight - offset :\r\n            document.documentElement.scrollHeight - offset;\r\n\r\n        if (currentScroll >= heightWithoutOffset) {\r\n            this.zone.run(() => {\r\n                this.loadMoreItems();\r\n            });\r\n        }\r\n    }\r\n\r\n    protected abstract loadMoreItems();\r\n\r\n    protected abstract canLoadMore(): boolean;\r\n\r\n    protected abstract isLoading(): boolean;\r\n}\r\n","import { ChangeDetectionStrategy, Component, HostBinding, Inject, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveEntry } from '../../../files/models/drive-entry';\r\nimport { CONTEXT_MENU_DATA } from '@common/core/ui/context-menu/context-menu-data';\r\nimport { EntryContextMenuOpened } from '../../../state/actions/events';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { DeselectAllEntries } from '../../../state/actions/commands';\r\n\r\nexport interface FileContextMenuData {\r\n    entry: DriveEntry;\r\n}\r\n\r\n@Component({\r\n    selector: 'drive-context-menu',\r\n    templateUrl: './drive-context-menu.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DriveContextMenuComponent {\r\n    @HostBinding('class.context-menu') contextMenu = true;\r\n\r\n    constructor(\r\n        @Optional() @Inject(CONTEXT_MENU_DATA) public data: FileContextMenuData,\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser\r\n    ) {\r\n        if (this.data && this.data.entry) {\r\n            this.store.dispatch(new EntryContextMenuOpened(this.data.entry));\r\n        } else {\r\n            this.store.dispatch(new DeselectAllEntries());\r\n        }\r\n    }\r\n}\r\n","<context-actions-container></context-actions-container>","<skeleton *ngIf=\"loading$ | async; else breadcrumbs\" @fadeOut></skeleton>\r\n<ng-template #breadcrumbs>\r\n    <div class=\"breadcrumb-container\" @fadeIn>\r\n        <ng-container *ngFor=\"let item of breadcrumb | async; last as last; first as first;\">\r\n            <div class=\"breadcrumb-item\" (click)=\"last ? openContextMenu(item, button) : openPage(item)\" [class.no-action]=\"!item.hasActions\" #button>\r\n                <span class=\"name\">{{first ? (item.viewName | trans) : item.viewName}}</span>\r\n                <mat-icon svgIcon=\"arrow-drop-down\" *ngIf=\"last && item.hasActions\"></mat-icon>\r\n            </div>\r\n            <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n        </ng-container>\r\n    </div>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { Translations } from '@common/core/translations/translations.service';\nimport {\n    ContextMenu, ContextMenuParams\n} from '@common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { distinctUntilChanged, filter, take } from 'rxjs/operators';\nimport { OpenFolder } from '../../state/actions/commands';\nimport {\n    DRIVE_PAGE_NAMES, DrivePage, FolderPage, SHARES_PAGE,\n} from '../../state/models/drive-page';\nimport { Navigate } from '@ngxs/router-plugin';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { SKELETON_ANIMATIONS } from '../../../../common/core/ui/skeleton/skeleton-animations';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\n\n@Component({\n    selector: 'entry-breadcrumbs',\n    templateUrl: './entry-breadcrumbs.component.html',\n    styleUrls: ['./entry-breadcrumbs.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [SKELETON_ANIMATIONS],\n})\nexport class EntryBreadcrumbsComponent implements OnInit, OnDestroy {\n    public breadcrumb: BehaviorSubject<DrivePage[]> = new BehaviorSubject([]);\n    public loading$ = new BehaviorSubject<boolean>(true);\n    private activePageSub: Subscription;\n\n    constructor(\n        private entriesApi: DriveEntryApiService,\n        private i18n: Translations,\n        private contextMenu: ContextMenu,\n        private store: Store,\n        private workspaces: WorkspacesService,\n    ) {}\n\n    ngOnInit() {\n        // wait until entries and user folders are loaded\n        combineLatest([\n            this.store.select(DriveState.meta),\n            this.store.select(DriveState.userFoldersLoaded),\n            this.workspaces.activeWorkspace$,\n        ]).pipe(\n            filter(([meta, foldersLoaded, workspace]) => meta.currentPage && foldersLoaded && !!workspace),\n            take(1)\n        ).subscribe(() => {\n            this.loading$.next(false);\n            this.bindToActivePage();\n        });\n    }\n\n    ngOnDestroy() {\n        this.activePageSub && this.activePageSub.unsubscribe();\n    }\n\n    public openPage(page: DrivePage) {\n        if (page.folder) {\n            this.store.dispatch(new OpenFolder(page.folder));\n        } else {\n            this.store.dispatch(new Navigate(['/drive/shares']));\n        }\n    }\n\n    public openContextMenu(item: DrivePage, origin: HTMLElement) {\n        let params = {originX: 'start', overlayX: 'start'} as ContextMenuParams;\n        switch (item.name) {\n            case DRIVE_PAGE_NAMES.TRASH:\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n            case DRIVE_PAGE_NAMES.FOLDER:\n                params = {data: {entry: this.store.selectSnapshot(DriveState.activeFolder)}, ...params};\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n        }\n    }\n\n    private generateBreadCrumb(page: DrivePage) {\n        const breadcrumbs = [this.getRootBreadcrumb(page)];\n\n        if (page.folder?.id) {\n            const folderPath = this.getBreadcrumbForFolder(page.folder);\n            breadcrumbs.push(...folderPath);\n        }\n        this.breadcrumb.next(breadcrumbs);\n    }\n\n    private getBreadcrumbForFolder(folder: DriveFolder) {\n        const allFolders = this.store.selectSnapshot(DriveState.flatFolders) || [];\n        const ids = (folder.path ? folder.path.split('/') : [folder.id]) as number[];\n        return ids.map(id => {\n            const pathFolder = folder.id === +id ? folder : allFolders.find(f => f.id === +id);\n            if (pathFolder) {\n                return new FolderPage(pathFolder);\n            }\n        }).filter(f => !!f);\n    }\n\n    private getRootBreadcrumb(page: DrivePage) {\n        if (page.name === DRIVE_PAGE_NAMES.FOLDER) {\n            const workspaceId = this.workspaces.activeId$.value;\n            const ROOT_FOLDER_PAGE = new FolderPage(this.store.selectSnapshot(DriveState.rootFolder));\n            if (workspaceId && page.folder.workspace_id === workspaceId) {\n                return {...ROOT_FOLDER_PAGE, viewName: this.workspaces.activeWorkspace$.value.name};\n            } else {\n                return !this.store.selectSnapshot(DriveState.userOwnsActiveFolder) ? SHARES_PAGE : ROOT_FOLDER_PAGE;\n            }\n        } else {\n            return page;\n        }\n    }\n\n    private bindToActivePage() {\n        this.activePageSub = combineLatest([\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.flatFolders),\n        ]).pipe(\n            distinctUntilChanged(),\n            filter(([activePage]) => {\n                // wait until folder data is fully loaded\n                return activePage.name === DRIVE_PAGE_NAMES.FOLDER ? activePage.folder?.name : true;\n            })\n        ).subscribe(([activePage]) => {\n            this.generateBreadCrumb(activePage);\n        });\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'drive-toolbar',\n    templateUrl: './drive-toolbar.component.html',\n    styleUrls: ['./drive-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DriveToolbarComponent {\n}\n","<entry-breadcrumbs></entry-breadcrumbs>\r\n","export const AVAILABLE_SORTS: DriveSortOption[] = [\r\n    {name: 'file_size', viewName: 'Size'},\r\n    {name: 'name', viewName: 'Name'},\r\n    {name: 'updated_at', viewName: 'Last Modified'},\r\n    {name: 'created_at', viewName: 'Upload Date'},\r\n    {name: 'type', viewName: 'Type'},\r\n    {name: 'extension', viewName: 'Extension'},\r\n];\r\n\r\nexport interface DriveSortOption {\r\n    name: SortColumn;\r\n    viewName: string;\r\n}\r\n\r\nexport type SortColumn = 'file_size' | 'name' | 'updated_at' | 'created_at' | 'type' | 'extension';\r\nexport type SortDirection = 'desc'|'asc';\r\n\r\nexport interface SortValue {\r\n    column: SortColumn;\r\n    direction: SortDirection;\r\n}\r\n","<ng-container *ngIf=\"sort$ | async as sortValue\">\n    <span class=\"label\" trans>Sort by</span>\n    <button class=\"no-style\" [matMenuTriggerFor]=\"menu\" [disabled]=\"btnDisabled\">\n        <span class=\"sort-button-content\">\n            <span>{{getSortViewName(sortValue.column) | trans}}</span>\n            <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"arrow-icon\"></mat-icon>\n        </span>\n        <mat-icon svgIcon=\"sort\" class=\"mobile-sort-button-content\"></mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" class=\"drive-sort-menu\">\n        <div class=\"title\" trans>Direction</div>\n        <button mat-menu-item (click)=\"changeDirection('asc')\" [class.active]=\"sortValue.direction === 'asc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Ascending</span>\n        </button>\n        <button mat-menu-item (click)=\"changeDirection('desc')\" [class.active]=\"sortValue.direction === 'desc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Descending</span>\n        </button>\n        <div class=\"separator\"></div>\n        <div class=\"title\" trans>Sort By</div>\n        <button mat-menu-item *ngFor=\"let sort of availableSorts\" (click)=\"changeSort(sort)\" [class.active]=\"sortValue.column === sort.name\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>{{sort.viewName}}</span>\n        </button>\n    </mat-menu>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { AVAILABLE_SORTS, DriveSortOption, SortColumn, SortDirection, SortValue } from '../../entries/available-sorts';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nconst DEFAULT_VALUE: SortValue = {column: 'updated_at', direction: 'desc'};\n\n@Component({\n    selector: 'entries-sort-button',\n    templateUrl: './entries-sort-button.component.html',\n    styleUrls: ['./entries-sort-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: EntriesSortButtonComponent,\n        multi: true,\n    }]\n})\nexport class EntriesSortButtonComponent implements ControlValueAccessor {\n    @Input() btnDisabled = false;\n    public availableSorts = AVAILABLE_SORTS;\n    public propagateChange: Function;\n\n    public sort$: BehaviorSubject<SortValue> = new BehaviorSubject(DEFAULT_VALUE);\n\n    public changeSort(column: DriveSortOption) {\n        this.sort$.next({...this.sort$.value, column: column.name});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public changeDirection(direction: SortDirection) {\n        this.sort$.next({...this.sort$.value, direction});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public getSortViewName(column: SortColumn): string {\n        return this.availableSorts.find(sort => sort.name === column).viewName;\n    }\n\n    public writeValue(value: SortValue) {\n        this.sort$.next(value || DEFAULT_VALUE);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n}\n","<ng-container *ngFor=\"let action of actions$ | async\">\n    <ng-container *ngIf=\"action.visible()\">\n        <div class=\"separator\" *ngIf=\"!compact && action.separatorBefore\"></div>\n\n        <button class=\"context-menu-item\" *ngIf=\"!compact\" (click)=\"action.execute()\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n            <span trans>{{action.viewName}}</span>\n        </button>\n\n        <button mat-icon-button (click)=\"action.execute()\" [matTooltip]=\"action.viewName | trans\" *ngIf=\"compact && action.showInCompact\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n        </button>\n    </ng-container>\n</ng-container>\n\n<button mat-icon-button (click)=\"openMoreActionsMenu()\" [matTooltip]=\"'More actions' | trans\" #moreActionsButton *ngIf=\"compact && hasMoreActions$ | async\">\n    <mat-icon svgIcon=\"more-vert\"></mat-icon>\n</button>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    Injector,\n    Input,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DriveState } from '../../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveContextAction } from '../../types/drive-context-action';\nimport { TrashActions } from '../../actions/trash-actions';\nimport { SharesActions } from '../../actions/shares-actions';\nimport { FolderActions } from '../../actions/folder-actions';\nimport { EntryActions } from '../../actions/entry-actions';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { DRIVE_PAGE_NAMES, DrivePage } from '../../../state/models/drive-page';\nimport { DriveContextMenuComponent } from '../drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { TrashPageActions } from '../../actions/trash-page-actions';\nimport { DriveEntry } from '../../../files/models/drive-entry';\n\n@Component({\n    selector: 'context-actions-container',\n    templateUrl: './context-actions-container.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContextActionsContainerComponent implements OnDestroy {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Input() @HostBinding('class.compact') compact = false;\n\n    // whether there are more actions to display in \"compact\" mode\n    public hasMoreActions$ = new BehaviorSubject(false);\n    public actions$: BehaviorSubject<DriveContextAction[]> = new BehaviorSubject([]);\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private injector: Injector,\n        private contextMenu: ContextMenu,\n    ) {\n        this.subscription = combineLatest([\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.selectedEntry),\n        ]).subscribe(combined => {\n            this.setActions(combined[0], combined[1]);\n            this.hasMoreActions$.next(this.actions$.value.some(action => !action.showInCompact));\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntryOrActiveFolder);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n\n    private setActions(activePage: DrivePage, selectedEntry: DriveEntry) {\n        // user clicked on \"trash\" page name in breadcrumb\n        if (activePage.name === DRIVE_PAGE_NAMES.TRASH && !selectedEntry) {\n            this.actions$.next(this.injector.get(TrashPageActions).getActions());\n\n        // context menu opened for selected entries while in \"trash\" or \"shares\" page\n        } else if (activePage.name === 'trash' && selectedEntry) {\n            this.actions$.next(this.injector.get(TrashActions).getActions());\n        } else if (activePage.name === 'shares' && selectedEntry) {\n            this.actions$.next(this.injector.get(SharesActions).getActions());\n\n        // context menu opened by clicking on empty space in folder view or clicking on root folder breadcrumb\n        } else if (activePage.folder && !selectedEntry?.id) {\n            this.actions$.next(this.injector.get(FolderActions).getActions());\n\n        // show entries context menu for \"starred\" page\n        } else if (activePage.name === 'starred' || activePage.name === 'recent') {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n\n        // default to entry actions if can't match to anything else\n        } else if (selectedEntry) {\n            this.setActionsForEntry();\n        } else {\n            this.actions$.next([]);\n        }\n    }\n\n    private setActionsForEntry() {\n        if (this.store.selectSnapshot(DriveState.userOwnsActiveFolder)) {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n        } else {\n            this.actions$.next(this.injector.get(SharesActions).getActions());\n        }\n    }\n}\n","import {\n    ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../state/actions/commands';\nimport { SortColumn, SortValue } from '../../entries/available-sorts';\nimport { DriveState } from '../../state/drive-state';\nimport { combineLatest, Observable } from 'rxjs';\nimport { DrivePage } from '../../state/models/drive-page';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'file-list-header',\n    templateUrl: './file-list-header.component.html',\n    styleUrls: ['./file-list-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListHeaderComponent implements OnInit {\n    @Select(DriveState.sortColumn) sortColumn$: Observable<SortColumn>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    public sortFormControl = new FormControl({\n        column: this.store.selectSnapshot(DriveState.sortColumn),\n        direction: this.store.selectSnapshot(DriveState.sortDirection),\n    });\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        combineLatest([\n            this.store.select(DriveState.sortColumn),\n            this.store.select(DriveState.sortDirection),\n        ]).subscribe(([column, direction]) => {\n            this.sortFormControl.setValue({column, direction}, {emitEvent: false});\n        });\n        this.sortFormControl.valueChanges.subscribe((sort: SortValue) => {\n            this.store.dispatch(new ReloadPageEntries(\n                {orderBy: sort.column, orderDir: sort.direction}\n            ));\n        });\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ToggleDetailsSidebar, SetViewMode } from '../../state/actions/commands';\n\n@Component({\n    selector: 'toolbar-actions',\n    templateUrl: './toolbar-actions.component.html',\n    styleUrls: ['./toolbar-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarActionsComponent {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Select(DriveState.anythingSelected) anythingSelected: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode: Observable<'list'|'grid'>;\n    @Select(DriveState.detailsOpen) activityOpen: Observable<boolean>;\n    @Select(DriveState.multipleEntriesSelected) multipleEntriesSelected$: Observable<boolean>;\n\n    constructor(\n        protected store: Store,\n        protected contextMenu: ContextMenu,\n    ) {}\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    public ToggleDetails() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntry);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n}\n","<context-actions-container [compact]=\"true\"></context-actions-container>\n\n<div class=\"always-visible-actions\">\n    <button mat-icon-button (click)=\"toggleViewMode()\">\n        <mat-icon [svgIcon]=\"(viewMode | async) === 'list' ? 'view-list' : 'view-module'\"></mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"ToggleDetails()\" [class.active]=\"activityOpen | async\">\n        <mat-icon svgIcon=\"info\"></mat-icon>\n    </button>\n</div>\n\n","<div class=\"sort-header\">\r\n   <entries-sort-button [btnDisabled]=\"(activePage$ | async)?.disableSort\" [formControl]=\"sortFormControl\"></entries-sort-button>\r\n</div>\r\n<toolbar-actions></toolbar-actions>","<material-navbar [showToggleButton]=\"(isMobile$ | async)\" (toggleButtonClick)=\"toggleSidebar()\" menuPosition=\"drive-navbar\">\n    <main-searchbar class=\"nav-searchbar\"></main-searchbar>\n</material-navbar>\n<mat-sidenav-container>\n    <mat-sidenav [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" [opened]=\"sidebarOpen$ | async\" class=\"left-sidebar\">\n        <sidebar></sidebar>\n    </mat-sidenav>\n    <mat-sidenav [opened]=\"activityOpen$ | async\" [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" position=\"end\" class=\"right-sidebar\">\n        <details-sidebar></details-sidebar>\n    </mat-sidenav>\n    <mat-sidenav-content driveHammerInteractions [class.has-rek]=\"settings.has('ads.drive')\">\n        <ad-host slot=\"ads.drive\"></ad-host>\n        <ng-container *ngIf=\"(activePage$ | async).name !== 'workspaces'\">\n            <drive-toolbar></drive-toolbar>\n            <file-list-header></file-list-header>\n        </ng-container>\n        <div class=\"loading-overlay-container\">\n            <div\n                class=\"files-container\"\n                #filesContainer\n                #scrollContainer\n                toggleSelectedClass\n                [class.dragging]=\"dragging | async\"\n                contextMenu=\"entry\"\n                [disableContextMenu]=\"!(canUpload$ | async)\"\n                fileDropzone\n                [disableDropzoneClick]=\"true\"\n                [disableDropzone]=\"!(canUpload$ | async)\"\n                driveInfiniteScroll\n                (filesDropped)=\"uploadFiles($event)\"\n            >\n                <router-outlet></router-outlet>\n            </div>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n\n<entry-drag-preview></entry-drag-preview>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from './state/drive-state';\nimport { DriveDomCacheService } from './interactions/drive-dom-cache.service';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n    LoadUserFolders,\n    LoadUserSpaceUsage,\n    ReloadPageEntries,\n    ResetState,\n    SetCurrentUser,\n    SetViewMode,\n    SetWorkspace,\n    ToggleSidebar,\n    UploadFiles\n} from './state/actions/commands';\nimport { UploadedFile } from '@common/uploads/uploaded-file';\nimport { Settings } from '@common/core/config/settings.service';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { BreakpointChanged, UserSpaceUsageChanged } from './state/actions/events';\nimport { VIEW_MODE_KEY } from './state/models/drive-state-model';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\nimport { User } from '@common/core/types/models/User';\nimport { WorkspacesService } from '../../common/workspaces/workspaces.service';\nimport { filter, skip } from 'rxjs/operators';\nimport { DrivePage, FolderPage } from './state/models/drive-page';\nimport { EntryActions } from './context-actions/actions/entry-actions';\nimport { FolderActions } from './context-actions/actions/folder-actions';\nimport { SharesActions } from './context-actions/actions/shares-actions';\nimport { TrashActions } from './context-actions/actions/trash-actions';\nimport { TrashPageActions } from './context-actions/actions/trash-page-actions';\nimport { ContextMenu } from '../../common/core/ui/context-menu/context-menu.service';\n\nconst actions = [EntryActions, FolderActions, SharesActions, TrashActions, TrashPageActions];\n\n@Component({\n    selector: 'drive',\n    templateUrl: './drive.component.html',\n    styleUrls: ['./drive.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n\n    // scope workspaces to drive component and make sure context menus get correct instance\n    providers: [...actions, ContextMenu, WorkspacesService],\n})\nexport class DriveComponent implements OnInit, OnDestroy {\n    @ViewChild('scrollContainer', { read: ElementRef, static: true }) scrollContainer: ElementRef;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef;\n    @ViewChild(EntryDragPreviewComponent, { read: ElementRef, static: true }) dragPreview: ElementRef;\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    @Select(DriveState.detailsOpen) activityOpen$: Observable<boolean>;\n    @Select(DriveState.sidebarOpen) sidebarOpen$: Observable<boolean>;\n    @Select(DriveState.loading) loading$: Observable<boolean>;\n    @Select(DriveState.isMobile) isMobile$: Observable<boolean>;\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private currentUser: CurrentUser,\n        private localStorage: LocalStorage,\n        private domCache: DriveDomCacheService,\n        private breakpoints: BreakpointObserver,\n        private workspaces: WorkspacesService,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.setViewMode();\n        this.cacheDemoElements();\n        this.observeBreakpointChanges();\n        this.bindToWorkspace();\n        this.store.dispatch(new LoadUserFolders());\n        this.store.dispatch(new LoadUserSpaceUsage());\n\n        // TODO: refactor this once auth is moved to it's own store\n        this.store.dispatch(new SetCurrentUser(this.currentUser.getModel() as User));\n        this.currentUser.model$.subscribe(user => {\n            this.store.dispatch(new SetCurrentUser(user as User));\n        });\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(ResetState);\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    public uploadFiles(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n\n    public toggleSidebar() {\n        this.store.dispatch(new ToggleSidebar());\n    }\n\n    private cacheDemoElements() {\n        this.domCache.filesCont = this.filesContainer.nativeElement;\n        this.domCache.scrollCont = this.scrollContainer.nativeElement;\n        this.domCache.dragPreview = this.dragPreview.nativeElement;\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n\n    private observeBreakpointChanges() {\n        const sub = this.breakpoints.observe('(max-width: 1100px)').subscribe(result => {\n            this.store.dispatch(new BreakpointChanged({isMobile: result.matches}));\n        });\n        this.subscriptions.push(sub);\n    }\n\n    private bindToWorkspace() {\n        // skip initially selected workspace\n        const sub1 = this.workspaces.activeId$.pipe(skip(1)).subscribe(() => {\n            this.store.dispatch([\n                new ReloadPageEntries({}, new FolderPage(this.store.selectSnapshot(DriveState.rootFolder))),\n                new UserSpaceUsageChanged(),\n                new LoadUserFolders()\n            ]);\n        });\n        const sub3 = this.workspaces.activeWorkspace$.pipe(filter(w => !!w))\n            .subscribe(workspace => {\n                this.store.dispatch(new SetWorkspace(workspace));\n            });\n        const sub2 = this.workspaces.bindToNotificationClick();\n        this.subscriptions.push(sub1, sub2, sub3);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Keycodes } from './keycodes.enum';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { DELETE } from '@angular/cdk/keycodes';\r\n\r\ninterface ParsedKeybind {\r\n    ctrl: boolean;\r\n    shift: boolean;\r\n    key: string;\r\n}\r\n\r\n// TODO: refactor so keybinds are stored for a specific \"listenOn\" element instead of globally\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Keybinds {\r\n    private bindings = [];\r\n\r\n    public add(keybind: string, callback: (e: KeyboardEvent) => void) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback});\r\n    }\r\n\r\n    public addWithPreventDefault(keybind: string, callback: Function) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback, preventDefault: true});\r\n    }\r\n\r\n    public listenOn(el: HTMLElement|Document): Subscription {\r\n        return fromEvent(el, 'keydown').subscribe((e: KeyboardEvent) => {\r\n            this.executeBindings(e);\r\n        });\r\n    }\r\n\r\n    private executeBindings(e: KeyboardEvent) {\r\n        this.bindings.forEach(binding => {\r\n            if ( ! this.bindingMatches(binding.keybind, e)) return;\r\n            if (binding.preventDefault && e.preventDefault) e.preventDefault();\r\n            binding.callback(e);\r\n        });\r\n    }\r\n\r\n    private bindingMatches(keybind: ParsedKeybind, e: KeyboardEvent) {\r\n        return Keycodes[keybind.key.toUpperCase()] === e.keyCode && e.ctrlKey === keybind.ctrl && e.shiftKey === keybind.shift;\r\n    }\r\n\r\n    /**\r\n     * Parse keybind string into object.\r\n     */\r\n    private parseKeybindString(keybind: string): ParsedKeybind {\r\n        const parts = keybind.trim().split('+');\r\n        const parsed = {ctrl: false, shift: false, key: ''};\r\n\r\n        parts.forEach(part => {\r\n            part = part.trim().toLowerCase();\r\n\r\n            if (part === 'ctrl') {\r\n                parsed.ctrl = true;\r\n            } else if (part === 'shift') {\r\n                parsed.shift = true;\r\n            } else {\r\n                parsed.key = part;\r\n            }\r\n        });\r\n\r\n        return parsed;\r\n    }\r\n}\r\n","export enum Keycodes {\r\n    ENTER = 13,\r\n    SPACE = 32,\r\n    ESCAPE = 27,\r\n    DELETE = 46,\r\n    ARROW_UP = 38,\r\n    ARROW_RIGHT = 39,\r\n    ARROW_DOWN = 40,\r\n    ARROW_LEFT = 37,\r\n    S = 83,\r\n    N = 78,\r\n    A = 65,\r\n    T = 84,\r\n    B = 66,\r\n    C = 67,\r\n    O = 79,\r\n    P = 80,\r\n    R = 82,\r\n    F = 70,\r\n    Y = 89,\r\n    Z = 90,\r\n}\r\n","<files-grid-item\r\n        *ngFor=\"let entry of entries; trackBy: trackById\"\r\n        [entry]=\"entry\"\r\n        [contextMenu]=\"{type: 'entry', entry: entry}\"\r\n        [disableContextMenu]=\"disableInteractions\"\r\n        [folderDropTarget]=\"entry\"\r\n></files-grid-item>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid',\n    templateUrl: './files-grid.component.html',\n    styleUrls: ['./files-grid.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridComponent {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","<table class=\"material-table\">\n    <thead>\n    <tr>\n        <th table-sort-header class=\"name-column\" trans>Name</th>\n        <th table-sort-header=\"updated_at\" class=\"last-updated-column\" trans>Last Updated</th>\n        <th table-sort-header=\"file_size\" class=\"size-column\" trans>Size</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let file of entries; trackBy: trackById\" class=\"drive-entry\" [contextMenu]=\"{type: 'entry', entry: file}\" [disableContextMenu]=\"disableInteractions\" [attr.data-id]=\"file.id\"  [folderDropTarget]=\"file\">\n        <td data-label=\"Name\" class=\"name-column\">\n            <div class=\"file-name-container\">\n                <file-thumbnail [file]=\"file\"></file-thumbnail>\n                <div class=\"file-name\">\n                    <span class=\"entry-name\">{{file.name}}</span>\n                    <mat-icon class=\"star-icon\" svgIcon=\"star\" *ngIf=\"isStarred(file)\" [matTooltip]=\"'Starred' | trans\"></mat-icon>\n                </div>\n            </div>\n        </td>\n        <td data-label=\"Last Updated\" class=\"last-updated-column\">{{file.updated_at | formattedDate}}</td>\n        <td data-label=\"Size\" class=\"size-column\">{{file.file_size | formattedFileSize}}</td>\n    </tr>\n    </tbody>\n</table>\n","import {\n    ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit\n} from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\nimport { Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../../state/actions/commands';\nimport { DatatableService } from '@common/datatable/datatable.service';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'files-list',\n    templateUrl: './files-list.component.html',\n    styleUrls: ['./files-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class FilesListComponent implements OnInit, OnDestroy {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n\n    constructor(private store: Store, private datatable: DatatableService<DriveEntry>) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            disableSort: this.disableInteractions,\n        });\n\n        this.datatable.sort$\n            .pipe(filter(v => !!Object.keys(v).length))\n            .subscribe(value => {\n                this.store.dispatch(new ReloadPageEntries(value as any));\n            });\n    }\n\n    ngOnDestroy() {\n        this.datatable.destroy();\n    }\n\n    public isStarred(entry: DriveEntry): boolean {\n        if ( ! entry.tags) return false;\n        return !!entry.tags.find(tag => tag.name === 'starred');\n    }\n\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-search-entries',\n    templateUrl: './no-search-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSearchEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-shared-entries',\n    templateUrl: './no-shared-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSharedEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-starred-entries',\n    templateUrl: './no-starred-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoStarredEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-trashed-entries',\n    templateUrl: './no-trashed-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoTrashedEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-recent-entries',\n    templateUrl: './no-recent-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoRecentEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-folder-entries',\n    templateUrl: './no-folder-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoFolderEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef, AfterViewInit, Inject } from '@angular/core';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\nimport { Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { openUploadWindow } from '@common/uploads/utils/open-upload-window';\n\n@Component({\n    selector: 'upload-dropzone',\n    templateUrl: './upload-dropzone.component.html',\n    styleUrls: ['./upload-dropzone.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadDropzoneComponent implements AfterViewInit {\n    @ViewChild('clickTarget', { static: true }) clickTarget: ElementRef;\n\n    constructor (\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadConfig: UploadInputConfig,\n    ) {}\n\n    ngAfterViewInit() {\n        this.clickTarget.nativeElement.addEventListener('click', () => {\n            openUploadWindow(this.uploadConfig).then(files => {\n                this.store.dispatch(new UploadFiles(files));\n            });\n        });\n    }\n}\n","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>No recent entries.</div>\r\n    <div class=\"secondary\" trans>You have not uploaded any files or folders yet.</div>\r\n    <mat-icon svgIcon=\"recent-custom\" class=\"icon\"></mat-icon>\r\n</div>","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Trash is empty.</div>\r\n    <div class=\"secondary\" trans>There are no files or folders in your trash currently.</div>\r\n    <mat-icon svgIcon=\"trash-custom\" class=\"icon\"></mat-icon>\r\n</div>","<div class=\"no-results-message\">\n    <div class=\"main\" trans>Nothing is starred.</div>\n    <div class=\"secondary\" trans>Add stars to files and folders that you want to easily find later.</div>\n    <mat-icon svgIcon=\"add-star-custom\" class=\"icon\"></mat-icon>\n</div>","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Shared with me.</div>\r\n    <div class=\"secondary\" trans>Files and folders other people have shared with you.</div>\r\n    <mat-icon svgIcon=\"share-custom\" class=\"icon\"></mat-icon>\r\n</div>","<div class=\"no-results-message\">\n    <div class=\"main\" trans>No matches found.</div>\n    <div class=\"secondary\" trans>Try another search with different query or file type.</div>\n    <mat-icon svgIcon=\"search-custom\" class=\"icon\"></mat-icon>\n</div>","<div class=\"animation-circle\"></div>\n<div class=\"content-circle\" #clickTarget>\n    <mat-icon class=\"main-icon\" svgIcon=\"upload-custom\"></mat-icon>\n    <div class=\"text initial-text\">\n        <div class=\"primary\" trans>Drop files or folders here</div>\n        <div class=\"secondary\" trans>or click to upload.</div>\n    </div>\n</div>","<upload-dropzone></upload-dropzone>","<files-grid [entries]=\"entries$ | async\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n<ng-template #filesList>\r\n    <files-list [entries]=\"entries$ | async\"></files-list>\r\n</ng-template>\r\n\r\n<ng-container [ngSwitch]=\"activePageName$ | async\" *ngIf=\"noEntries | async\">\r\n    <no-recent-entries *ngSwitchCase=\"'recent'\"></no-recent-entries>\r\n    <no-trashed-entries *ngSwitchCase=\"'trash'\"></no-trashed-entries>\r\n    <no-starred-entries *ngSwitchCase=\"'starred'\"></no-starred-entries>\r\n    <no-shared-entries *ngSwitchCase=\"'shares'\"></no-shared-entries>\r\n    <no-search-entries *ngSwitchCase=\"'search'\"></no-search-entries>\r\n    <no-folder-entries *ngSwitchDefault></no-folder-entries>\r\n</ng-container>","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { Observable, Subscription } from 'rxjs';\nimport { DrivePageType } from '../../state/models/available-pages';\nimport { Keybinds } from '@common/core/keybinds/keybinds.service';\nimport {\n    DeleteSelectedEntries,\n    DeleteTrashedEntriesForever,\n    OpenConfirmDialog,\n    SelectAllEntries\n} from '../../state/actions/commands';\nimport { EntryDoubleTapped } from '../../state/actions/events';\nimport { DRIVE_PAGE_NAMES } from '../../state/models/drive-page';\n\n@Component({\n    selector: 'entries-container',\n    templateUrl: './entries-container.component.html',\n    styleUrls: ['./entries-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Keybinds],\n})\nexport class EntriesContainerComponent implements OnInit, OnDestroy {\n    @HostBinding('attr.tabindex') tabindex = 0;\n    @Select(DriveState.entries) entries$: Observable<DriveEntry[]>;\n    @Select(DriveState.entriesEmpty) noEntries: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n    @Select(DriveState.activePageName) activePageName$: Observable<DrivePageType>;\n    private keybindSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private keybinds: Keybinds,\n    ) {}\n\n    ngOnInit() {\n        this.keybindSub = this.keybinds.listenOn(this.el.nativeElement);\n        this.keybinds.addWithPreventDefault('ctrl+a', () => {\n            this.store.dispatch(new SelectAllEntries());\n        });\n        this.keybinds.addWithPreventDefault('delete', () => {\n            if (this.store.selectSnapshot(DriveState.activePageName) === DRIVE_PAGE_NAMES.TRASH) {\n                this.store.dispatch(new OpenConfirmDialog({\n                    title: 'Delete Forever',\n                    body: 'This will permanently delete selected items.',\n                    bodyBold: 'This action can not be undone.',\n                    ok: 'Delete Forever',\n                }, new DeleteTrashedEntriesForever()));\n            } else {\n                this.store.dispatch(new DeleteSelectedEntries());\n            }\n        });\n        this.keybinds.addWithPreventDefault('enter', () => {\n            this.store.dispatch(new EntryDoubleTapped(this.store.selectSnapshot(DriveState.selectedEntry)));\n        });\n    }\n\n    ngOnDestroy() {\n        this.keybindSub.unsubscribe();\n    }\n}\n","import { EventEmitter, HostBinding, Inject, Directive } from '@angular/core';\r\nimport { CURRENT_PREVIEW_FILE } from './current-preview-file';\r\nimport { FileEntry } from '../uploads/types/file-entry';\r\nimport { PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer } from './preview-url-transformer';\r\nimport { Settings } from '../core/config/settings.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AppHttpClient } from '../core/http/app-http-client.service';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { CurrentUser } from '../auth/current-user';\r\n\r\n@Directive()\nexport abstract class BaseFilePreview {\r\n    @HostBinding('class.file-preview-wrapper') filePreviewWrapper = true;\r\n    public download = new EventEmitter();\r\n\r\n    constructor(\r\n        @Inject(CURRENT_PREVIEW_FILE) protected file: FileEntry,\r\n        @Inject(PREVIEW_URL_TRANSFORMER) protected transformer: PreviewUrlTransformer,\r\n        protected settings: Settings,\r\n        protected http: AppHttpClient,\r\n        protected sanitizer: DomSanitizer,\r\n        protected currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    public getSrc(): string {\r\n        return this.transformer(this.file);\r\n    }\r\n\r\n    public getSafeSrc(): SafeResourceUrl {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.getSrc());\r\n    }\r\n\r\n    public getContents(): Observable<string> {\r\n        return this.http.get(this.getSrc(), null, {responseType: 'text'});\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CURRENT_PREVIEW_FILE = new InjectionToken<any>('CURRENT_PREVIEW_FILE');\r\n","import { InjectionToken } from '@angular/core';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\n\r\nexport type PreviewUrlTransformer = (entry: FileEntry) => string;\r\n\r\nexport const PREVIEW_URL_TRANSFORMER = new InjectionToken<PreviewUrlTransformer>('PREVIEW_URL_TRANSFORMER', {\r\n    factory: () => {\r\n        return entry => entry.url;\r\n    },\r\n    providedIn: 'root',\r\n});\r\n","<div class=\"panel preview-object\">\r\n    <div class=\"message\" trans>{{getMessage()}}</div>\r\n    <button mat-raised-button color=\"accent\" (click)=\"download.emit()\" *ngIf=\"download.observers.length\" trans>Download</button>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'default-preview',\r\n    templateUrl: './default-preview.component.html',\r\n    styleUrls: ['./default-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DefaultPreviewComponent extends BaseFilePreview {\r\n    @Input() message: string;\r\n\r\n    public getMessage() {\r\n        return this.message || 'No file preview available.';\r\n    }\r\n}\r\n","<default-preview *ngIf=\"fileTooLarge$ | async; else textPreview\" message=\"This file is too large to preview.\"></default-preview>\r\n<ng-template #textPreview>\r\n    <div class=\"text-wrapper preview-object\">\r\n        <pre>{{ content$ | async }}</pre>\r\n    </div>\r\n</ng-template>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\nconst FIVE_MB = 5242880;\r\n\r\n@Component({\r\n    selector: 'text-preview',\r\n    templateUrl: './text-preview.component.html',\r\n    styleUrls: ['./text-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextPreviewComponent extends BaseFilePreview implements OnInit {\r\n    public content$ = new BehaviorSubject('');\r\n    public fileTooLarge$ = new BehaviorSubject(false);\r\n\r\n    ngOnInit() {\r\n        if (this.file.file_size > FIVE_MB) {\r\n            this.fileTooLarge$.next(true);\r\n        } else {\r\n            this.loadFileContents();\r\n        }\r\n    }\r\n\r\n    private loadFileContents() {\r\n        this.getContents()\r\n            .subscribe(content => {\r\n                this.content$.next(content);\r\n            });\r\n    }\r\n}\r\n","<audio #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></audio>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'audio-preview',\r\n    templateUrl: './audio-preview.component.html',\r\n    styleUrls: ['./audio-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AudioPreviewComponent extends BaseFilePreview implements OnInit {\r\n    @ViewChild('playerEl', { static: true }) playerEl: ElementRef;\r\n    public invalidMedia = false;\r\n\r\n    ngOnInit() {\r\n        this.invalidMedia = !this.canPlayVideo();\r\n\r\n        if ( ! this.invalidMedia) {\r\n            this.player().src = this.getSrc();\r\n            this.player().play();\r\n        }\r\n    }\r\n\r\n    protected canPlayVideo(): boolean {\r\n        return !!this.player().canPlayType(this.file.mime);\r\n    }\r\n\r\n    protected player() {\r\n        return this.playerEl.nativeElement as HTMLVideoElement|HTMLAudioElement;\r\n    }\r\n}\r\n","<video #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></video>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {AudioPreviewComponent} from '../audio-preview/audio-preview.component';\r\n\r\n@Component({\r\n    selector: 'video-preview',\r\n    templateUrl: './video-preview.component.html',\r\n    styleUrls: ['./video-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VideoPreviewComponent extends AudioPreviewComponent {\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'image-preview',\r\n    templateUrl: './image-preview.component.html',\r\n    styleUrls: ['./image-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImagePreviewComponent extends BaseFilePreview {}\r\n","import {ChangeDetectionStrategy, Component, HostBinding,} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n  selector: 'pdf-preview',\r\n  templateUrl: './pdf-preview.component.html',\r\n  styleUrls: ['./pdf-preview.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PdfPreviewComponent extends BaseFilePreview {\r\n    @HostBinding('class') className = 'preview-object';\r\n\r\n    public getSrc() {\r\n        return super.getSrc() + '#toolbar=0';\r\n    }\r\n}\r\n","<img [src]=\"getSafeSrc()\" class=\"preview-object\">","<iframe [src]=\"getSafeSrc()\"></iframe>","<ng-container *ngIf=\"!(showDefaultPreview$ | async); else defaultPreview\">\r\n    <iframe class=\"preview-object\" #iframe></iframe>\r\n    <div class=\"pop-out-block office-block\" (click)=\"openInNewWindow()\"></div>\r\n</ng-container>\r\n<ng-template #defaultPreview>\r\n    <default-preview></default-preview>\r\n</ng-template>\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\nimport { BaseFilePreview } from '../base-file-preview';\nimport { BehaviorSubject } from 'rxjs';\nimport { GenericBackendResponse } from '@common/core/types/backend-response';\nimport { isAbsoluteUrl } from '@common/core/utils/is-absolute-url';\n\n@Component({\n    selector: 'google-docs-viewer',\n    templateUrl: './google-docs-viewer.component.html',\n    styleUrls: ['./google-docs-viewer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GoogleDocsViewerComponent extends BaseFilePreview implements AfterViewInit {\n    @ViewChild('iframe') iframe: ElementRef<HTMLIFrameElement>;\n    public loading$ = new BehaviorSubject(true);\n    public showDefaultPreview$ = new BehaviorSubject(false);\n    private timeoutRef: any;\n\n    ngAfterViewInit() {\n        // google docs viewer only supports files up to 25MB\n        if (this.file.file_size > 25000000) {\n            return this.showDefaultPreview();\n        }\n\n        this.iframe.nativeElement.onload = () => {\n            clearTimeout(this.timeoutRef);\n            this.stopLoading();\n        };\n\n        this.getIframeSrc().then(url => {\n            this.iframe.nativeElement.src = url;\n        }).catch(() => {\n            this.showDefaultPreview();\n        });\n\n        // if preview iframe is not loaded\n        // after 5 seconds, bail and show default preview\n        this.timeoutRef = setTimeout(() => {\n            this.showDefaultPreview();\n        }, 5000);\n    }\n\n    public stopLoading() {\n        this.loading$.next(false);\n    }\n\n    public showDefaultPreview() {\n        this.stopLoading();\n        this.showDefaultPreview$.next(true);\n    }\n\n    public openInNewWindow() {\n        window.open(window.location.href, '_blank');\n    }\n\n    private getIframeSrc(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            let previewUrl = this.getSrc();\n\n            // if we're not trying to preview shareable link we will need to generate\n            // preview token, otherwise google won't be able to access this file\n            if (previewUrl.indexOf('shareable_link') === -1) {\n                this.http.post<GenericBackendResponse<{preview_token: string}>>(`uploads/${this.file.id}/add-preview-token`).subscribe(response => {\n                    previewUrl += `?preview_token=${response.preview_token}`;\n                    resolve(this.getFullPreviewUrl(previewUrl));\n                }, () => reject);\n            } else {\n                resolve(this.getFullPreviewUrl(previewUrl));\n            }\n        });\n    }\n\n    private getFullPreviewUrl(previewUrl: string) {\n        // https://docs.google.com/gview?embedded=true&url=\n        previewUrl = isAbsoluteUrl(previewUrl) ? previewUrl : this.settings.getBaseUrl() + previewUrl;\n        return 'https://view.officeapps.live.com/op/embed.aspx?src=' + encodeURIComponent(previewUrl);\n    }\n}\n","import {Inject, Injectable, Injector} from '@angular/core';\r\nimport {FileEntry} from '../uploads/types/file-entry';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\r\nimport {CURRENT_PREVIEW_FILE} from './current-preview-file';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {filter} from 'rxjs/operators';\r\nimport {PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer} from './preview-url-transformer';\r\n\r\ninterface PreviewFilesMeta {\r\n    entry?: FileEntry;\r\n    pointer?: number;\r\n    total?: number;\r\n    haveNext?: boolean;\r\n    havePrevious?: boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreviewFilesService {\r\n    private files: FileEntry[] = [];\r\n    private portal = new BehaviorSubject(null);\r\n    private meta: BehaviorSubject<PreviewFilesMeta> = new BehaviorSubject({});\r\n    private previewUriTransformer: PreviewUrlTransformer|null = null;\r\n    public download = new Subject();\r\n\r\n    constructor(\r\n        @Inject(AVAILABLE_PREVIEWS) private availablePreviews: DefaultPreviews,\r\n        private injector: Injector,\r\n    ) {}\r\n\r\n    public pagination(): Observable<PreviewFilesMeta> {\r\n        return this.meta\r\n            .pipe(filter(data => data && !!data.entry));\r\n    }\r\n\r\n    public getCurrent(): FileEntry {\r\n        return this.meta.value.entry;\r\n    }\r\n\r\n    public getAllEntries() {\r\n        return this.files;\r\n    }\r\n\r\n    public getPortal(): Observable<ComponentPortal<any>> {\r\n        return this.portal.asObservable();\r\n    }\r\n\r\n    public showNext() {\r\n        if ( ! this.meta.value.haveNext) return;\r\n        this.updateMeta('next');\r\n        this.updatePortal();\r\n    }\r\n\r\n    public showPrevious() {\r\n        if ( ! this.meta.value.havePrevious) return;\r\n        this.updateMeta('previous');\r\n        this.updatePortal();\r\n    }\r\n\r\n    private updateMeta(dir?: 'next'|'previous'|number) {\r\n        let newPointer = 0;\r\n\r\n        if (typeof dir === 'string') {\r\n            const oldPointer = this.meta.value.pointer;\r\n            newPointer = dir === 'next' ? oldPointer + 1 : oldPointer - 1;\r\n        } else if (typeof dir === 'number') {\r\n            newPointer = dir;\r\n        }\r\n\r\n        this.meta.next({\r\n            pointer: newPointer,\r\n            entry: this.files[newPointer],\r\n            total: this.files.length,\r\n            haveNext: (newPointer + 1) < this.files.length,\r\n            havePrevious: (newPointer - 1) > -1,\r\n        });\r\n    }\r\n\r\n    private updatePortal() {\r\n        const current = this.getCurrent();\r\n        const comp = (current && this.availablePreviews[current.type]) || DefaultPreviewComponent;\r\n        this.portal.next(new ComponentPortal(comp, null, this.createInjector()));\r\n    }\r\n\r\n    public set(files: FileEntry[], activeFile?: number) {\r\n        if ( ! files || files.length === 0) return;\r\n        this.files = files.filter(entry => entry.type !== 'folder');\r\n        this.updateMeta(activeFile);\r\n        this.updatePortal();\r\n    }\r\n\r\n    private createInjector(): PortalInjector {\r\n        const injectionTokens = new WeakMap();\r\n\r\n        // set currently active preview file\r\n        injectionTokens.set(CURRENT_PREVIEW_FILE, this.getCurrent());\r\n\r\n        // override preview backend uri, if specified\r\n        if (this.previewUriTransformer) {\r\n            injectionTokens.set(PREVIEW_URL_TRANSFORMER, this.previewUriTransformer);\r\n        }\r\n\r\n        return new PortalInjector(this.injector, injectionTokens);\r\n    }\r\n\r\n    public destroy() {\r\n        this.meta.next({});\r\n        this.files = null;\r\n        this.portal.next(null);\r\n    }\r\n\r\n    /**\r\n     * Provide transformer function for preview file backend url.\r\n     * (for changing base uri, adding url params etc)\r\n     */\r\n    public setPreviewUriTransformer(transformer: PreviewUrlTransformer) {\r\n        this.previewUriTransformer = transformer;\r\n    }\r\n}\r\n","import { InjectionToken, Injectable } from '@angular/core';\r\nimport { TextPreviewComponent } from './text-preview/text-preview.component';\r\nimport { VideoPreviewComponent } from './video-preview/video-preview.component';\r\nimport { ImagePreviewComponent } from './image-preview/image-preview.component';\r\nimport { PdfPreviewComponent } from './pdf-preview/pdf-preview.component';\r\nimport { AudioPreviewComponent } from './audio-preview/audio-preview.component';\r\nimport { GoogleDocsViewerComponent } from './google-docs-viewer/google-docs-viewer.component';\r\n\r\nexport const AVAILABLE_PREVIEWS = new InjectionToken<any>('AVAILABLE_PREVIEWS');\r\n\r\n@Injectable()\nexport class DefaultPreviews {\r\n    text = TextPreviewComponent;\r\n    video = VideoPreviewComponent;\r\n    audio = AudioPreviewComponent;\r\n    image = ImagePreviewComponent;\r\n    pdf = PdfPreviewComponent;\r\n    spreadsheet = GoogleDocsViewerComponent;\r\n    powerPoint = GoogleDocsViewerComponent;\r\n    word = GoogleDocsViewerComponent;\r\n}\r\n\r\n","<mat-icon svgIcon=\"password-custom\"></mat-icon>\n<form class=\"content\" (ngSubmit)=\"submitPassword()\" ngNativeValidate>\n    <div class=\"message\" trans>The link you are trying to access is password protected.</div>\n    <div class=\"input-container\">\n        <label for=\"password\" class=\"hidden\" trans>Password</label>\n        <input type=\"password\" id=\"password\" placeholder=\"Password\" [formControl]=\"passwordControl\" trans-placeholder required>\n    </div>\n    <div class=\"button-container\">\n        <div class=\"error\" *ngIf=\"passwordError$ | async\" trans>Password does not match.</div>\n        <button type=\"submit\" mat-raised-button color=\"accent\" trans>Enter</button>\n    </div>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { ShareableLinksApiService } from '../../../sharing/links/shareable-links-api.service';\nimport { ShareableLink } from '../../../sharing/links/models/shareable-link';\n\n@Component({\n    selector: 'link-preview-password-panel',\n    templateUrl: './link-preview-password-panel.component.html',\n    styleUrls: ['./link-preview-password-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkPreviewPasswordPanelComponent {\n    public passwordControl = new FormControl();\n    public passwordError$ = new BehaviorSubject(false);\n\n    @Input() link: ShareableLink;\n    @Output() passwordValid = new EventEmitter(null);\n\n    constructor(private links: ShareableLinksApiService) {}\n\n    public submitPassword() {\n        this.links.checkPassword(this.link.id, this.passwordControl.value)\n            .subscribe(response => {\n               this.handlePasswordCheck(response.matches);\n            }, () => {});\n    }\n\n    private handlePasswordCheck(matches: boolean) {\n        this.passwordError$.next(!matches);\n\n        if (matches) {\n            this.passwordValid.emit(this.passwordControl.value);\n        }\n    }\n}\n","<button mat-icon-button class=\"back-button\" (click)=\"closed.emit(true)\" *ngIf=\"showCloseButton\">\r\n    <mat-icon svgIcon=\"arrow-back\"></mat-icon>\r\n</button>\r\n<ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n    <div class=\"entry-name\">\r\n        <file-icon [type]=\"pagination.entry.type\"></file-icon>\r\n        {{pagination.entry.name}}\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n        <div class=\"navigation\">\r\n            <button mat-icon-button class=\"previous\" [disabled]=\"!pagination.havePrevious\" (click)=\"previewFiles.showPrevious()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-left\"></mat-icon>\r\n            </button>\r\n\r\n            <span class=\"meta\">{{pagination.pointer + 1}} {{'of' | trans}} {{pagination.total}}</span>\r\n\r\n            <button mat-icon-button class=\"next\" [disabled]=\"!pagination.haveNext\" (click)=\"previewFiles.showNext()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n            </button>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <div class=\"actions\">\r\n        <button mat-icon-button (click)=\"downloadFiles()\" [disabled]=\"disableDownload\">\r\n            <mat-icon svgIcon=\"file-download\"></mat-icon>\r\n        </button>\r\n        <ng-content></ng-content>\r\n    </div>\r\n</ng-container>\r\n<a routerLink=\"/drive\" class=\"logo\" *ngIf=\"showLogo && settings.has('branding.logo_light')\">\r\n    <img *ngIf=\"showLogo && settings.get('branding.logo_light')\" [src]=\"settings.get('branding.logo_light')\">\r\n</a>\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'file-preview-toolbar',\n    templateUrl: './file-preview-toolbar.component.html',\n    styleUrls: ['./file-preview-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewToolbarComponent {\n    @Input() showLogo = false;\n    @Input() disableDownload = false;\n    @Input() showCloseButton = false;\n\n    @Output() closed = new EventEmitter();\n\n    constructor(\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n    ) {}\n\n    public downloadFiles() {\n        this.previewFiles.download.next();\n    }\n}\n","<ng-container *ngIf=\"previewFiles.getPortal() | async as portal\">\r\n    <ng-template [cdkPortalOutlet]=\"portal\" (attached)=\"listenForDownloadClick($event)\"></ng-template>\r\n</ng-container>\r\n","import {ChangeDetectionStrategy, Component, ComponentRef, Input, OnChanges, OnDestroy} from '@angular/core';\r\nimport {FileEntry} from '../../uploads/types/file-entry';\r\nimport {PreviewFilesService} from '../preview-files.service';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'preview-container',\r\n    templateUrl: './preview-container.component.html',\r\n    styleUrls: ['./preview-container.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PreviewContainerComponent implements OnChanges, OnDestroy {\r\n    @Input() files: FileEntry[];\r\n    @Input() activeFile: number;\r\n    @Input() disableDownload = false;\r\n    private downloadSub: Subscription;\r\n\r\n    constructor(public previewFiles: PreviewFilesService) {}\r\n\r\n    ngOnChanges(changes) {\r\n        this.previewFiles.set(this.files, this.activeFile);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.previewFiles.destroy();\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n    }\r\n\r\n    public listenForDownloadClick(comp: ComponentRef<BaseFilePreview>) {\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n        if ( ! this.disableDownload) {\r\n            this.downloadSub = comp.instance.download.subscribe(() => {\r\n                this.previewFiles.download.next();\r\n            });\r\n        }\r\n    }\r\n}\r\n","<file-preview-toolbar [showCloseButton]=\"true\" (closed)=\"closeOverlay()\" [disableDownload]=\"!canDownload()\">\r\n    <button mat-icon-button (click)=\"openContextMenu()\" #moreOptionsButton *ngIf=\"!data.hideMoreOptionsBtn\">\r\n        <mat-icon svgIcon=\"more-vert\"></mat-icon>\r\n    </button>\r\n</file-preview-toolbar>\r\n<preview-container [files]=\"data.entries\" [activeFile]=\"data.activeEntry\" [disableDownload]=\"!canDownload()\" #previewContainer></preview-container>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Inject, OnDestroy, ViewChild, } from '@angular/core';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OverlayPanelRef } from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport { OVERLAY_PANEL_DATA } from '@common/core/ui/overlay-panel/overlay-panel-data';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { DownloadEntries } from '../../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\n\nexport interface FilePreviewOverlayData {\n    entries: DriveEntry[];\n    activeEntry?: number;\n    shareableLink?: ShareableLink;\n    password?: string;\n    hideMoreOptionsBtn?: boolean;\n}\n\n@Component({\n    selector: 'file-preview-overlay',\n    templateUrl: './file-preview-overlay.component.html',\n    styleUrls: ['./file-preview-overlay.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewOverlayComponent implements AfterViewInit, OnDestroy {\n    @ViewChild('previewContainer', { read: ElementRef, static: true }) previewContainer: ElementRef;\n    @ViewChild('moreOptionsButton', { read: ElementRef }) optionsButton: ElementRef;\n    private downloadSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private contextMenu: ContextMenu,\n        private overlayRef: OverlayPanelRef,\n        private previewFiles: PreviewFilesService,\n        private currentUser: CurrentUser,\n        @Inject(OVERLAY_PANEL_DATA) public data: FilePreviewOverlayData\n    ) {}\n\n    ngAfterViewInit() {\n        this.bindToDownload();\n        // prevent ghost click from closing preview overlay\n        // when on mobile and single tap opens preview\n        setTimeout(() => {\n            this.previewContainer.nativeElement.addEventListener('click', e => {\n                if ( ! e.target.closest('.preview-object')) {\n                    this.overlayRef.close();\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public openContextMenu() {\n        const origin = this.optionsButton.nativeElement;\n        this.contextMenu.open(DriveContextMenuComponent, origin, {data: {entry: this.previewFiles.getCurrent()}});\n    }\n\n    public closeOverlay() {\n        this.overlayRef.close();\n    }\n\n    public canDownload() {\n        return this.data.entries.every(entry => {\n            if ( ! entry.users) entry.users = [];\n            const user = entry.users && entry.users.find(u => u.id === this.currentUser.get('id'));\n            const userHasDownloadPermission = user && (user.owns_entry || user.entry_permissions.download);\n            return this.data.shareableLink?.allow_download || userHasDownloadPermission;\n        });\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const entries = this.previewFiles.getCurrent();\n            this.store.dispatch(new DownloadEntries([entries], this.data.shareableLink, this.data.password));\n        });\n    }\n}\n","<material-navbar></material-navbar>\r\n\r\n<div class=\"toolbar\">\r\n    <div class=\"breadcrumb\">\r\n        <button mat-icon-button *ngIf=\"isSubFolder()\" (click)=\"openFolder()\" class=\"home-button\">\r\n            <mat-icon svgIcon=\"home\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n        <ng-container *ngFor=\"let folder of breadcrumb$ | async; last as last;\">\r\n            <div class=\"breadcrumb-item\" (click)=\"openFolder(folder)\">{{folder.name}}</div>\r\n            <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"actions\">\r\n        <entries-sort-button [formControl]=\"sortFormControl\"></entries-sort-button>\r\n\r\n        <span class=\"action-separator\"></span>\r\n\r\n        <ng-container *ngIf=\"viewMode$ | async as viewMode\">\r\n            <button mat-icon-button (click)=\"toggleViewMode()\" class=\"view-toggle-button\" [matTooltip]=\"(viewMode === 'list' ? 'Grid view' : 'List view') | trans\">\r\n                <mat-icon [svgIcon]=\"viewMode === 'list' ? 'view-list' : 'view-module'\" class=\"action-icon\"></mat-icon>\r\n            </button>\r\n        </ng-container>\r\n\r\n        <button mat-icon-button (click)=\"download()\" *ngIf=\"data.link.allow_download\" [matTooltip]=\"'Download all' | trans\">\r\n            <mat-icon svgIcon=\"file-download\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n\r\n<ad-host slot=\"ads.file-preview\" class=\"folder-preview-vert-host\"></ad-host>\r\n\r\n<div class=\"files-container\" #filesContainer (click)=\"onClick($event)\">\r\n   <ng-container *ngIf=\"pagination$ | async as pagination\">\r\n       <files-grid [entries]=\"pagination.data\" [disableInteractions]=\"true\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n       <ng-template #filesList>\r\n           <files-list [entries]=\"pagination.data\" [disableInteractions]=\"true\"></files-list>\r\n       </ng-template>\r\n       <no-results-message *ngIf=\"!pagination.data.length\">\r\n           <span primary-text trans>Folder Is Empty</span>\r\n           <span secondary-text trans>No files have been uploaded to this folder yet.</span>\r\n       </no-results-message>\r\n   </ng-container>\r\n</div>\r\n\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n","import {\n    Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ElementRef, OnInit, OnChanges, NgZone,\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FilePreviewOverlayComponent } from '../file-preview-overlay/file-preview-overlay.component';\nimport { Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { finalize } from 'rxjs/operators';\nimport { SortValue } from '../../entries/available-sorts';\nimport { InfiniteScroll } from '@common/core/ui/infinite-scroll/infinite.scroll';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport { DriveState } from '../../state/drive-state';\n\n@Component({\n    selector: 'folder-preview',\n    templateUrl: './folder-preview.component.html',\n    styleUrls: ['./folder-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FolderPreviewComponent extends InfiniteScroll implements OnChanges, OnInit {\n    @Input() data: GetLinkData;\n    @Input() password: string;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef<HTMLDivElement>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n\n    get folder() {\n        return this.data.link.entry;\n    }\n\n    get children() {\n        return this.pagination$.value.data;\n    }\n\n    public loading$ = new BehaviorSubject(false);\n    public breadcrumb$: BehaviorSubject<FileEntry[]> = new BehaviorSubject([]);\n    public pagination$: BehaviorSubject<PaginationResponse<FileEntry>> = new BehaviorSubject(null);\n    private allFolders = {};\n    public sortFormControl = new FormControl({\n        column: 'updated_at',\n        direction: 'desc',\n    });\n\n    constructor(\n        private store: Store,\n        private overlay: OverlayPanel,\n        private router: Router,\n        private linkApi: ShareableLinksApiService,\n        protected zone: NgZone,\n        protected el: ElementRef,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.sortFormControl.valueChanges.subscribe((value: SortValue) => {\n            if (value) {\n                this.loadChildren({}, true);\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.allFolders[this.folder.id] = this.folder;\n        this.generateBreadcrumb(this.folder);\n        this.setPagination(this.data.folderChildren);\n        this.loading$.next(false);\n    }\n\n    public download() {\n        this.store.dispatch(new DownloadEntries([this.folder], this.data.link, this.password));\n    }\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    private openPreviewOverlay(entry: FileEntry) {\n        const entries = this.children.filter(ent => ent.type !== 'folder'),\n            activeEntry = entries.findIndex(e => e.id === entry.id);\n\n        this.overlay.open(FilePreviewOverlayComponent, {\n            position: 'center',\n            origin: 'global',\n            panelClass: 'file-preview-overlay-container',\n            data: {\n                entries: entries.slice(),\n                activeEntry,\n                shareableLink: this.data.link,\n                password: this.password,\n                hideMoreOptionsBtn: true,\n            }\n        });\n    }\n\n    private getEntry(e: MouseEvent): FileEntry {\n        const node = (e.target as HTMLElement).closest('.drive-entry') as HTMLElement;\n        if (node) {\n            return this.children.find(entry => entry.id === +node.dataset.id);\n        }\n    }\n\n    public onClick(e: MouseEvent) {\n        const entry = this.getEntry(e);\n        if ( ! entry) return;\n\n        if (entry.type === 'folder') {\n            this.openFolder(entry);\n        } else {\n            this.openPreviewOverlay(entry);\n        }\n    }\n\n    public isSubFolder() {\n        return this.router.url.indexOf(':') > -1;\n    }\n\n    public openFolder(folder?: FileEntry) {\n        if (folder && this.folder.id === folder.id) return;\n        this.loading$.next(true);\n        this.router.navigate(['/drive/s', this.makeLinkHash(folder)]).then(() => {\n            // reset sort to default, as there's no good way to\n            // pass current sort to parent link preview component\n            this.sortFormControl.reset();\n        });\n    }\n\n    private generateBreadcrumb(folder: FileEntry) {\n        this.breadcrumb$.next(folder.path.split('/').map(folderId => {\n            return this.allFolders[+folderId];\n        }).filter(subFolder => !!subFolder));\n    }\n\n    private loadChildren(params: {page?: number}, replaceChildren = false) {\n        this.loading$.next(true);\n        const order = `${this.sortFormControl.value.column}:${this.sortFormControl.value.direction}`;\n        const page = params.page || this.pagination$.value.current_page;\n        this.linkApi.findByHash(this.makeLinkHash(this.folder), {page, order, withEntries: true})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                const oldChildren = this.children;\n                const pagination = response.folderChildren;\n                if ( ! replaceChildren) {\n                    pagination.data = [...oldChildren, ...pagination.data];\n                }\n                this.setPagination(pagination);\n            });\n    }\n\n    private makeLinkHash(folder?: FileEntry) {\n        let hash = this.data.link.hash;\n        if (folder) hash += ':' + folder.hash;\n        return hash;\n    }\n\n    private setPagination(pagination: PaginationResponse<FileEntry>) {\n        // add shareable link hash to all entries url to avoid permission errors\n        pagination.data = pagination.data.map(entry => {\n            entry.url += `?shareable_link=${this.data.link.id}`;\n            if (this.password) {\n                entry.url += `&password=${this.password}`;\n            }\n            return entry;\n        });\n        this.pagination$.next(pagination);\n    }\n\n    protected loadMoreItems() {\n        const page = this.pagination$.value.current_page + 1;\n        this.loadChildren({page}, false);\n    }\n\n    protected canLoadMore() {\n        return this.pagination$.value.current_page < this.pagination$.value.last_page;\n    }\n\n    protected isLoading() {\n        return this.loading$.value;\n    }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\n    <link-preview-password-panel *ngIf=\"passwordPanelVisible$ | async; else filePreview\" [link]=\"data.link\" (passwordValid)=\"setValidPassword($event)\"></link-preview-password-panel>\n\n    <ng-template #filePreview>\n        <ng-container *ngIf=\"data.link.entry.type === 'folder'\">\n            <folder-preview [data]=\"data\" [password]=\"this.password\">\n                <ng-container *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\">\n                    <span class=\"action-separator\"></span>\n                    <button\n                            mat-flat-button\n                            color=\"accent\"\n                            (click)=\"import()\"\n                            trans\n                    >Import</button>\n                </ng-container>\n            </folder-preview>\n        </ng-container>\n\n        <ng-container *ngIf=\"data.link.entry.type !== 'folder'\">\n            <file-preview-toolbar [showLogo]=\"true\" [disableDownload]=\"!data.link.allow_download\">\n                <a mat-flat-button color=\"accent\" routerLink=\"/login\" *ngIf=\"!currentUser.isLoggedIn()\" trans>Sign In</a>\n                <button\n                        mat-flat-button\n                        color=\"accent\"\n                        (click)=\"import()\"\n                        *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\"\n                        trans\n                >Import</button>\n            </file-preview-toolbar>\n            <ad-host slot=\"ads.file-preview\" class=\"file-preview-vert-host\"></ad-host>\n            <preview-container [files]=\"[data.link.entry]\" [class.has-rek]=\"settings.has('ads.file-preview')\"></preview-container>\n        </ng-container>\n    </ng-template>\n</ng-container>\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnDestroy, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { BehaviorSubject, fromEvent, Observable, Subscription } from 'rxjs';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { Settings } from '@common/core/config/settings.service';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { filter, map } from 'rxjs/operators';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\nimport { VIEW_MODE_KEY } from '../../state/models/drive-state-model';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\n\n@Component({\n    selector: 'link-preview-container',\n    templateUrl: './link-preview-container.component.html',\n    styleUrls: ['./link-preview-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        PreviewFilesService,\n    ]\n})\nexport class LinkPreviewContainerComponent implements OnInit, OnDestroy {\n    public data$: BehaviorSubject<GetLinkData> = new BehaviorSubject(null);\n    public passwordPanelVisible$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n    public password: string;\n    private downloadSub: Subscription;\n\n    /**\n     * Check if current user owns this entry or\n     * already has it imported into their drive.\n     */\n    public get entryAlreadyImported$(): Observable<boolean> {\n        const userId = this.currentUser.get('id');\n        return this.data$.pipe(\n            map(data => data.link),\n            filter(link => !!link && !!link.entry && !!link.entry.users),\n            map(link => link.entry),\n            map(entry => !!entry.users.find(user => user.id === userId))\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private links: ShareableLinksApiService,\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n        public currentUser: CurrentUser,\n        private router: Router,\n        private toast: Toast,\n        private el: ElementRef<HTMLElement>,\n        private localStorage: LocalStorage,\n    ) {}\n\n    ngOnInit() {\n        this.bindToDownload();\n        this.disableContextMenu();\n        this.setViewMode();\n        this.route.params.subscribe(params => {\n            this.links.findByHash(params.hash, {withEntries: true}).subscribe(response => {\n                const linkChanged = response.link.id !== (this.data$.value && this.data$.value.link.id);\n                this.data$.next(response);\n                this.setBackgroundClass(response.link);\n\n                // prevent asking password for nested folders, if user already entered password\n                if (response.link.password && (linkChanged || !this.password)) {\n                    this.togglePasswordPanel(true);\n                } else {\n                    this.togglePasswordPanel(false);\n                    this.showPreview();\n                }\n            }, () => {\n                this.router.navigate(['/404']);\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public import() {\n        this.links.importEntry(this.data$.value.link.id, this.password)\n            .subscribe(response => {\n                const link = this.data$.value.link;\n                link.entry.users = response.users;\n                this.data$.next({...this.data$.value, link});\n                this.toast.open({\n                    message: `\":name\" imported into your drive.`,\n                    replacements: {name: link.entry.name},\n                });\n            });\n    }\n\n    public togglePasswordPanel(value: boolean) {\n        this.passwordPanelVisible$.next(value);\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const link = this.data$.value.link;\n            this.store.dispatch(new DownloadEntries([link.entry], link, this.password));\n        });\n    }\n\n    /**\n     * Show preview for shareable link files.\n     */\n    private showPreview() {\n        const data = this.data$.value;\n        data.link.entry.url += `?shareable_link=${data.link.id}`;\n        if (this.password) {\n            data.link.entry.url += `&password=${this.password}`;\n        }\n        this.data$.next({...data});\n    }\n\n    public setValidPassword(password: string) {\n        this.password = password;\n        this.showPreview();\n        this.togglePasswordPanel(false);\n    }\n\n    private setBackgroundClass(link: ShareableLink) {\n        const className = link.entry.type === 'folder' ? 'folder-link' : 'file-link';\n        this.el.nativeElement.classList.add(className);\n    }\n\n    private disableContextMenu() {\n        fromEvent(this.el.nativeElement, 'contextmenu')\n            .subscribe(e => {\n                e.preventDefault();\n            });\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriveComponent } from './drive.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { AuthGuard } from '@common/guards/auth-guard.service';\nimport { CheckPermissionsGuard } from '../../common/guards/check-permissions-guard.service';\n\nconst dashboardRoutes: Routes = [\n    // shareable links can be accessed by guests\n    {\n        path: 's/:hash',\n        component: LinkPreviewContainerComponent,\n    },\n\n    // main drive routes can only be accessed by logged in users\n    {\n        path: '',\n        component: DriveComponent,\n        canActivate: [AuthGuard, CheckPermissionsGuard],\n        children: [\n            { path: '', component: EntriesContainerComponent},\n            { path: 'shares', component: EntriesContainerComponent},\n            { path: 'search', component: EntriesContainerComponent},\n            { path: 'recent', component: EntriesContainerComponent},\n            { path: 'starred', component: EntriesContainerComponent},\n            { path: 'trash', component: EntriesContainerComponent},\n            { path: 'folders/:hash', component: EntriesContainerComponent},\n            {\n                path: 'workspaces',\n                loadChildren: () => import('src/app/drive/workspace-wrapper.module').then(m => m.WorkspaceWrapperModule)\n            },\n        ]\n    },\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(dashboardRoutes)\n    ],\n    exports: [\n        RouterModule\n    ],\n})\nexport class DriveRoutingModule {}\n","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._getStrokeCircumference() * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._getStrokeCircumference() * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { DriveContextMenuComponent } from './components/drive-context-menu/drive-context-menu.component';\r\n\r\nexport const DRIVE_CONTEXT_MENUS = {\r\n    entry: DriveContextMenuComponent,\r\n};\r\n","<file-icon [mime]=\"upload.uploadedFile.mime\"></file-icon>\n<div class=\"content\">\n    <div class=\"meta\">\n        <div class=\"name\" [matTooltip]=\"upload.uploadedFile.name\">{{upload.uploadedFile.name}}</div>\n        <div class=\"time-left\" *ngIf=\"progress.percentage && progress.percentage < 100 && !upload.error$.value\">\n            {{progress.eta}}\n            <span trans>left</span>\n        </div>\n        <div class=\"actions\">\n            <mat-icon\n                    svgIcon=\"error\"\n                    *ngIf=\"upload.error$ | async as error; else noError\"\n                    class=\"error-icon\"\n                    [matTooltip]=\"error | trans\"\n                    matTooltipPosition=\"left\"\n            ></mat-icon>\n            <ng-template #noError>\n                <mat-icon svgIcon=\"check-circle\" *ngIf=\"upload.completed\" class=\"completed-icon\"></mat-icon>\n                <span class=\"cancel-button\" *ngIf=\"!upload.completed\" (click)=\"cancelUpload(upload)\" trans>Cancel</span>\n            </ng-template>\n        </div>\n    </div>\n    <mat-progress-bar mode=\"determinate\" [value]=\"progress.percentage\" color=\"accent\"></mat-progress-bar>\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueItem, UploadQueueItemProgress } from '@common/uploads/upload-queue/upload-queue-item';\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../../state/actions/commands';\nimport { throttleTime } from 'rxjs/operators';\nimport { animationFrameScheduler, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel-item',\n    templateUrl: './uploads-panel-item.component.html',\n    styleUrls: ['./uploads-panel-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelItemComponent implements OnInit, OnDestroy {\n    @Input() upload: UploadQueueItem;\n    public progress: UploadQueueItemProgress = {};\n    private subscription: Subscription;\n\n    constructor(\n        private uploadQueue: UploadQueueService,\n        private store: Store,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.subscription = this.upload.progress$.pipe(\n            // material progress bar animation lasts 250ms\n            throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}),\n        ).subscribe(progress => {\n            this.progress = progress;\n            this.cd.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public cancelUpload(upload: UploadQueueItem) {\n        this.uploadQueue.remove(upload.id);\n        if (this.uploadQueue.isEmpty()) {\n            this.store.dispatch(new CloseUploadsPanel());\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"info\">\n        <ng-container *ngIf=\"activeUploads.count$ | async as count\">\n            <ng-container *ngIf=\"count.pending > 0\">\n                {{ 'Uploading' | trans }} {{count.pending}} {{(count.pending > 1 ? 'Items' : 'Item') | trans}}\n            </ng-container>\n            <ng-container *ngIf=\"count.pending === 0\">\n                {{count.completed}} {{'items uploaded' | trans}}\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"actions\">\n        <button mat-icon-button (click)=\"toggleMinimized()\">\n            <mat-icon svgIcon=\"keyboard-arrow-up\" *ngIf=\"minimized$ | async; else notMinimized\" class=\"minimize-icon\"></mat-icon>\n            <ng-template #notMinimized>\n                <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"minimize-icon\"></mat-icon>\n            </ng-template>\n        </button>\n        <button mat-icon-button (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n\n<div class=\"uploads-list\" [class.hidden]=\"minimized$ | async\">\n    <uploads-panel-item *ngFor=\"let upload of activeUploads.uploads$ | async; trackBy: trackById\" [upload]=\"upload\"></uploads-panel-item>\n</div>\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\nimport { UploadQueueItem } from '@common/uploads/upload-queue/upload-queue-item';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../state/actions/commands';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel',\n    templateUrl: './uploads-panel.component.html',\n    styleUrls: ['./uploads-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelComponent implements OnDestroy {\n    public minimized$ = new BehaviorSubject(false);\n\n    constructor(\n        private store: Store,\n        public activeUploads: UploadQueueService,\n    ) {\n    }\n\n    ngOnDestroy() {\n        this.activeUploads.reset();\n    }\n\n    public toggleMinimized() {\n        this.minimized$.next(!this.minimized$.value);\n    }\n\n    public close() {\n        this.store.dispatch(new CloseUploadsPanel());\n    }\n\n    public trackById(index: number, upload: UploadQueueItem) {\n        return upload.id;\n    }\n}\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { DownloadEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { downloadFileFromUrl } from '@common/uploads/utils/download-file-from-url';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DownloadHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store,\r\n        private settings: Settings,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(DownloadEntries))\r\n            .subscribe((action: DownloadEntries) => {\r\n                downloadFileFromUrl(this.getDownloadUrl(action));\r\n            });\r\n    }\r\n\r\n    private getDownloadUrl(action: DownloadEntries): string {\r\n        const hashes = this.getEntryHashes(action.entries);\r\n        let base = `${this.settings.getBaseUrl()}secure/uploads/download?hashes=${hashes}`;\r\n        if (action.link) base += `&shareable_link=${action.link.id}`;\r\n        if (action.password) base += `&password=${action.password}`;\r\n        return base;\r\n    }\r\n\r\n    /**\r\n     * Get hashes string for specified entries or for currently selected entries.\r\n     */\r\n    private getEntryHashes(entries?: FileEntry[]): string {\r\n        if ( ! entries) {\r\n            entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n        }\r\n\r\n        return entries.map(entry => entry.hash).join(',');\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { OpenFilePreview } from '../actions/commands';\r\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { FilePreviewOverlayComponent } from '../../preview/file-preview-overlay/file-preview-overlay.component';\r\nimport { DriveState } from '../drive-state';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class OverlayHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private overlay: OverlayPanel,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(OpenFilePreview))\r\n            .subscribe((action: OpenFilePreview) => {\r\n                const entries = this.store.selectSnapshot(DriveState.entries).filter(e => e.type !== 'folder');\r\n                const selectedEntry = this.store.selectSnapshot(DriveState.selectedEntry);\r\n                const activeEntry = entries.findIndex(e => e.id === selectedEntry?.id);\r\n                this.overlay.open(FilePreviewOverlayComponent, {\r\n                    position: 'center',\r\n                    origin: 'global',\r\n                    panelClass: 'file-preview-overlay-container',\r\n                    data: {entries: entries.slice(), activeEntry: activeEntry === -1 ? 0 : activeEntry},\r\n                });\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofAction, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { AddStar, HideLoadingToast, RemoveStar, RestoreTrashedEntries, ShowLoadingToast } from '../actions/commands';\r\nimport {\r\n    EntryRenamed,\r\n    FileDeleteSuccess,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated, NotEnoughSpaceError,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess\r\n} from '../actions/events';\r\nimport { Toast } from '@common/core/ui/toast.service';\r\nimport { LinkCopySuccess } from '../../sharing/links/share-link.state';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingToastComponent } from '../../messages/loading-toast/loading-toast.component';\r\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ToastHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private toast: Toast,\r\n        private store: Store,\r\n        private router: Router,\r\n    ) {\r\n        this.entriesDeleted();\r\n        this.entriesStarred();\r\n        this.entriesUnstarred();\r\n        this.entriesMoveFailed();\r\n        this.folderCreated();\r\n        this.entriesMoved();\r\n        this.entriesDeletedForever();\r\n        this.entriesRestoredFromTrash();\r\n        this.entryRenamed();\r\n        this.linkCopiedToClipboard();\r\n        this.notEnoughSpace();\r\n        this.loadingToast();\r\n    }\r\n\r\n    private entriesDeleted() {\r\n        this.actions$\r\n            .pipe(ofAction(FileDeleteSuccess))\r\n            .subscribe((action: FileDeleteSuccess) => {\r\n                const msg = {message: `Deleted :count items.`, replacements: {count: action.deletedFiles.length}};\r\n                this.toast.open(msg, {action: 'UNDO'})\r\n                    .onAction().subscribe(() => {\r\n                        this.store.dispatch(new RestoreTrashedEntries(action.deletedFiles));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesStarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(AddStar))\r\n            .subscribe((action: AddStar) => {\r\n                this.toast.open(`Star added.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new RemoveStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesUnstarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(RemoveStar))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.toast.open(`Star Removed.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new AddStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesMoved() {\r\n        this.actions$.pipe(ofAction(MoveEntriesSuccess))\r\n            .subscribe((action: MoveEntriesSuccess) => {\r\n                this.toast.open(\r\n                    {message: 'Moved :count items.', replacements: {count: action.entries.length}}\r\n                );\r\n            });\r\n    }\r\n\r\n    private entriesMoveFailed() {\r\n        this.actions$.pipe(ofAction(MoveEntriesFailed))\r\n            .subscribe(() => {\r\n                this.toast.open('There was an issue with moving selected items.');\r\n            });\r\n    }\r\n\r\n    private folderCreated() {\r\n        this.actions$.pipe(ofAction(NewFolderCreated))\r\n            .subscribe(() => {\r\n                this.toast.open('Folder created.');\r\n            });\r\n    }\r\n\r\n    private entriesDeletedForever() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesDeleteSuccess))\r\n            .subscribe((action: TrashedEntriesDeleteSuccess) => {\r\n                this.toast.open({\r\n                    message: `Permanently deleted :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entriesRestoredFromTrash() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesRestoreSuccess))\r\n            .subscribe((action: TrashedEntriesRestoreSuccess) => {\r\n                this.toast.open({\r\n                    message: `Restored :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entryRenamed() {\r\n        this.actions$.pipe(ofActionSuccessful(EntryRenamed))\r\n            .subscribe((action: EntryRenamed) => {\r\n                this.toast.open({\r\n                    message: `:oldName renamed to :newName`,\r\n                    replacements: {oldName: action.entry.name, newName: action.newName}\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    private linkCopiedToClipboard() {\r\n        this.actions$.pipe(ofActionSuccessful(LinkCopySuccess))\r\n            .subscribe(() => {\r\n                this.toast.open(`Link copied to clipboard.`);\r\n            });\r\n    }\r\n\r\n    private notEnoughSpace() {\r\n        this.actions$.pipe(ofActionSuccessful(NotEnoughSpaceError))\r\n            .subscribe(() => {\r\n                this.toast.open(`You are out of space. Try to delete some files.`, {action: 'Upgrade'})\r\n                    .onAction().subscribe(() => {\r\n                        this.router.navigate(['/billing/upgrade']);\r\n                    });\r\n            });\r\n    }\r\n\r\n    private loadingToast() {\r\n        let toastRef: MatSnackBarRef<any>;\r\n\r\n        this.actions$.pipe(ofActionSuccessful(ShowLoadingToast))\r\n            .subscribe((action: ShowLoadingToast) => {\r\n                toastRef = this.toast.openComponent(LoadingToastComponent, {duration: 0, data: {message: action.message}});\r\n            });\r\n\r\n        this.actions$.pipe(ofActionSuccessful(HideLoadingToast))\r\n            .subscribe(() => {\r\n                if (toastRef) {\r\n                    toastRef.dismiss();\r\n                    toastRef = null;\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'loading-toast',\n    templateUrl: './loading-toast.component.html',\n    styleUrls: ['./loading-toast.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingToastComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {message: string}) {}\n}\n","import { Actions, ofActionDispatched, Store } from '@ngxs/store';\r\nimport { OpenConfirmDialog, OpenDialog } from '../actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\r\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\n\r\n@Injectable()\r\nexport class DialogHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private dialog: Modal,\r\n        private store: Store,\r\n    ) {\r\n        this.actions$.pipe(ofActionDispatched(OpenDialog))\r\n            .subscribe((action: OpenDialog) => {\r\n                this.dialog.open(action.dialog, action.data, action.config);\r\n            });\r\n\r\n        this.actions$.pipe(ofActionDispatched(OpenConfirmDialog))\r\n            .subscribe((action: OpenConfirmDialog) => {\r\n                this.openConfirmDialog(action);\r\n            });\r\n    }\r\n\r\n    private openConfirmDialog(action: OpenConfirmDialog) {\r\n        this.dialog.open(ConfirmModalComponent, action.data)\r\n            .beforeClosed()\r\n            .subscribe(confirmed => {\r\n                if ( ! confirmed) return;\r\n                return this.store.dispatch(action.confirmAction);\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { CloseUploadsPanel, OpenUploadsPanel } from '../actions/commands';\r\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { UploadsPanelComponent } from '../../uploads/uploads-panel/uploads-panel.component';\r\nimport { OverlayPanelRef } from '@common/core/ui/overlay-panel/overlay-panel-ref';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { OverlayPanelConfig } from '@common/core/ui/overlay-panel/overlay-panel-config';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst overlayConfig: OverlayPanelConfig = {\r\n    origin: 'global',\r\n    hasBackdrop: false,\r\n    position: {right: '10px', bottom: '10px'},\r\n    mobilePosition: {left: 0, bottom: 0}\r\n};\r\n\r\n@Injectable()\r\nexport class UploadPanelHandler {\r\n    private uploadPanelRef: OverlayPanelRef<UploadsPanelComponent>;\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n        private overlayPanel: OverlayPanel,\r\n    ) {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(OpenUploadsPanel))\r\n            .subscribe(() => {\r\n                this.openUploadsPanel();\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(CloseUploadsPanel))\r\n            .subscribe(() => {\r\n               this.closeUploadsPanel();\r\n            });\r\n\r\n        this.currentUser.model$.subscribe(() => {\r\n            this.closeUploadsPanel();\r\n        });\r\n    }\r\n\r\n    public openUploadsPanel() {\r\n        if (this.uploadPanelRef) return;\r\n        this.uploadPanelRef = this.overlayPanel\r\n            .open(UploadsPanelComponent, overlayConfig);\r\n    }\r\n\r\n    private closeUploadsPanel() {\r\n        if ( ! this.uploadPanelRef) return;\r\n        this.uploadPanelRef.close();\r\n        this.uploadPanelRef = null;\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RemoveEntries, RemoveStar } from '../actions/commands';\r\nimport { filter } from 'rxjs/operators';\r\nimport { DriveState } from '../drive-state';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RemoveStarHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(RemoveStar))\r\n            .pipe(filter(() => {\r\n                const name = this.store.selectSnapshot(DriveState.activePage).name;\r\n                return name === DRIVE_PAGE_NAMES.STARRED;\r\n            }))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.store.dispatch(new RemoveEntries(action.entries));\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RouterNavigation, RouterState } from '@ngxs/router-plugin';\r\nimport {\r\n    FolderPageOpened,\r\n    RecentEntriesPageOpened,\r\n    SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    TrashPageOpened, WorkspacesIndexPageOpened,\r\n} from '../actions/events';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst LINK_PREVIEW_PAGE = 's';\r\n\r\n@Injectable()\r\nexport class PageLoadHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n    ) {\r\n        this.actions$\r\n            .pipe(\r\n                ofActionSuccessful(RouterNavigation),\r\n                filter((action: RouterNavigation) => action.event.urlAfterRedirects.indexOf('drive') > -1),\r\n                filter(() => this.currentUser.isLoggedIn()),\r\n            )\r\n            .subscribe(() => {\r\n                const action = this.getPageLoadAction();\r\n                if (action) this.store.dispatch(action);\r\n            });\r\n    }\r\n\r\n    private getPageLoadAction() {\r\n        const params = this.getPageUriParams();\r\n        switch (params.pageName) {\r\n            case DRIVE_PAGE_NAMES.RECENT:\r\n                return new RecentEntriesPageOpened();\r\n            case DRIVE_PAGE_NAMES.TRASH:\r\n                return new TrashPageOpened();\r\n            case DRIVE_PAGE_NAMES.SHARES:\r\n                return new SharesFolderOpened();\r\n            case DRIVE_PAGE_NAMES.STARRED:\r\n                return new StarredPageOpened();\r\n            case DRIVE_PAGE_NAMES.SEARCH:\r\n                const state = this.store.selectSnapshot(RouterState.state);\r\n                const search = state.root.firstChild.queryParams;\r\n                return new SearchPageOpened({type: search.type, query: search.query});\r\n            case DRIVE_PAGE_NAMES.WORKSPACES:\r\n                return new WorkspacesIndexPageOpened();\r\n            case LINK_PREVIEW_PAGE:\r\n                return null;\r\n            default:\r\n                return new FolderPageOpened(params.folderHash);\r\n        }\r\n    }\r\n\r\n    private getPageUriParams() {\r\n        // remove query params\r\n        const uri = this.store.selectSnapshot(RouterState.url).split('?')[0];\r\n        const [, pageName, folderHash] = uri.split('/').filter(x => !!x);\r\n        return {pageName, folderHash};\r\n    }\r\n}\r\n","import { Store } from '@ngxs/store';\r\nimport { DeselectAllEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { filter } from 'rxjs/operators';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class PageChangeHandler {\r\n    constructor(\r\n        private store: Store\r\n    ) {\r\n        this.store.select(DriveState.activePage)\r\n            .pipe(filter(page => !!page))\r\n            .subscribe(() => {\r\n                this.store.dispatch(new DeselectAllEntries());\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { ReloadPageEntries } from '../actions/commands';\r\nimport { DriveDomCacheService } from '../../interactions/drive-dom-cache.service';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class ResetScrollHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private domCache: DriveDomCacheService\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(ReloadPageEntries))\r\n            .subscribe(() => {\r\n                this.domCache.scrollCont.scrollTo({top: 0});\r\n            });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharingPermissionsButtonComponent } from './sharing-permissions-button/sharing-permissions-button.component';\nimport { ShareDialogComponent } from './share-dialog/share-dialog.component';\nimport { EntriesAccessTableComponent } from './entries-access-table/entries-access-table.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LinkOptionsComponent } from './links/link-options/link-options.component';\nimport { ShareLinkDialogComponent } from './share-link-dialog/share-link-dialog.component';\nimport { NoSharedEntriesComponent } from './no-shared-entries/no-shared-entries.component';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\nimport { ChipsModule } from '@common/core/ui/chips/chips.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatSlideToggleModule,\n        MatTabsModule,\n        MatDialogModule,\n        ChipsModule,\n        MatIconModule,\n        MatMenuModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n    ],\n    declarations: [\n        ShareDialogComponent,\n        EntriesAccessTableComponent,\n        SharingPermissionsButtonComponent,\n        LinkOptionsComponent,\n        ShareLinkDialogComponent,\n        NoSharedEntriesComponent,\n    ],\n    exports: [\n        NoSharedEntriesComponent,\n    ],\n    providers: [\n        Modal,\n    ]\n})\nexport class SharingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ContextMenuDirective} from '@common/core/ui/context-menu/context-menu.directive';\n\n\n@NgModule({\n    declarations: [\n        ContextMenuDirective,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        ContextMenuDirective,\n    ]\n})\nexport class ContextMenuModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TextPreviewComponent} from './text-preview/text-preview.component';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {PreviewContainerComponent} from './preview-container/preview-container.component';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {VideoPreviewComponent} from './video-preview/video-preview.component';\r\nimport {ImagePreviewComponent} from './image-preview/image-preview.component';\r\nimport {PdfPreviewComponent} from './pdf-preview/pdf-preview.component';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {AudioPreviewComponent} from './audio-preview/audio-preview.component';\r\nimport {GoogleDocsViewerComponent} from './google-docs-viewer/google-docs-viewer.component';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {PreviewFilesService} from '@common/file-preview/preview-files.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        PortalModule,\r\n        MatButtonModule,\r\n        LoadingIndicatorModule,\r\n    ],\r\n    exports: [\r\n        PreviewContainerComponent,\r\n    ],\r\n    declarations: [\r\n        PreviewContainerComponent,\r\n        TextPreviewComponent,\r\n        VideoPreviewComponent,\r\n        ImagePreviewComponent,\r\n        PdfPreviewComponent,\r\n        DefaultPreviewComponent,\r\n        AudioPreviewComponent,\r\n        GoogleDocsViewerComponent\r\n    ],\r\n    providers: [\r\n        OverlayPanel,\r\n        PreviewFilesService,\r\n        {provide: AVAILABLE_PREVIEWS, useClass: DefaultPreviews},\r\n    ]\r\n})\r\nexport class FilePreviewModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WorkspaceSelectorComponent } from './workspace-selector.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslationsModule } from '../../core/translations/translations.module';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [\n      WorkspaceSelectorComponent,\n  ],\n  imports: [\n      CommonModule,\n      TranslationsModule,\n\n      // material\n      MatMenuModule,\n      MatButtonModule,\n      MatIconModule,\n  ],\n  exports: [\n      WorkspaceSelectorComponent,\n  ]\n})\nexport class WorkspaceSelectorModule { }\n","import { Injector, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DriveRoutingModule } from './drive-routing.module';\nimport { DriveComponent } from './drive.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FoldersTreeComponent } from './sidebar/folders-tree/folders-tree.component';\nimport { FilesGridComponent } from './files/components/files-grid/files-grid.component';\nimport { FileThumbnailComponent } from './files/components/file-thumbnail/file-thumbnail.component';\nimport { FilesGridItemComponent } from './files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { DriveHammerInteractionsDirective } from './interactions/drive-hammer-interactions.directive';\nimport { FileIconComponent } from './files/components/file-icon/file-icon.component';\nimport { DRIVE_CONTEXT_MENUS } from './context-actions/drive-context-menus';\nimport { DriveContextMenuComponent } from './context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { SidebarActionButtonsComponent } from './sidebar/sidebar-action-buttons/sidebar-action-buttons.component';\nimport { CrupdateFolderDialogComponent } from './folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { RenameEntryDialogComponent } from './entries/rename-entry-dialog/rename-entry-dialog.component';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { EntryBreadcrumbsComponent } from './drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component';\nimport { UploadsPanelComponent } from './uploads/uploads-panel/uploads-panel.component';\nimport { MoveEntriesDialogComponent } from './entries/move-entries-dialog/move-entries-dialog.component';\nimport { FolderDropTargetDirective } from './interactions/drop-targets/folder-drop-target.directive';\nimport { DriveToolbarComponent } from './drive-toolbar/drive-toolbar.component';\nimport { ToolbarActionsComponent } from './drive-toolbar/toolbar-actions/toolbar-actions.component';\nimport { MainSearchbarComponent } from './search/main-searchbar/main-searchbar.component';\nimport { UploadDropzoneComponent } from './uploads/upload-dropzone/upload-dropzone.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { DetailsPanelComponent } from './details-sidebar/details-panel/details-panel.component';\nimport { FilePreviewOverlayComponent } from './preview/file-preview-overlay/file-preview-overlay.component';\nimport { FilePreviewToolbarComponent } from './preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component';\nimport { OverlayHandler } from './state/handlers/overlay-handler';\nimport { DownloadHandler } from './state/handlers/donwlod-handler';\nimport { ToastHandler } from './state/handlers/toast-handler';\nimport { UploadPanelHandler } from './state/handlers/upload-panel-handler';\nimport { DialogHandler } from './state/handlers/dialog-handler';\nimport { SharingModule } from './sharing/sharing.module';\nimport { DetailsSidebarComponent } from './details-sidebar/details-sidebar.component';\nimport { FileListHeaderComponent } from './header/file-list-header/file-list-header.component';\nimport { DriveInfiniteScrollDirective } from './interactions/drive-infinite-scroll.directive';\nimport { ResetScrollHandler } from './state/handlers/reset-scroll-handler';\nimport { FilesListComponent } from './files/components/files-list/files-list.component';\nimport { ToggleSelectedClassDirective } from './interactions/toggle-selected-class.directive';\nimport { PageChangeHandler } from './state/handlers/page-change-handler';\nimport { PageLoadHandler } from './state/handlers/page-load-handler';\nimport { RemoveStarHandler } from './state/handlers/remove-star-handler';\nimport { NoFolderEntriesComponent } from './messages/no-folder-entries/no-folder-entries.component';\nimport { NoTrashedEntriesComponent } from './messages/no-trashed-entries/no-trashed-entries.component';\nimport { NoStarredEntriesComponent } from './messages/no-starred-entries/no-starred-entries.component';\nimport { NoRecentEntriesComponent } from './messages/no-recent-entries/no-recent-entries.component';\nimport { UploadsPanelItemComponent } from './uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { ShareDialogState } from './sharing/state/share-dialog.state';\nimport { ShareLinkState } from './sharing/links/share-link.state';\nimport { DriveState } from './state/drive-state';\nimport { AvailableSpaceIndicatorComponent } from './sidebar/available-space-indicator/available-space-indicator.component';\nimport { LoadingToastComponent } from './messages/loading-toast/loading-toast.component';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { LinkPreviewPasswordPanelComponent } from './preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component';\nimport { ContextActionsContainerComponent } from './context-actions/components/context-actions-container/context-actions-container.component';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from './upload-input-config';\nimport { NoSearchEntriesComponent } from './messages/no-search-entries/no-search-entries.component';\nimport { EntryDescriptionPanelComponent } from './details-sidebar/details-panel/entry-description-panel/entry-description-panel.component';\nimport { FolderPreviewComponent } from './preview/folder-preview/folder-preview.component';\nimport { EntriesSortButtonComponent } from './header/entries-sort-button/entries-sort-button.component';\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { ContextMenuModule } from '@common/core/ui/context-menu/context-menu.module';\nimport { AdHostModule } from '@common/core/ui/ad-host/ad-host.module';\nimport { FilePreviewModule } from '@common/file-preview/file-preview.module';\nimport { AVAILABLE_CONTEXT_MENUS } from '@common/core/ui/context-menu/available-context-menus';\nimport { UploadsModule } from '@common/uploads/uploads.module';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\nimport { Settings } from '../../common/core/config/settings.service';\nimport { WorkspaceSelectorModule } from '../../common/workspaces/workspace-selector/workspace-selector.module';\nimport { SkeletonModule } from '../../common/core/ui/skeleton/skeleton.module';\nimport {\n    WORKSPACE_CONFIG, WorkspaceConfig\n} from '../../common/workspaces/workspace-config';\nimport { DatatableModule } from '../../common/datatable/datatable.module';\n\nexport const STATE_HANDLERS = [\n    OverlayHandler,\n    DownloadHandler,\n    ToastHandler,\n    UploadPanelHandler,\n    DialogHandler,\n    ResetScrollHandler,\n    PageChangeHandler,\n    PageLoadHandler,\n    RemoveStarHandler,\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        UploadsModule,\n        DriveRoutingModule,\n        FilePreviewModule,\n        FormsModule,\n        SharingModule,\n        MaterialNavbarModule,\n        TranslationsModule,\n        FormatPipesModule,\n        ReactiveFormsModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n        ContextMenuModule,\n        AdHostModule,\n        WorkspaceSelectorModule,\n        SkeletonModule,\n        DatatableModule,\n\n        // material\n        MatSidenavModule,\n        MatTreeModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressBarModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatTabsModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n\n        // state\n        NgxsModule.forFeature([\n            DriveState,\n            ShareDialogState,\n            ShareLinkState,\n        ]),\n    ],\n    declarations: [\n        DriveComponent,\n        SidebarComponent,\n        FoldersTreeComponent,\n        FilesGridComponent,\n        FileThumbnailComponent,\n        DriveHammerInteractionsDirective,\n        FilesGridItemComponent,\n        FileIconComponent,\n        DriveContextMenuComponent,\n        SidebarActionButtonsComponent,\n        CrupdateFolderDialogComponent,\n        RenameEntryDialogComponent,\n        EntryDragPreviewComponent,\n        DriveToolbarComponent,\n        EntryBreadcrumbsComponent,\n        UploadsPanelComponent,\n        MoveEntriesDialogComponent,\n        FolderDropTargetDirective,\n        ToolbarActionsComponent,\n        MainSearchbarComponent,\n        UploadDropzoneComponent,\n        NoFolderEntriesComponent,\n        NoTrashedEntriesComponent,\n        NoStarredEntriesComponent,\n        NoRecentEntriesComponent,\n        NoSearchEntriesComponent,\n        EntriesContainerComponent,\n        DetailsSidebarComponent,\n        DetailsPanelComponent,\n        FilePreviewOverlayComponent,\n        FilePreviewToolbarComponent,\n        FileListHeaderComponent,\n        DriveInfiniteScrollDirective,\n        FilesListComponent,\n        ToggleSelectedClassDirective,\n        UploadsPanelItemComponent,\n        AvailableSpaceIndicatorComponent,\n        LoadingToastComponent,\n        LinkPreviewContainerComponent,\n        LinkPreviewPasswordPanelComponent,\n        ContextActionsContainerComponent,\n        EntryDescriptionPanelComponent,\n        FolderPreviewComponent,\n        EntriesSortButtonComponent,\n    ],\n    providers: [\n        // fix angular lazy loaded entry components issue\n        OverlayPanel,\n        PreviewFilesService,\n        Toast,\n\n        // handlers\n        ...STATE_HANDLERS,\n        {\n            provide: AVAILABLE_CONTEXT_MENUS,\n            useValue: DRIVE_CONTEXT_MENUS,\n            multi: true,\n        },\n        {\n            provide: DRIVE_UPLOAD_INPUT_CONFIG,\n            deps: [Settings],\n            useFactory: (settings) => {\n                const uploadInputConfig: UploadInputConfig = {multiple: true};\n\n                const extensions = settings.getJson('drive.validation.allowed_extensions');\n                if (extensions) {\n                    uploadInputConfig.extensions = extensions.map(ext => '.' + ext);\n                }\n\n                return uploadInputConfig;\n            },\n        },\n        {\n            provide: WORKSPACE_CONFIG,\n            useValue: {\n                description: 'Workspaces are shared spaces where teams can store, share and collaborate on files and folders.',\n            } as WorkspaceConfig\n        }\n    ]\n})\nexport class DriveModule {\n    constructor(private injector: Injector) {\n        STATE_HANDLERS.forEach(handler => this.injector.get(handler));\n    }\n}\n","/**\r\n * Download file from specified url.\r\n */\r\nexport function downloadFileFromUrl(url: string, name?: string) {\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    if (name) link.download = name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","<mat-spinner [diameter]=\"30\"></mat-spinner>\r\n<span trans>{{ data.message }}</span>","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MAT_TAB_CONTENT, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const platform = this._platform;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n//# sourceMappingURL=tabs.js.map","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"]}